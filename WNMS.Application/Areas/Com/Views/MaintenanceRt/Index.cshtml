
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>保养提醒</title>
    <link href="~/css/hyl.css" rel="stylesheet" />
    <link href="~/css/bootstrap.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/zlw.css">
    <link href="~/css/hyl.css" rel="stylesheet" />
    <link href="~/css/bootstrap-table.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/anniu.css">
    <link rel="stylesheet" href="~/css/font-awesome.min.css">
    <link href="~/lib/layer/layer.css" rel="stylesheet" />

    <script src="~/js/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/js/bootstrap-table.min.js"></script>
    <script src="~/js/bootstrap-table-zh-CN.min.js"></script>

    <script src="~/lib/layer/layer.js"></script>
    <script src="~/lib/My97DatePicker/WdatePicker.js"></script>

</head>
<body>
    <div class="zlw_manage">
        <div class="zlw_managecon" style="padding-left:0px">
            <div class="zlw_manageconrgcon zlw_bfxx">

                <div class="" style="height:51px;border-bottom:1px solid #ddd">
                    <div class="btn-group pull-left" style="margin-top:10px;margin-left:10px">
                        <input type="text" id="searchtext" class="hyl_input" placeholder="输入器件名称或设备名称" autocomplete="off" />
                        <button class="hyl_btn" id="searchbtn"> <i class="fa fa-search"></i> 查询</button>
                    </div>
                    <div class="btn-group mar10px  pull-right">
                        @*@await Component.InvokeAsync("ModuleButtons")*@
                        @*<button type="button" class="btn btn-default" id="okbtn"><i class="fa fa-plus"></i> 标记已读</button>*@
                        @*<button type="button" class="btn btn-default" id="Add_btn"><i class="fa fa-plus"></i>添加保养记录</button>*@

                    </div>
                </div>

                <!-- 表格 -->
                <div class="zlw_manageconrgconsan" style="height:calc(100% - 50px);margin-top:10px">
                    <table id="table" class="table-striped">
                    </table>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        var pageindex = 1;
        var order = "", sort = "";
        $(function () {
            // 时间选择
            $(".zlw_mjkzyi ul li").not("#detailType").click(function () {
                $(this).siblings('.zlw_mjkzyi ul li').removeClass('sjlbxz');  // 删除其他兄弟元素的样式
                $(this).addClass('sjlbxz');// 添加当前元素的样式

                if ($(this)[0].id == "自定义") {
                    $("#detailType").css("display", "block");
                }
                else {
                    $("#detailType").css("display", "none");
                    pageindex = 1;
                    refreshTable();
                }

            })


            var $table = $("#table");
            $table.bootstrapTable({
                method: "post",
                url: "/Com/MaintenanceRt/QueryMaintenanceRtTable",
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                height: $(window).height() - 90,
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                pageList: [10, 15, 20],        //可供选择的每页的行数（*）
                contentType: "application/x-www-form-urlencoded",
                queryParams: function (params) {
                    var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                        pagesize: params.limit,   //每页条数
                        pageindex: (params.offset / params.limit) + 1, //页码
                        SearchText: $("#searchtext").val(),
                        order: params.order,
                        sort: params.sort == undefined ? "DayCount" : params.sort
                    };
                    order = params.order;
                    sort = params.sort == undefined ? "DayCount" : params.sort;
                    pageindex = (params.offset / params.limit) + 1;
                    return temp;
                },//传递参数（*）
                uniqueId: "no",                     //每一行的唯一标识，一般为主键列
                showToggle: false,                    //是否显示详细视图和列表视图的切换按钮

                responseHandler: function (res) {
                    var aa = JSON.parse(res.rows);
                    return {
                        'total': res.total, //总的数据长度
                        'rows': JSON.parse(res.rows) //单页查询返回的数据
                    }
                },
                columns: [
                    //{
                    //    checkbox: true
                    //},

                    {
                        sortable: true,
                        field: 'Name',
                        title: '器件名称',
                        //formatter: function (value, row, index) {
                        //    return '<a href="#" style="color: blue" onclick="AddMaintenance(\'' + row.AccessoriesID + '\' )">' + value + '</a>';
                        //}
                    },
                    {

                        field: 'Type',
                        title: '器件类型',
                        width: 150
                    }
                    ,
                    {

                        field: 'DeviceName',
                        title: '设备名称'
                    },
                    {
                        sortable: true,
                        field: 'MaintenanceDate',
                        title: '保养到期日',
                        formatter: function (value, row, index) {
                            var daynum = row.DayCount
                            if (row.DayCount < 0) {
                                daynum = 0;
                            } else {
                                daynum = row.DayCount;
                            }
                            if (row.DayCount <= 3) {
                                return value.replace("T", " ").substring(0, 10) + "<span style='padding-left:10px;display:inline-block;line-height:30px'>(<span style='color:#c9302c'>" + daynum + "天</span>)</span>"
                            } else if (value <= 5) {
                                return value.replace("T", " ").substring(0, 10) + "<span style='padding-left:10px;display:inline-block;line-height:30px'>(<span style='color:#ec971f'>" + daynum + "天</span>)</span>"
                            }
                            else {
                                return value.replace("T", " ").substring(0, 10) + "<span style='padding-left:10px;display:inline-block;line-height:30px'>(<span style='color:#31b0d5'>" + daynum + "天</span>)</span>"
                            }
                        }
                    },
                    //{
                    //    field: 'DayCount',#ec971f
                    //    title: '剩余天数',
                    //    formatter: function (value, row, index) {
                    //        if (value < 3) {
                    //            return "<button class='btn btn-sm  btn-danger'>" + value + "</button>"
                    //        } else if (value < 5) {
                    //            return "<button class='btn btn-sm btn-warning'>" + value + "</button>"
                    //        } else {
                    //            return "<button class='btn btn-sm btn-info'>" + value + "</button>"
                    //        }
                    //    }
                    //}
                    //,
                    {
                        field: 'isok',
                        title: '保养状态',
                        formatter: function (value, row, index) {
                            if (value == "未保养") {
                                return "<button class='btn btn-sm  btn-success'>" + value + "</button>"
                            } else {
                                return "<button class='btn btn-sm btn-danger'>" + value + "</button>"
                            }
                        }
                    }
                ]

            });


        })
        function operateFormatter(value, row, index) {
            var aa = value;

            return " <button type='button' class='hyl_btn' onclick='GetPosition(" + row.Lng + "," + row.Lat + "," + JSON.stringify(row.StationNum) + "," + JSON.stringify(row.StationName) + ")'>查看定位</button>";

        }
        function changeDateFormat(cellval) {
            if (cellval != null) {
                var date = cellval.replace("T", " ").substring(0, 10);
                return date;
            }
        }

        $("#searchbtn").click(function () {
            pageindex = 1;
            refreshTable();

        })
        $("#searchtext").keydown(function (e) {
            if (e.keyCode == 13) {
                pageindex = 1;
                refreshTable();
                return false;
            }
        });
        function refreshTable() {
            var opt = {
                pageNumber: pageindex
            };
            $("#table").bootstrapTable('refresh', opt);

        }
        $("#Add_btn").click(function () {
            AddMaintenance();

        })
        //标记已读
        $("#okbtn").click(function () {
            var lenthcheck = $("#table").bootstrapTable('getSelections');
            if (lenthcheck.length <= 0) {
                layer.msg("请至少选中一行", {
                    offset: 't',
                    anim: 6
                });
            } else {
                var id = "";
                for (i = 0; i < lenthcheck.length; i++) {
                    id += lenthcheck[i].ID + ",";
                }
                id = id.substring(0, id.length - 1);
                layer.confirm("是否标记已读？", {
                    btn: ["确定", "取消"]
                },
                    function () {
                        DeleteMaintenance(id);
                    },
                    function () { }
                );
            }
        })

        //标记已读
        function DeleteMaintenance(id) {
            $.ajax({
                url: '/Com/Maintenance/DeleteMaintenance',
                type: 'POST',
                datatype: "json",
                //contentType: 'application/json',
                data: { "": id },
                success: function (data) {
                    if (data == "ok") {
                        layer.msg("标记成功");
                        pageindex = 1;
                        refreshTable();
                    }
                    else {
                        if (data == "no") {
                            layer.msg("标记失败");
                        }
                        else {
                            layer.alert(data);
                            pageindex = 1;
                            refreshTable();
                        }
                    }
                },
                error: function (data) {
                    layer.msg("标记失败");
                }
            })
        }
        //添加保养记录
        function AddMaintenance(id) {

            iframe("添加保养记录", "800px", "580px", "/Com/Maintenance/AddPage/" + id);

            //var row = $("#table").bootstrapTable('getSelections');
            //if (row.length != 1) {
            //    layer.msg("请选中一行", {
            //        offset: 't',
            //        anim: 6
            //    });
            //} else {
            //      iframe("添加保养记录", "800px", "580px", "/Com/Maintenance/AddPage/"+row[0].AccessoriesID);
            //}
        }

        function iframe(title, width, height, url) {
            layer.open({
                type: 2,
                title: title,
                shadeClose: true,
                shade: 0.7,
                area: [width, height],
                content: url,
                btn: ["提交", "取消"],
                yes: function (index, layero) {

                    window.frames[0].saveForm();
                },
                cancel: function (index) {

                }
            });
        }
    </script>
</body>
</html>

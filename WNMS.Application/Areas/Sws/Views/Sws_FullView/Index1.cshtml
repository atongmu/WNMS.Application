
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>二供全览</title>
    <link rel="Shortcut Icon" href="~/UploadImg/Logo/logo.png" />
    <link href="~/DataV/css/css.css" rel="stylesheet" />
    <link rel="stylesheet" href="../../css/gdmap.css">
    <link rel="stylesheet" href="../../css/hyl.css">
    <link href="../../css/ztreefont.css" rel="stylesheet">
    <script src="~/js/jquery-1.12.4.min.js"></script>
    <script src="~/js/echarts.min.js"></script>
    <script src="~/DataV/js/jquery.kxbdMarquee.js"></script>
    <script type="text/javascript" src="~/DataV/js/echarts-liquidfill.min.js"></script>
    <!-- Arcgis -->
    <link href="~/4.22/esri/themes/light/main.css" rel="stylesheet" />
    <script src="~/4.22/init.js"></script>
    <style>
        .amap-container img {
            position: relative;
            left: -1px;
            top: 1px;
        }

        .clearfloat {
            zoom: 1;
        }

        .zlw_bjzblf {
            position: relative;
            z-index: 2;
        }

        .zlw_bjzblfer p {
            position: relative;
        }

            .zlw_bjzblfer p i {
                position: absolute;
                bottom: 0;
                left: 120px;
                margin: 0 !important;
            }

        .amap-overlays {
            z-index: 9999 !important;
        }
        .esri-popup_footer, .esri-popup_button--dock, .esri-popup__inline-actions-container {
            display: none;
        }
    </style>
</head>
<body>
    <div class="zlw_content">

        <!-- star  body -->
        <div class="zlw_body clearfloat">
            <!-- star left -->
            <div class="zlw_body_lf">
                <!-- star 设备类型对比 -->
                <div class="zlw_sjlx">
                    <div class="zlw_title">
                        <p>设备类型对比</p>
                    </div>
                    <div class="zlw_sjlxcon">
                        <div id="mian_lef_lxdb" class="mian_lef_lxdb">
                            <div class="zlw_ldt">
                                <img src="../../DataV/images/07.png" class="dtyi" alt="">
                                <img src="../../DataV/images/06-4.png" class="dter" alt="">
                                <img src="../../DataV/images/06-3.png" class="dtsan" alt="">
                            </div>

                            <div class="mian_lef_lxdbcondk">
                                <ul class="mian_lef_lxdbcon clearfloat" id="devicetycount">
                                    <li><P>无负压设备  <i>40</i> </P></li>
                                    <li><P>BTG水箱设备  <i>25</i> </P></li>
                                    <li><P>ZBD设备  <i>10</i> </P></li>
                                    <li><P>BTG-B设备  <i>0</i> </P></li>
                                    <li><P>直饮水设备  <i>25</i> </P></li>
                                    <li><P>智能泵房  <i>0</i> </P></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 设备类型对比 end -->
                <!-- star 设备报警对比 -->
                <div class="zlw_sbbj">
                    <div class="zlw_sbbj_title">
                        <p>报警类型对比</p>
                    </div>
                    <div class="zlw_sbbjcon">
                        <!-- star 报警指标 -->
                        <div class="zlw_bjzb clearfloat">
                            <div class="zlw_bjzblf">
                                <div class="zlw_bjzblfyi">
                                    <p>报警指标</p>
                                </div>
                                <div class="zlw_bjzblfer">
                                    <p><span>报警数量</span><i id="eventcount">0</i></p>
                                    <p><span>总设备数量</span> <i id="devicecount">0</i> </p>
                                </div>
                            </div>
                            <div class="zlw_bjzbrg">
                                <div id="sbbj_bjzs_r"></div>
                            </div>
                        </div>
                        <!-- 报警指标 end -->
                        <!-- star 报警分类 -->
                        <div class="zlw_bjzb clearfloat">
                            <div class="zlw_bjzblf">
                                <div class="zlw_bjzblfyi">
                                    <p>报警分类指数</p>
                                </div>
                                <div class="zlw_bjzblfer zlw_bjerzblfer">
                                    <p><span>紧急报警</span><i id="level1">0</i></p>
                                    <p><span>一般报警</span><i id="level2">0</i> </p>
                                    <p><span>提示报警</span><i id="level3">0</i> </p>
                                </div>
                            </div>
                            <div class="zlw_bjzbrg">
                                <div id="sbbj_bjfl_r"></div>
                            </div>
                        </div>
                        <!-- 报警分类 end -->
                    </div>
                </div>
                <!-- 设备报警对比 end -->
            </div>
            <!-- left end -->
            <!-- star middle -->
            <div class="zlw_body_mid">
                <div class="zlw_body_con">
                    <!--  -->
                    <div class="zlw_body_conyi" id="zlw_body_conyi">
                        @*<div class="zlw_body_conyitop"></div>*@
                        <!-- 四个角直角 -->
                        <div class="dwtopl"></div>
                        <div class="dwtopr"></div>
                        <div class="dwbotl"></div>
                        <div class="dwbotr"></div>
                        <div class="map" id="container"></div>
                    </div>
                    <div class="zlw_body_coner">

                        <div class="zlw_body_conertitle">
                            <p>泵房统计</p>
                        </div>
                        <div class="zlw_body_conercon">
                            <ul class="clearfloat">
                                <li>
                                    <img src="~/DataV/images/全部泵房.png" alt="">
                                    <span id="stationNum">0</span>
                                    <p>泵房总数</p>
                                </li>
                                <li>
                                    <img src="~/DataV/images/正常泵房.png" alt="">
                                    <span id="okNum">0</span>
                                    <p>在线泵房</p>
                                </li>
                                <li>
                                    <img src="~/DataV/images/离线泵房.png" alt="">
                                    <span id="outNum">0</span>
                                    <p>离线泵房</p>
                                </li>
                                <li>
                                    <img src="~/DataV/images/报警泵房.png" alt="">
                                    <span id="alerNum">0</span>
                                    <p>报警泵房</p>
                                </li>


                            </ul>
                        </div>
                        <!-- 四个角直角 -->
                        <div class="xdwtopl"></div>
                        <div class="xdwtopr"></div>
                        <div class="xdwbotl"></div>
                        <div class="xdwbotr"></div>
                    </div>
                </div>
            </div>
            <!-- middle end -->
            <!-- star right -->
            <div class="zlw_body_rg">
                <div class="zlw_body_rg_top">
                    <ul class="clearfloat">
                        <!-- 通讯方式 -->
                        <li>
                            <div class="zlw_rg_title">
                                <p>本周报警Top5</p>
                            </div>
                            <div class="zlw_rg_content clearfloat">
                                <div class="zlw-ztnrrgkeryi" id="zlw-ztnrrgkeryi"></div>
                            </div>
                        </li>
                        <!-- 厂家对比 -->
                        <li>
                            <div class="zlw_rg_title">
                                <p>设备添加数量</p>
                            </div>
                            <div class="zlw_rg_content">
                                <div id="zlw-ztnrlf-botkconyi"></div>
                            </div>
                        </li>
                    </ul>
                </div>
                <!-- star 分区监控 -->
                <div class="zlw_body_rg_bottom">
                    <!-- 四个角直角 -->
                    <div class="xdwtopl"></div>
                    <div class="xxdwtopr"></div>
                    <div class="xdwbotl"></div>
                    <div class="xxdwbotr"></div>
                    <div class="zlw_body_rg_bottom_title">
                        <span>分区监控</span>
                        <span>进/出水(MPa)</span>
                        <span>出水瞬时(m³/h)</span>
                    </div>
                    <div class="zlw_body_rg_bottomcon">
                        <div id="marquee4">
                            <ul id="datalistul">
                            </ul>
                        </div>
                    </div>
                </div>
                <!-- 分区监控 end -->
            </div>
            <!-- right end -->
        </div>
        <!-- body end -->
    </div>

    <script>

        // 报警指标
        var echartsSbbj_bjzs_r = echarts.init(document.getElementById('sbbj_bjzs_r'));
        var echartsSbbj_bjzs_rsetOption = ({
            series: [{
                type: 'liquidFill',
                radius: '70%',
                amplitude: '8%',
                data: [0.6],
                outline: {
                    show: false
                },
                shape: 'diamond',
                backgroundStyle: {
                    borderWidth: 4,
                    padding: 5,
                    borderColor: '#40a8ff',
                    color: 'rgba(0,0,0,0)'
                },
                itemStyle: {
                    normal: {
                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                            offset: 0,
                            color: '#0A8AF9'
                        }, {
                            offset: 1,
                            color: '#5453FD'
                        }]),
                        shadowColor: '#6978F2',
                        shadowBlur: 20
                    }
                },
                label: {
                    normal: {
                        //formatter: (value * 100).toFixed(2) + '%',
                        textStyle: {
                            fontSize: 18,
                            color: '#53dbfd',
                            insideColor: '#ffffff'
                        }
                    }
                }
            }]

        })
        // 报警分类指数
        var echartSsbbj_bjfl_r = echarts.init(document.getElementById('sbbj_bjfl_r'));
        var echartSsbbj_bjfl_rsetOption = ({
            tooltip: {
                trigger: 'item',
                formatter: '{a} <br/>{b}: {c} ({d}%)'
            },
            // legend: {
            //     orient: 'vertical',
            //     left: -10,
            //     data: ['GPRS', '以太网', '互联网']
            // },
            color: ['#ff7200', '#02a4c7', '#e72847',],
            series: [
                {
                    name: '',
                    type: 'pie',
                    radius: ['50%', '70%'],
                    center: ["50%", "50%"],
                    avoidLabelOverlap: false,
                    label: {
                        normal: {
                            show: false,
                            position: 'center'
                        },
                        emphasis: {
                            show: true,
                            textStyle: {
                                fontSize: '20',
                                fontWeight: 'bold'
                            }
                        }
                    },
                    labelLine: {
                        normal: {
                            show: false
                        }
                    },
                    data: [
                        { value: 335, name: '紧急报警' },
                        { value: 310, name: '一般报警' },
                        { value: 234, name: '提示报警' }
                    ]
                }
            ]
        })
        // 通讯方式
        var myChart5 = echarts.init(document.getElementById('zlw-ztnrrgkeryi'));
        // 指定图表的配置项和数据

        var myChart5setOption = ({
            color: ['#C25D74', '#EDABB4', '#9186ED'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            grid: {
                left: '5%',
                right: '10%',
                bottom: '3%',
                top: '3%',
                containLabel: true
            },
            xAxis: {
                type: 'value',
                boundaryGap: [0, 0.01],
                axisLabel: {
                    textStyle: {
                        fontSize: 12,
                        color: "#fff"
                    }
                },
                splitLine: {//控制网格的线条样式
                    show: true,
                    lineStyle: {
                        color: '#999',
                        width: 0,
                        type: 'deshed'
                    }
                }
            },
            yAxis: {
                type: 'category',
                data: ['小流量加压不成功', '软件超压', '定时停机', '设备下线', '小流量保压停机'],
                axisLabel: {
                    textStyle: {
                        fontSize: 12,
                        color: "#fff"
                    }
                }


            },
            series: [
                {
                    name: '数量',
                    type: 'bar',
                    barWidth: '50%',
                    data: [10, 20, 20, 30, 40, 45],
                    label: {
                        normal: {
                            show: true,
                            position: 'inside',
                            textStyle: {
                                color: '#fff'
                            }
                        },

                    },

                    itemStyle: {
                        //柱形图圆角，鼠标移上去效果
                        emphasis: {
                            color: new echarts.graphic.LinearGradient(
                                1, 1, 0, 1,
                                [
                                    { offset: 0, color: '#e56600' },
                                    { offset: 0.7, color: '#ee8027' },
                                    { offset: 1, color: '#f8a766' }
                                ]
                            )
                        },
                        normal: {
                            color: new echarts.graphic.LinearGradient(
                                1, 1, 0, 1,
                                [
                                    { offset: 0, color: '#f8a766' },
                                    { offset: 0.5, color: '#ee8027' },
                                    { offset: 1, color: '#e56600' }
                                ]
                            )
                        }
                    },

                    //itemStyle: {
                    //    normal: {
                    //        color: new echarts.graphic.LinearGradient(1, 0, 0, 0, [{
                    //            offset: 0,
                    //            color: "#009788" // 0% 处的颜色
                    //        }, {
                    //            offset: 0.6,
                    //            color: "#026A61" // 60% 处的颜色
                    //        }], false),
                    //    }
                    //}

                }

            ]
        });
        //设备添加数量
        var echartMain_rig_sbbj_top = echarts.init(document.getElementById('zlw-ztnrlf-botkconyi'));
        var echartMain_rig_sbbj_topsetOption = ({
            tooltip: {
                trigger: 'axis'
            },
            grid: {
                left: 35,
                right: 35,
                top: 20,
                bottom: 15,
                containLabel: true
            },
            xAxis: {
                type: 'category',
                boundaryGap: false,
                axisLine: {//x轴的样式控制
                    show: true,　//显示与否
                    lineStyle: {//线条样式
                        color: '#2c345c',
                        width: 1,
                        type: 'solid'
                    }
                },
                axisLabel: {//控制x轴上的文字的样式
                    show: true,//显示与否
                    textStyle: {
                        color: '#a5ccfc',
                    },//控制x轴字体样式
                    fontSize: 12,
                    margin: 10,
                },
                data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月']
            },
            yAxis: [{
                type: 'value',
                //name : 'm³',
                nameTextStyle: {
                    color: '#fff',
                    fontSize: 15
                },
                splitLine: {//控制网格的线条样式
                    show: true,
                    lineStyle: {
                        color: {
                            type: 'linear',
                            x: 0,
                            y: 0,
                            x2: 1,
                            y2: 1,
                            colorStops: [{
                                offset: 0, color: 'rgba(7,25,82,0.4)' // 0% 处的颜色
                            },
                            {
                                offset: 0.5, color: 'rgba(87,98,133,1)' // 100% 处的颜色
                            },
                            {
                                offset: 1, color: 'rgba(7,25,82,0.4)' // 100% 处的颜色
                            }],
                            global: false // 缺省为 false
                        },
                        width: 1,
                        type: 'solid'
                    }
                },
                axisLine: {//x轴的样式控制
                    show: true,　//显示与否
                },
                axisTick: {
                    show: false,
                },
                axisLabel: {//控制x轴上的文字的样式
                    show: true,//显示与否
                    textStyle: {
                        color: '#a5ccfc',
                    },//控制x轴字体样式
                }
            }

            ],
            series: [
                {
                    type: 'line',
                    symbolSize: 5, // 设定实心点的大小
                    data: [320, 372, 171, 156, 210, 140, 180, 170, 165, 190, 222],
                    smooth: true,
                    itemStyle: {
                        color: '#1fbcfe'
                    },
                    areaStyle: {
                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                            offset: 0,
                            color: 'rgba(31, 188, 254,0.8)'
                        }, {
                            offset: 1,
                            color: 'rgba(31, 188, 254,0)'
                        }])
                    }
                }
            ]
        })
        // 跟随页面自适应
        window.onresize = function () {

            echartsSbbj_bjzs_r.resize();
            echartSsbbj_bjfl_r.resize();
            echartMain_rig_sbbj_top.resize();
            myChart5.resize();
        }
        var map;
        var markers = [];
        var markerClusterer;
        var mapselect;
        var infoWindow;
        var clusters;
        var isselect = 0;
        var areaname = '@Html.Raw(@ViewBag.AreaName)';


        //gis start

         var lng =@ViewBag.lng;
        var lat = @ViewBag.lat;
        var zoomend = @ViewBag.zoom;
        var isselect = 0;
        var view;
        var graphicsLayer;
        var ArcgisUrl = '@ViewBag.ArcgisUrl'
        var graid = "";


        require(["esri/config", "esri/Map", "esri/views/MapView", "esri/layers/TileLayer", "esri/Graphic",
            "esri/layers/GraphicsLayer", "esri/rest/locator", "esri/geometry/Point", "esri/geometry/support/webMercatorUtils", "esri/symbols/TextSymbol","esri/widgets/Popup"], function (esriConfig, Map, MapView, TileLayer, Graphic, GraphicsLayer, Point, locator, webMercatorUtils, TextSymbol,popup) {

            document.onkeydown = keyDownSearch;
            function keyDownSearch(e) {
                // 兼容FF和IE和Opera    
                var theEvent = e || window.event;
                var code = theEvent.keyCode || theEvent.which || theEvent.charCode;
                // 13 代表 回车键
                if (code == 13) {
                    // 要执行的函数 或者点击事件
                    if ($("#stationName").val() != "") {
                        isselect = 1;
                    }
                    LoadZoomData(zoomend);
                }
                return true;
            }

                var layer = new TileLayer({
                    //url:
                    //    "https://192.168.0.234:6443/arcgis/rest/services//tile/MapServer" //自己的底图地址
                    url: ArcgisUrl //自己的底图地址
                });

                var map = new Map({
                    basemap: "",
                    layers: [layer]
                });
            let pt = {
                x: lng,
                y: lat,
                spatialReference: 2436
            };
                view = new MapView({
                    map: map,
                    center: pt, // Longitude, latitude
                    zoom: zoomend, // Zoom level
                    container: "container", // Div element
                    spatialReference: 2436,
                    constraints: {
                        minScale: 140000, // User cannot zoom out beyond a scale of 1:500,000
                        maxScale: 0, // User can overzoom tiles
                    }
                });

            graphicsLayer = new GraphicsLayer();
            map.add(graphicsLayer);
            LoadPumState();
            view.watch("stationary", function (e) {
                var zoomlevel = this.zoom;
                if (zoomend == zoomlevel) {
                    return;
                }
                zoomend = this.zoom;
                if (e == true) {
                    if (zoomlevel > 5) {
                        LoadZoomData(zoomlevel);
                    } else {
                        graphicsLayer.removeAll();
                        var imageurl;
                        $.post("/Sws/Map/QueryTableData", { typecheck: "正常,故障,离线", stationName: "" }, function (data) {
                            for (var i = 0; i < data.dataTable.length; i++) {
                                if (data.dataTable[i].state == "故障") {
                                    imageurl = '../../images/red.gif';
                                } else if (data.dataTable[i].state == "正常") {
                                    imageurl = '../../images/green.gif';
                                } else {
                                    imageurl = '../../images/grey.gif';
                                }
                                //data.dataTable[i].lng, data.dataTable[i].lat
                                const point = { //Create a point118.338223
                                    type: "point",
                                    x: data.dataTable[i].lng,
                                    y: data.dataTable[i].lat,
                                    spatialReference: 2436,
                                };
                                const pictureMarkerSymbol = {
                                    type: "picture-marker",  // autocasts as new PictureMarkerSymbol()
                                    url: "../../images/bf.png",
                                    width: "32px",
                                    height: "32px"
                                };
                                let textSymbol = {
                                    type: "text",  // autocasts as new TextSymbol()
                                    color: "green",
                                    haloColor: "black",
                                    haloSize: "10px",
                                    text: "出瞬流" + data.dataTable[i].allInFlow,
                                    xoffset: 1,
                                    yoffset: 1,
                                    font: {  // autocasts as new Font()
                                        size: 15,
                                        family: "Josefin Slab",
                                        weight: "bold"
                                    }
                                };
                                const attributes = {
                                    Name: data.dataTable[i].stationID,
                                    x: data.dataTable[i].lng,
                                    y: data.dataTable[i].lat
                                }

                                const pointGraphic = new Graphic({
                                    geometry: point,
                                    symbol: pictureMarkerSymbol,
                                    attributes: attributes
                                });
                                markers.push(pointGraphic);
                                graphicsLayer.add(pointGraphic);
                            }
                        })
                    }
                }
            })
            view.on("pointer-move", function (e) {
                var point1 = e.mapPoint;
                view.hitTest(e)
                    .then(res => {
                        if (res.results.length) {
                            //let gra = res.results.filter(function (results) {
                            //    return results.graphic.layer == graphicsLayer;
                            //})[0].graphic;
                            var gra = res.results[0].graphic;
                            /* PopupInfo(gra, point1);*/
                            if (gra.attributes != null) {
                                //PopupInfo(gra, point1);
                                if (graid != gra.attributes.Name) { 
                                    graid = gra.attributes.Name;
                                    PopupInfo(gra, point1);
                                }
                            }
                        } else {
                            graid = "";
                            view.popup.close();
                        }
                    })
            });
            function PopupInfo(gra, point1) {
                var arrt = gra.attributes;
                $.post("/Sws/Map/LoadDataByStationID", { id: arrt.Name }, function (data) {
                    if (data != null) {
                        var clore = '';
                        if (data.jk.state == "故障") {
                            clore = 'red';
                        } else if (data.jk.state == "正常") {
                            clore = 'green';
                        } else {
                            clore = 'gray';
                        }
                        var table = '<div class="makercon overflow clearfloat pad10px">';
                        table += "<div class='maptitle'><i class='iconfont f24px icon-bengfang " + clore + "'></i><p><span class='fb f16px' onClick=" + '"' + "window.top.homeAddTab('sta" + data.jk.stationID + "','" + data.jk.stationName + "','/Sws/Sws_Detail/Index/" + data.jk.stationID + "')" + '"' + "'>" + data.jk.stationName + "</span></p></div>";
                        table += '<ul class="maplist">';
                        table += '<li class="maplistnr1" ><span>分区</span><span>进水压力</span><span>出水压力</span><span>出水瞬时</span></li>';
                        if (data.jk.deviceJKs.length > 0) {
                            for (var i = 0; i < data.jk.deviceJKs.length; i++) {
                                var pin = data.jk.deviceJKs[i].pressIN;
                                var pout = data.jk.deviceJKs[i].pressOut;
                                if (data.jk.deviceJKs[i].partition == "1") {
                                    table += '<li><span>低区</span>';
                                } else if (data.jk.deviceJKs[i].partition == "2") {
                                    table += '<li><span>中区</span>';
                                }
                                else if (data.jk.deviceJKs[i].partition == "3") {
                                    table += '<li><span>高区</span>';
                                }
                                else if (data.jk.deviceJKs[i].partition == "4") {
                                    table += '<li><span>超高区</span>';
                                } else if (data.jk.deviceJKs[i].partition == "5") {
                                    table += '<li><span>超超高区</span>';
                                } else if (data.jk.deviceJKs[i].partition == "6") {
                                    table += '<li><span>智能泵房</span>';
                                }
                                if (pin.Value == true) {
                                    table += '<span class="red">' + pin.Key + ' MPa' + '</span>'
                                } else {
                                    table += '<span>' + pin.Key + ' MPa' + '</span>'
                                }
                                if (pout.Value == true) {
                                    table += '<span class="red">' + pout.Key + ' MPa' + '</span>'
                                } else {
                                    table += '<span>' + pout.Key + ' MPa' + '</span>'
                                }
                                table += '<span>' + data.jk.deviceJKs[i].inflow + ' m³/h' + '</span>'
                                table += '</li>'
                            }
                        }
                        table += '</ul></div>';
                        var div = document.createElement("div");
                        div.innerHTML = table;
                        const point = {
                            x: arrt.x,
                            y: arrt.y,
                            spatialReference: 2436,
                        };
                        view.popup.open({
                            location: point,
                            content: div
                        });
                    }
                })

            }
            function LoadPumState() {
                $.post("/Sws/Map/QueryTableData", { typecheck: "正常,故障,离线", stationName: "" }, function (data) {
                          for (var i = 0; i < data.dataTable.length; i++) {
                              if (data.dataTable[i].state == "故障") {
                                  imageurl = '../../images/red.gif';
                              } else if (data.dataTable[i].state == "正常") {
                                  imageurl = '../../images/green.gif';
                              } else {
                                  imageurl = '../../images/grey.gif';
                              }
                            //data.dataTable[i].lng, data.dataTable[i].lat
                            const point = { //Create a point118.338223
                                type: "point",
                                x: data.dataTable[i].lng,
                                y: data.dataTable[i].lat,
                                spatialReference: 2436,
                            };
                            const pictureMarkerSymbol = {
                                type: "picture-marker",  // autocasts as new PictureMarkerSymbol()
                                url: imageurl,
                                width: "32px",
                                height: "32px"
                            };
                            let textSymbol = {
                                type: "text",  // autocasts as new TextSymbol()
                                color: "green",
                                haloColor: "black",
                                haloSize: "10px",
                                text: "出瞬流" + data.dataTable[i].allInFlow,
                                xoffset: 1,
                                yoffset: 1,
                                font: {  // autocasts as new Font()
                                    size: 15,
                                    family: "Josefin Slab",
                                    weight: "bold"
                                }
                            };
                            const attributes = {
                                Name: data.dataTable[i].stationID,
                                x: data.dataTable[i].lng,
                                y: data.dataTable[i].lat
                            }
                            //const pointGraphic = new Graphic({
                            //    geometry: point,
                            //    attributes: attributes,
                            //    symbol: textSymbol
                            //});

                            const pointGraphic = new Graphic({
                                geometry: point,
                                symbol: pictureMarkerSymbol,
                                attributes: attributes
                            });
                            graphicsLayer.add(pointGraphic);
                        }
                    })

            }
            function LoadZoomData(zoomlevel) {
                $.post("/Sws/Map/QueryTableData", { typecheck: "正常,故障,离线", stationName: $("#stationName").val() }, function (data) {
                    graphicsLayer.removeAll();
                    if (isselect == 1) {
                        isselect = 0;
                    }
                    var imageurl;
                    for (var i = 0; i < data.dataTable.length; i++) {
                        if (3 <= zoomlevel && zoomlevel <= 5) {
                            if (data.dataTable[i].state == "故障") {
                                imageurl = '../../images/red.gif';
                            } else if (data.dataTable[i].state == "正常") {
                                imageurl = '../../images/green.gif';
                            } else {
                                imageurl = '../../images/grey.gif';
                            }
                            const point = { //Create a point118.338223
                                type: "point",
                                x: data.dataTable[i].lng,
                                y: data.dataTable[i].lat,
                                spatialReference: 2436,
                            };
                            const pictureMarkerSymbol = {
                                type: "picture-marker",  // autocasts as new PictureMarkerSymbol()
                                url: "../../images/bf.png",
                                width: "32px",
                                height: "32px"
                            };
                            const attributes = {
                                Name: data.dataTable[i].stationID,
                                x: data.dataTable[i].lng,
                                y: data.dataTable[i].lat,
                            }

                            const pointGraphic = new Graphic({
                                geometry: point,
                                symbol: pictureMarkerSymbol,
                                attributes: attributes
                            });
                            graphicsLayer.add(pointGraphic);
                            if (data.toLat != 0 && data.toLng != 0) {
                                view.center = point;
                            }
                        }
                        /*else if (zoomlevel == 13) {*/
                        else if (zoomlevel >= 6) {
                            var colorIcon;

                            if (data.dataTable[i].state == "故障") {
                                colorIcon = "red";
                            } else if (data.dataTable[i].state == "正常") {
                                colorIcon = "green";
                            } else {
                                colorIcon = "grey";
                            }

                            const point = { //Create a point118.338223
                                type: "point",
                                x: data.dataTable[i].lng,
                                y: data.dataTable[i].lat,
                                spatialReference: 2436,
                            };
                            let textSymbol = {
                                type: "text",  // autocasts as new TextSymbol()
                                color: colorIcon,
                                haloColor: [255, 255, 255, 1],
                                haloSize: 1,
                                borderLineSize: "10px",
                                backgroundColor: "red",
                                text: "出瞬流 " + data.dataTable[i].allInFlow + "",
                                xoffset: "45px",
                                yoffset: "-7px",
                                angle: 1,
                                font: {  // autocasts as new Font()
                                    size: 12,
                                    family: "Arial",
                                    weight: "WEIGHT_BOLD",
                                    style: "STYLE_NORMAL"
                                }
                            };
                            const attributes = {
                                Name: data.dataTable[i].stationID,
                                x: data.dataTable[i].lng,
                                y: data.dataTable[i].lat,
                            }

                            const pointGraphic = new Graphic({
                                geometry: point,
                                symbol: textSymbol,
                                attributes: attributes
                            });
                            //加坐标点
                            const point1 = { //Create a point118.338223
                                type: "point",
                                x: data.dataTable[i].lng,
                                y: data.dataTable[i].lat,
                                spatialReference: 2436,
                            };
                            const pictureMarkerSymbol = {
                                type: "picture-marker",  // autocasts as new PictureMarkerSymbol()
                                url: "../../images/泵房蓝.png",
                                width: "20px",
                                height: "20px"
                            };
                            const pointGraphic1 = new Graphic({
                                geometry: point1,
                                symbol: pictureMarkerSymbol,
                            });
                            graphicsLayer.add(pointGraphic);
                            graphicsLayer.add(pointGraphic1);
                        }
                    }
                })

            }
            $(".state1").click(function () {
                LoadZoomData(zoomend);
            });
        });
        //gis end
















        //表格滚动
        $(function () {

            //InitMap();
            //LoadDeviceType();
            LoadDeviceNewType();
            LoadEventType();
            LoadEventCount();
            //LoadEventRank();
            LoadNum();
            //LoadPumState();
            LoadDeviceUp();
            LoadJKData();


        })
        // 添加class
        $(function () {
            $(".zlw_header_menu  ul li").click(function () {
                $(this).siblings('.zlw_header_menu  ul li').removeClass('menuact');  // 删除其他兄弟元素的样式
                $(this).addClass('menuact');                            // 添加当前元素的样式
            });
        });


        //设备类型对比
        function LoadDeviceType() {
            $.post("/Sws/Sws_FullView/LoadDeviceChart", {}, function (data) {
                var jsData = JSON.parse(data);
                echartsMian_lef_lxdbsetOption.xAxis[0].data = jsData.devicetypeNatList;
                echartsMian_lef_lxdbsetOption.series[0].data = jsData.devicecount;
                echartsMian_lef_lxdb.setOption(echartsMian_lef_lxdbsetOption);
            })
        }
        //设备类型新对比
        function LoadDeviceNewType() {
            $.post("/Sws/Sws_FullView/LoadDeviceNewChart", {}, function (data) {
                var jsData = JSON.parse(data);
                $("#devicetycount").empty();
                var html = '';
                var itemLength = jsData.devicecount.length > 6 ? 6 : jsData.devicecount.length;

                for (var i = 0; i < itemLength; i++) {
                    html += '<li><P>' + jsData.devicecount[i].DeviceTypeName + ' <i>' + jsData.devicecount[i].CountRtu + '</i> </P></li>';
                }
                $("#devicetycount").append(html);
            })
        }
        //报警分类指数
        function LoadEventType() {
            $.post("/Sws/Sws_FullView/GetpieData", {}, function (data) {
                var jsData = JSON.parse(data);
                $("#level1").html(jsData.level1);
                $("#level2").html(jsData.level2);
                $("#level3").html(jsData.level3);
                echartSsbbj_bjfl_rsetOption.series[0].data = jsData.eventdata;
                echartSsbbj_bjfl_r.setOption(echartSsbbj_bjfl_rsetOption);
                //本周报警Top5
                myChart5setOption.yAxis.data = jsData.name;
                myChart5setOption.series[0].data = jsData.eventsourcelist;
                myChart5.setOption(myChart5setOption);
            })
        }
        //实时报警数量
        function LoadEventCount() {
            $.post("/Sws/Sws_FullView/LoadEventCount", {}, function (data) {
                var jsData = JSON.parse(data);
                $("#eventcount").html(jsData.allcount);
                $("#devicecount").html(jsData.alldevice);
                echartsSbbj_bjzs_rsetOption.series[0].data = jsData.prelist;
                echartsSbbj_bjzs_r.setOption(echartsSbbj_bjzs_rsetOption);
            })
        }
        //本周报警Top5
        function LoadEventRank() {
            $.post("/Sws/Sws_FullView/LoadEventRank", {}, function (data) {
                var jsData = JSON.parse(data);
                myChart5setOption.yAxis.data = jsData.name;
                myChart5setOption.series[0].data = jsData.eventsourcelist;
                myChart5.setOption(myChart5setOption);
            })
        }
        //获取在线离线数量
        function LoadNum() {
            $.post("/Sws/Map/QueryStationNum", {}, function (data) {
                $("#stationNum").html(data.allNum);
                $("#okNum").html(data.onlineNum);
                $("#alerNum").html(data.alarmNum);
                $("#outNum").html(data.offLineNum);
            })
        }
        //本年设备增长
        function LoadDeviceUp() {
            $.post("/Sws/Sws_FullView/loadDeviceUp", {}, function (data) {
                var jsData = JSON.parse(data);
                echartMain_rig_sbbj_topsetOption.xAxis.data = jsData.xAxis;
                echartMain_rig_sbbj_topsetOption.series[0].data = jsData.datas;
                echartMain_rig_sbbj_top.setOption(echartMain_rig_sbbj_topsetOption);
            })
        }
        //设备实时监控
        function LoadJKData() {
            $.post("/Sws/Sws_FullView/LoadDeviceJK", {}, function (data) {
                var jsData = JSON.parse(data);
                $("#datalistul").empty();
                var html = '';
                for (var i = 0; i < jsData.dataList.length; i++) {
                    html += '<li class="clearfloat">';
                    html += '<span>' + jsData.dataList[i].devicename + '</span>';
                    html += '<span>' + jsData.dataList[i].PressIN.Key + ' / ' + jsData.dataList[i].PressOut.Key + '</span>';
                    html += '<span>' + jsData.dataList[i].inflow + '</span>';
                    html += '</li>';
                }
                $("#datalistul").append(html);
                $("#marquee4").kxbdMarquee({ direction: "up", isEqual: false, scrollDelay: 80 });
            })
        }

        //地图初始化
        function InitMap() {
            map = new AMap.Map('container', {
                resizeEnable: true,
                zoom: 11.8,
                pitch: 55, // 地图俯仰角度，有效范围 0 度- 83 度
                viewMode: '3D', // 地图模式
                mapStyle: 'amap://styles/cb2ab58b9b534a8076a1c8244e435d1f', //设置地图的显示样式
                //center: ["118.380003", "35.198453"],
                center: [@ViewBag.lng, @ViewBag.lat],
                layers: [//使用多个图层
                    //  new AMap.TileLayer.Satellite(),
                    //  new AMap.TileLayer.RoadNet()
                ],
                zooms: [6, 14],//设置地图级别范围
            });
            mapselect = new AMap.DistrictSearch({
                extensions: 'all',
                subdistrict: 0
            }).search(areaname, function (status, result) {
                // 外多边形坐标数组和内多边形坐标数组
                var outer = [
                    new AMap.LngLat(-360, 90, true),
                    new AMap.LngLat(-360, -90, true),
                    new AMap.LngLat(360, -90, true),
                    new AMap.LngLat(360, 90, true),
                ];
                var holes = result.districtList[0].boundaries

                var pathArray = [
                    outer
                ];
                pathArray.push.apply(pathArray, holes)
                // var polygon = new AMap.Polygon({
                //    pathL: pathArray,
                //    strokeColor: '#1965E7',
                //   strokeWeight: 5,
                //    fillColor: '#07092E',
                //   fillOpacity: 0.8
                //});
                //var polygon = new AMap.Polygon({
                //    pathL: pathArray,
                //    strokeColor: '#1965E7',
                //    strokeWeight: 5,
                //    fillColor: '#09091a',
                //    fillOpacity: 0.5
                //})
                var polygon = new AMap.Polygon({
                    pathL: pathArray,
                    strokeColor: 'rgba(3,128,230,0.2)',
                    strokeWeight: 2,
                    fillColor: '#00102b',
                    fillOpacity: 0.7
                });


                polygon.setPath(pathArray);
                map.add(polygon)
            })

            //拖动获取设备信息
            AMap.event.addListener(map, "zoomchange", function (e) {
                map.clearInfoWindow();
                LoadZoom();
            });
            //拖动获取设备信息
            AMap.event.addListener(map, "moveend", function (e) {
                //map.clearInfoWindow();
            });
            clusters = new AMap.MarkerClusterer(map, markers, {

            });
        }
        //泵房地图数据加载
        function LoadPumState() {
            $.post("/Sws/Map/QueryTableData", { typecheck: "正常,故障,离线", stationName: "" }, function (data) {
                for (var i = 0; i < data.dataTable.length; i++) {
                    //var marker;
                    if (data.dataTable[i].state == "故障") {
                        var markericon1 = '' +
                            '<div class="tbdw">' +
                            '<div class="round">  ' +
                            '<div class="circle">' +
                            '<img src="../../DataV/images/xxx.png">' +
                            '</div> ' +
                            '<div class="circle_bottom animation "></div>' +
                            '<div class="circle_bottom2 animation2 "></div>' +
                            '</div>' +
                            '</div>';
                        marker = new AMap.Marker({
                            position: [data.dataTable[i].lng, data.dataTable[i].lat],
                            offset: new AMap.Pixel(-32, -10),
                            name: data.dataTable[i].stationName,
                            content: markericon1

                        });
                    } else if (data.dataTable[i].state == "正常") {
                        var markericon2 = '' +
                            '<div>' +
                            '<div class="zhengchang">  ' +
                            '<div class="circle">' +
                            '<img src="../../DataV/images/xxx.png">' +
                            '</div> ' +
                            '<div class="circle_bottom animation "></div>' +
                            '<div class="circle_bottom2 animation2 "></div>' +
                            '</div>' +
                            '</div>';
                        marker = new AMap.Marker({
                            position: [data.dataTable[i].lng, data.dataTable[i].lat],
                            offset: new AMap.Pixel(-32, -10),
                            name: data.dataTable[i].stationName,
                            content: markericon2

                        });
                    } else {
                        var markericon3 = '' +
                            '<div>' +
                            '<div class="xiaxian">  ' +
                            '<div class="circle">' +
                            '<img src="../../DataV/images/xxx.png">' +
                            '</div> ' +
                            '<div class="circle_bottom animation "></div>' +
                            '<div class="circle_bottom2 animation2 "></div>' +
                            '</div>' +
                            '</div>';
                        marker = new AMap.Marker({
                            position: [data.dataTable[i].lng, data.dataTable[i].lat],
                            offset: new AMap.Pixel(-32, -10),
                            name: data.dataTable[i].stationName,
                            content: markericon3

                        });
                    }

                    marker.id = data.dataTable[i].stationID;
                    marker.on('mouseover', function (e) {
                        var id = this.id;
                        LoadStationJkData(id, e);
                    })
                    marker.on('click', function (e) {
                        var id = this.id;
                        LoadStationJkData(id, e);
                    })
                    marker.on('mouseout', function (e) {
                        var id = this.id;
                        map.clearInfoWindow();
                    })
                    marker.on('dblclick', function (e) {
                        map.setZoomAndCenter(map.getZoom() + 1, e.target.getPosition());
                    })
                    map.add(marker);
                    markers.push(marker);
                }
            })
            LoadZPumState();
        }
        //直饮水数据加载//
        function LoadZPumState() {
            $.post("/Sws/Map/QueryZTableData", { typecheck: "正常,故障,离线", stationName: "" }, function (data) {
                for (var i = 0; i < data.dataTable.length; i++) {
                    if (data.dataTable[i].state == "故障") {
                        var markericon1 = '' +
                            '<div>' +
                            '<div class="round">  ' +
                            '<div class="circle">' +
                            '<img src="../../DataV/images/xxx.png">' +
                            '</div> ' +
                            '<div class="circle_bottom animation "></div>' +
                            '<div class="circle_bottom2 animation2 "></div>' +
                            '</div>' +
                            '</div>';
                        marker = new AMap.Marker({
                            position: [data.dataTable[i].lng, data.dataTable[i].lat],
                            offset: new AMap.Pixel(-32, -10),
                            name: data.dataTable[i].stationName,
                            content: markericon1,
                            //offset: new AMap.Pixel(-100, -40),

                        });
                    } else if (data.dataTable[i].state == "正常") {
                        var markericon2 = '' +
                            '<div>' +
                            '<div class="zhengchang">  ' +
                            '<div class="circle">' +
                            '<img src="../../DataV/images/xxx.png">' +
                            '</div> ' +
                            '<div class="circle_bottom animation "></div>' +
                            '<div class="circle_bottom2 animation2 "></div>' +
                            '</div>' +
                            '</div>';
                        marker = new AMap.Marker({
                            position: [data.dataTable[i].lng, data.dataTable[i].lat],
                            name: data.dataTable[i].stationName,
                            offset: new AMap.Pixel(-32, -10),
                            content: markericon2

                        });
                    } else {
                        var markericon3 = '' +
                            '<div>' +
                            '<div class="xiaxian">  ' +
                            '<div class="circle">' +
                            '<img src="../../DataV/images/xxx.png">' +
                            '</div> ' +
                            '<div class="circle_bottom animation "></div>' +
                            '<div class="circle_bottom2 animation2 "></div>' +
                            '</div>' +
                            '</div>';
                        marker = new AMap.Marker({
                            position: [data.dataTable[i].lng, data.dataTable[i].lat],
                            name: data.dataTable[i].stationName,
                            offset: new AMap.Pixel(-32, -10),
                            content: markericon3

                        });
                    }

                    marker.id = data.dataTable[i].stationID;
                    marker.on('mouseover', function (e) {
                        var id = this.id;
                        LoadZStationJkData(id, e);
                    })
                    marker.on('click', function (e) {
                        var id = this.id;
                        LoadZStationJkData(id, e);
                    })
                    marker.on('mouseout', function (e) {
                        var id = this.id;
                        map.clearInfoWindow();
                    })
                    marker.on('dblclick', function (e) {
                        map.setZoomAndCenter(map.getZoom() + 1, e.target.getPosition());
                    })
                    map.add(marker);
                    markers.push(marker);
                }
            })
        }

        //地图级别数据加载
        //根据不同的地图级别获取方法
        function LoadZoom() {
            map.remove(markers);
            if (map.getZoom() > 9.9) {
                LoadZoomData(map.getZoom());
            } else {
                var markericon1 = '' +
                    '<div>' +
                    '<div class="round">  ' +
                    '<div class="circle">' +
                    '<img src="../../DataV/images/xxx.png">' +
                    '</div> ' +
                    '<div class="circle_bottom animation "></div>' +
                    '<div class="circle_bottom2 animation2 "></div>' +
                    '</div>' +
                    '</div>';
                var markericon2 = '' +
                    '<div>' +
                    '<div class="zhengchang">  ' +
                    '<div class="circle">' +
                    '<img src="../../DataV/images/xxx.png">' +
                    '</div> ' +
                    '<div class="circle_bottom animation "></div>' +
                    '<div class="circle_bottom2 animation2 "></div>' +
                    '</div>' +
                    '</div>';
                var markericon3 = '' +
                    '<div>' +
                    '<div class="xiaxian">  ' +
                    '<div class="circle">' +
                    '<img src="../../DataV/images/xxx.png">' +
                    '</div> ' +
                    '<div class="circle_bottom animation "></div>' +
                    '<div class="circle_bottom2 animation2 "></div>' +
                    '</div>' +
                    '</div>';
                $.post("/Sws/Map/QueryTableData", { typecheck: "正常,故障,离线", stationName: $("#stationName").val() }, function (data) {
                    map.remove(markers);
                    if (markers.length > 0) {
                        for (var i = 0; i < markers.length; i++) {
                            clusters.removeMarker(markers[i]);
                            map.remove(markers[i]);
                        }
                    }
                    markers = [];
                    for (var i = 0; i < data.dataTable.length; i++) {
                        if (data.dataTable[i].state == "故障") {
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-32, -10),
                                name: data.dataTable[i].stationName,
                                content: markericon1
                            });
                        } else if (data.dataTable[i].state == "正常") {
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-32, -10),
                                name: data.dataTable[i].stationName,
                                content: markericon2
                            });
                        } else {
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-32, -10),
                                name: data.dataTable[i].stationName,
                                content: markericon3
                            });
                        }

                        marker.id = data.dataTable[i].stationID;
                        markers.push(marker);
                    }


                    $.post("/Sws/Map/QueryZTableData", { typecheck: "正常,故障,离线", stationName: $("#stationName").val() }, function (data1) {
                        for (var i = 0; i < data1.dataTable.length; i++) {
                            if (data1.dataTable[i].state == "故障") {
                                marker = new AMap.Marker({
                                    position: [data1.dataTable[i].lng, data1.dataTable[i].lat],
                                    offset: new AMap.Pixel(-32, -10),
                                    name: data1.dataTable[i].stationName,
                                    content: markericon1

                                });
                            } else if (data1.dataTable[i].state == "正常") {
                                marker = new AMap.Marker({
                                    position: [data1.dataTable[i].lng, data1.dataTable[i].lat],
                                    offset: new AMap.Pixel(-32, -10),
                                    name: data1.dataTable[i].stationName,
                                    content: markericon2

                                });
                            } else {
                                marker = new AMap.Marker({
                                    position: [data1.dataTable[i].lng, data1.dataTable[i].lat],
                                    offset: new AMap.Pixel(-32, -10),
                                    name: data1.dataTable[i].stationName,
                                    content: markericon3

                                });
                            }
                            marker.id = data1.dataTable[i].stationID;
                            markers.push(marker);
                        }
                        var count = markers.length;
                        var _renderClusterMarker = function (context) {
                            var factor = Math.pow(context.count / count, 1 / 18)
                            var div = document.createElement('div');
                            var Hue = 180 - factor * 180;
                            var bgColor = 'hsla(' + Hue + ',100%,50%,0.7)';
                            var fontColor = 'hsla(' + Hue + ',100%,20%,1)';
                            var borderColor = 'hsla(' + Hue + ',100%,40%,1)';
                            var shadowColor = 'hsla(' + Hue + ',100%,50%,1)';
                            div.style.backgroundColor = bgColor
                            var size = Math.round(30 + Math.pow(context.count / count, 1 / 5) * 20);
                            div.style.width = div.style.height = size + 'px';
                            div.style.border = 'solid 1px ' + borderColor;
                            div.style.borderRadius = size / 2 + 'px';
                            div.style.boxShadow = '0 0 1px ' + shadowColor;
                            div.innerHTML = context.count;
                            div.style.lineHeight = size + 'px';
                            div.style.color = fontColor;
                            div.style.fontSize = '14px';
                            div.style.textAlign = 'center';
                            context.marker.setOffset(new AMap.Pixel(-size / 2, -size / 2));
                            context.marker.setContent(div)
                        }
                        map.plugin('AMap.MarkerClusterer', function () {
                            clusters = new AMap.MarkerClusterer(map, markers, {
                                gridSize: 80,
                                renderClusterMarker: _renderClusterMarker,
                                maxZoom: 10
                            });
                        });
                    })
                })


            }
        }
        function LoadZoomData(zoomlevel) {
            $.post("/Sws/Map/QueryTableData", { typecheck: "正常,故障,离线", stationName: $("#stationName").val() }, function (data) {
                map.remove(markers);
                if (markers.length > 0) {
                    for (var i = 0; i < markers.length; i++) {
                        clusters.removeMarker(markers[i]);
                        map.remove(markers[i]);
                    }
                }
                markers = [];
                if (isselect == 1) {
                    if (data.toLat != 0 && data.toLng != 0) {
                        map.setZoomAndCenter(zoomlevel, [data.toLng, data.toLat]); //同时设置地图层级与中心点
                    }
                    isselect = 0;
                }
                for (var i = 0; i < data.dataTable.length; i++) {
                    if (9.10 <= zoomlevel && zoomlevel <= 12.71) {
                        //var marker;
                        if (data.dataTable[i].state == "故障") {
                            var markericon1 = '' +
                                '<div>' +
                                '<div class="round">  ' +
                                '<div class="circle">' +
                                '<img src="../../DataV/images/xxx.png">' +
                                '</div> ' +
                                '<div class="circle_bottom animation "></div>' +
                                '<div class="circle_bottom2 animation2 "></div>' +
                                '</div>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-32, -10),
                                name: data.dataTable[i].stationName,
                                content: markericon1

                            });
                        } else if (data.dataTable[i].state == "正常") {
                            var markericon2 = '' +
                                '<div>' +
                                '<div class="zhengchang">  ' +
                                '<div class="circle">' +
                                '<img src="../../DataV/images/xxx.png">' +
                                '</div> ' +
                                '<div class="circle_bottom animation "></div>' +
                                '<div class="circle_bottom2 animation2 "></div>' +
                                '</div>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-32, -10),
                                name: data.dataTable[i].stationName,
                                content: markericon2

                            });
                        } else {
                            var markericon3 = '' +
                                '<div>' +
                                '<div class="xiaxian">  ' +
                                '<div class="circle">' +
                                '<img src="../../DataV/images/xxx.png">' +
                                '</div> ' +
                                '<div class="circle_bottom animation "></div>' +
                                '<div class="circle_bottom2 animation2 "></div>' +
                                '</div>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-32, -10),
                                name: data.dataTable[i].stationName,
                                content: markericon3

                            });
                        }

                        marker.id = data.dataTable[i].stationID;
                        marker.on('mouseover', function (e) {
                            var id = this.id;
                            LoadStationJkData(id, e);
                        })
                        marker.on('click', function (e) {
                            var id = this.id;
                            LoadStationJkData(id, e);
                        })
                        marker.on('mouseout', function (e) {
                            var id = this.id;
                            map.clearInfoWindow();
                        })
                        marker.on('dblclick', function (e) {
                            map.setZoomAndCenter(map.getZoom() + 1, e.target.getPosition());
                        })
                        map.add(marker);
                        markers.push(marker);
                    }
                    else if (12.71 < zoomlevel && zoomlevel <= 13.28) {
                        //var marker;
                        var markericon4 = '' +
                            //报警 替换下面bgGreen 为 bgRed
                            '<div class="mapiconbox overflow  clearfloat bgGreen zlwdb">' +
                            '<span class="left"><i class="iconfont f18px icon-bengfang white pl5px pr5px"></i></span><p class="left">出瞬流 0.70</p>' +
                            '</div>';

                        if (data.dataTable[i].state == "故障") {
                            markericon4 = '' +
                                //报警 替换下面bgGreen 为 bgRed
                                '<div class="mapiconbox overflow  clearfloat  bgRed zlwdb">' +
                                '<span class="left"><i class="iconfont f18px icon-bengfang white pl5px pr5px"></i></span><p>出瞬流 ' + data.dataTable[i].allInFlow + '</p>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-50, -1),
                                name: data.dataTable[i].stationName,
                                content: markericon4

                            });
                        } else if (data.dataTable[i].state == "正常") {
                            markericon4 = '' +
                                //报警 替换下面bgGreen 为 bgRed
                                '<div class="mapiconbox overflow clearfloat bgGreen zlwdb">' +
                                '<span class="left"><i class="iconfont f18px icon-bengfang white pl5px pr5px"></i></span><p>出瞬流 ' + data.dataTable[i].allInFlow + '</p>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-50, -1),
                                name: data.dataTable[i].stationName,
                                content: markericon4

                            });
                        } else {
                            markericon4 = '' +
                                //报警 替换下面bgGreen 为 bgRed
                                '<div class="mapiconbox overflow clearfloat bgGray zlwdb">' +
                                '<span class="left"><i class="iconfont f18px icon-bengfang white pl5px pr5px"></i></span><p>出瞬流 ' + data.dataTable[i].allInFlow + '</p>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                offset: new AMap.Pixel(-50, -1),
                                name: data.dataTable[i].stationName,
                                content: markericon4

                            });
                        }
                        marker.id = data.dataTable[i].stationID;
                        marker.on('mouseover', function (e) {
                            var id = this.id;
                            LoadStationJkData(id, e);
                        })
                        marker.on('click', function (e) {
                            var id = this.id;
                            LoadStationJkData(id, e);
                        })
                        marker.on('mouseout', function (e) {
                            var id = this.id;
                            map.clearInfoWindow();
                        })
                        marker.on('dblclick', function (e) {
                            map.setZoomAndCenter(map.getZoom() + 1, e.target.getPosition());
                        })
                        map.add(marker);
                        markers.push(marker);
                    }
                    else if (zoomlevel > 13.28) {
                        var markerContent = '';
                        if (data.dataTable[i].state == "故障") {
                            markerContent += '<div class="textCenter makercon-left"><i class="iconfont f24px icon-bengfang red"></i><p class="mt5px">二供泵房</p></div>';

                        } else if (data.dataTable[i].state == "正常") {
                            markerContent += '<div class="textCenter makercon-left"><i class="iconfont f24px icon-bengfang green"></i><p class="mt5px">二供泵房</p></div>';
                        } else {
                            markerContent += '<div class="textCenter makercon-left"><i class="iconfont f24px icon-bengfang gray"></i><p class="mt5px">二供泵房</p></div>';
                        }
                        markerContent += '<div class="makercon-right">';
                        markerContent += '<p class="f16px fb ellipsis1">' + data.dataTable[i].stationName + '</p>';
                        markerContent += '<div class="green f16px fb tb-f">';
                        var szstr = '';//各区数值
                        var fqstr = '<div class="tb-f f12px">';//各区名称
                        if (data.dataTable[i].deviceJKs.length > 0) {
                            for (var j = 0; j < data.dataTable[i].deviceJKs.length; j++) {
                                if (data.dataTable[i].deviceJKs[j].pressOut.Value == true) {
                                    szstr += '<span class="red">' + data.dataTable[i].deviceJKs[j].pressOut.Key + '</span>'
                                } else {
                                    szstr += '<span>' + data.dataTable[i].deviceJKs[j].pressOut.Key + '</span>'
                                }
                                if (data.dataTable[i].deviceJKs[j].partition == 1) {
                                    fqstr += '<span>低区</span>'
                                } else if (data.dataTable[i].deviceJKs[j].partition == 2) {
                                    fqstr += '<span>中区</span>'
                                }
                                else if (data.dataTable[i].deviceJKs[j].partition == 3) {
                                    fqstr += '<span>高区</span>'
                                }
                                else if (data.dataTable[i].deviceJKs[j].partition == 4) {
                                    fqstr += '<span>超高区</span>'
                                }
                            }
                            fqstr += '</div>';
                            szstr += '</div>';
                            markerContent += szstr + fqstr;
                        }
                        markerContent += '</div></div><div class="sj">'
                        //设置宽度
                        var div = document.createElement('div');
                        if (data.dataTable[i].deviceJKs.length == 1) {
                            div.style.width = (data.dataTable[i].deviceJKs.length * 50 + 200) + 'px';
                        }
                        else if (data.dataTable[i].deviceJKs.length == 0) {
                            div.style.width = '300px';
                        }
                        else {
                            div.style.width = (data.dataTable[i].deviceJKs.length * 50 + 125) + 'px';
                        }
                        div.setAttribute("class", "makercon overflow pad10px");

                        div.innerHTML = markerContent;
                        marker = new AMap.Marker({
                            position: [data.dataTable[i].lng, data.dataTable[i].lat],
                            name: data.dataTable[i].stationName,
                            content: div,
                            offset: new AMap.Pixel(-139, -100), //相对于基点的偏移位置
                        });
                        marker.id = data.dataTable[i].stationID;
                        marker.on('mouseover', function (e) {
                            var id = this.id;
                            LoadStationJkData(id, e);
                        })
                        marker.on('click', function (e) {
                            var id = this.id;
                            LoadStationJkData(id, e);
                        })
                        marker.on('mouseout', function (e) {
                            var id = this.id;
                            map.clearInfoWindow();
                        })
                        marker.on('dblclick', function (e) {
                            map.setZoomAndCenter(map.getZoom() + 1, e.target.getPosition());
                        })
                        map.add(marker);
                        markers.push(marker);
                    }
                    else if (zoomlevel < 9.10) {

                    }
                }
                LoadZZoomData(map.getZoom());
            })

        }
        //弹出框数据加载
        function LoadStationJkData(id, e) {
            $.post("/Sws/Map/LoadDataByStationID", { id: id }, function (data) {
                if (data != null) {
                    var clore = '';
                    if (data.jk.state == "故障") {
                        clore = 'red';
                    } else if (data.jk.state == "正常") {
                        clore = 'green';
                    } else {
                        clore = 'gray';
                    }
                    console.log(data.jk.deviceJKs);
                    var table = '<div class="makercon overflow clearfloat pad10px">';
                    //table += '<div class="maptitle"><i class="iconfont f24px icon-bengfang ' + clore + '"></i><p><span class="fb f16px">' + data.jk.stationName + '</span></p></div>';
                    //table += '<div class="maptitle"><i class="iconfont f24px icon-bengfang ' + clore + '"></i><p><span class="fb f16px">' + data.jk.stationName + '</span></p></div>';
                    table += "<div class='maptitle'><i class='iconfont f24px icon-bengfang " + clore + "'></i><p><span class='fb f16px' onClick=" + '"' + "window.open('/Sws/Sws_Detail/Index/" + data.jk.stationID + "')" + '"' + "'>" + data.jk.stationName + "</span></p></div>";
                    table += '<ul class="maplist">';
                    table += '<li class="maplistnr1" ><span>分区</span><span>进水压力</span><span>出水压力</span><span>出水瞬时</span></li>';
                    if (data.jk.deviceJKs.length > 0) {
                        for (var i = 0; i < data.jk.deviceJKs.length; i++) {
                            var pin = data.jk.deviceJKs[i].pressIN;
                            var pout = data.jk.deviceJKs[i].pressOut;
                            if (data.jk.deviceJKs[i].partition == "1") {
                                table += '<li><span>低区</span>';
                            } else if (data.jk.deviceJKs[i].partition == "2") {
                                table += '<li><span>中区</span>';
                            }
                            else if (data.jk.deviceJKs[i].partition == "3") {
                                table += '<li><span>高区</span>';
                            }
                            else if (data.jk.deviceJKs[i].partition == "4") {
                                table += '<li><span>超高区</span>';
                            }else if (data.jk.deviceJKs[i].partition == "5") {
                                table += '<li><span>超超高区</span>';
                            }else if (data.jk.deviceJKs[i].partition == "6") {
                                table += '<li><span>智能泵房</span>';
                            }
                            if (pin.Value == true) {
                                table += '<span class="red">' + pin.Key +' MPa'+ '</span>'
                            } else {
                                table += '<span>' + pin.Key+' MPa' + '</span>'
                            }
                            if (pout.Value == true) {
                                table += '<span class="red">' + pout.Key+' MPa' + '</span>'
                            } else {
                                table += '<span>' + pout.Key+' MPa' + '</span>'
                            }
                            table += '<span>' + data.jk.deviceJKs[i].inflow+' m³/h' + '</span>'
                            table += '</li>'
                        }
                    }
                    table += '</ul><div class="sj"></div>';
                    infoWindow = new AMap.InfoWindow({
                        content: table, //使用默认信息窗体框样式，显示信息内容e.target.getPosition()
                        //offset: new AMap.Pixel(10, -10), //相对于基点的偏移位置
                    });
                    //infoWindow.open(map, [data.jk.lng, data.jk.lat]);
                    infoWindow.open(map, e.target.getPosition());
                }
            })
        }
        function LoadZZoomData(zoomlevel) {
            $.post("/Sws/Map/QueryZTableData", { typecheck: "正常,故障,离线", stationName: $("#stationName").val() }, function (data) {
                if (isselect == 1) {
                    if (data.toLat != 0 && data.toLng != 0) {
                        map.setZoomAndCenter(zoomlevel, [data.toLng, data.toLat]); //同时设置地图层级与中心点
                    }
                    isselect = 0;
                }
                for (var i = 0; i < data.dataTable.length; i++) {
                    if (9.10 <= zoomlevel && zoomlevel <= 12.71) {
                        if (data.dataTable[i].state == "故障") {
                            var markericon1 = '' +
                                '<div>' +
                                '<div class="round">  ' +
                                '<div class="circle">' +
                                '<img src="../../DataV/images/xxx.png">' +
                                '</div> ' +
                                '<div class="circle_bottom animation "></div>' +
                                '<div class="circle_bottom2 animation2 "></div>' +
                                '</div>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                name: data.dataTable[i].stationName,
                                content: markericon1,
                                offset: new AMap.Pixel(-32, -10), //相对于基点的偏移位置

                            });

                        } else if (data.dataTable[i].state == "正常") {
                            var markericon2 = '' +
                                '<div>' +
                                '<div class="zhengchang">  ' +
                                '<div class="circle">' +
                                '<img src="../../DataV/images/xxx.png">' +
                                '</div> ' +
                                '<div class="circle_bottom animation "></div>' +
                                '<div class="circle_bottom2 animation2 "></div>' +
                                '</div>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                name: data.dataTable[i].stationName,
                                content: markericon2,
                                offset: new AMap.Pixel(-32, -10), //相对于基点的偏移位置
                                //offset: new AMap.Pixel(-100, -40), //相对于基点的偏移位置

                            });
                        } else {
                            var markericon3 = '' +
                                '<div>' +
                                '<div class="xiaxian">  ' +
                                '<div class="circle">' +
                                '<img src="../../DataV/images/xxx.png">' +
                                '</div> ' +
                                '<div class="circle_bottom animation "></div>' +
                                '<div class="circle_bottom2 animation2 "></div>' +
                                '</div>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                name: data.dataTable[i].stationName,
                                content: markericon3,
                                offset: new AMap.Pixel(-32, -10), //相对于基点的偏移位置
                                //offset: new AMap.Pixel(-100, -40), //相对于基点的偏移位置

                            });
                        }
                        marker.id = data.dataTable[i].stationID;
                        marker.on('mouseover', function (e) {
                            var id = this.id;
                            LoadZStationJkData(id, e);
                        })
                        marker.on('click', function (e) {
                            var id = this.id;
                            LoadZStationJkData(id, e);
                        })
                        marker.on('mouseout', function (e) {
                            var id = this.id;
                            map.clearInfoWindow();
                        })
                        marker.on('dblclick', function (e) {
                            map.setZoomAndCenter(map.getZoom() + 1, e.target.getPosition());
                        })
                        map.add(marker);
                        markers.push(marker);
                    }
                    else if (12.71 < zoomlevel && zoomlevel <= 13.28) {
                        //var marker;
                        var markericon4 = '' +
                            //报警 替换下面bgGreen 为 bgRed
                            '<div class="mapiconbox overflow clearfloat bgGreen zlwdb">' +
                            '<span class="left"><i class="iconfont f18px icon-bengfang white pl5px pr5px"></i></span><p>净出压 0.70</p>' +
                            '</div>';

                        if (data.dataTable[i].state == "故障") {
                            markericon4 = '' +
                                //报警 替换下面bgGreen 为 bgRed
                                '<div class="mapiconbox overflow  clearfloat bgRed zlwdb">' +
                                '<span class="left"><i class="iconfont f18px icon-bengfang white pl5px pr5px"></i></span><p> ' + data.dataTable[i].stationName + '</p>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                name: data.dataTable[i].stationName,
                                content: markericon4,
                                offset: new AMap.Pixel(-50, -1), //相对于基点的偏移位置

                            });
                        } else if (data.dataTable[i].state == "正常") {
                            markericon4 = '' +
                                //报警 替换下面bgGreen 为 bgRed
                                '<div class="mapiconbox overflow clearfloat bgGreen zlwdb">' +
                                '<span class="left"><i class="iconfont f18px icon-bengfang white pl5px pr5px"></i></span><p> ' + data.dataTable[i].stationName + '</p>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                name: data.dataTable[i].stationName,
                                content: markericon4,
                                offset: new AMap.Pixel(-50, -1), //相对于基点的偏移位置
                                //offset: new AMap.Pixel(-100, -40), //相对于基点的偏移位置

                            });
                        } else {
                            markericon4 = '' +
                                //报警 替换下面bgGreen 为 bgRed
                                '<div class="mapiconbox overflow clearfloat bgGray zlwdb">' +
                                '<span class="left"><i class="iconfont f18px icon-bengfang white pl5px pr5px"></i></span><p> ' + data.dataTable[i].stationName + '</p>' +
                                '</div>';
                            marker = new AMap.Marker({
                                position: [data.dataTable[i].lng, data.dataTable[i].lat],
                                name: data.dataTable[i].stationName,
                                content: markericon4,
                                offset: new AMap.Pixel(-50, -1), //相对于基点的偏移位置
                                //offset: new AMap.Pixel(-100, -40), //相对于基点的偏移位置
                            });
                        }
                        marker.id = data.dataTable[i].stationID;
                        marker.on('mouseover', function (e) {
                            var id = this.id;
                            LoadZStationJkData(id, e);
                        })
                        marker.on('click', function (e) {
                            var id = this.id;
                            LoadZStationJkData(id, e);
                        })
                        marker.on('mouseout', function (e) {
                            var id = this.id;
                            map.clearInfoWindow();
                        })
                        marker.on('dblclick', function (e) {
                            map.setZoomAndCenter(map.getZoom() + 1, e.target.getPosition());
                        })
                        map.add(marker);
                        markers.push(marker);
                    }
                    else if (zoomlevel > 13.28) {
                        var markerContent = '';
                        if (data.dataTable[i].state == "故障") {
                            markerContent += '<div class="textCenter makercon-left"><i class="iconfont f24px icon-bengfang red"></i><p class="mt5px">直饮水泵房</p></div>';

                        } else if (data.dataTable[i].state == "正常") {
                            markerContent += '<div class="textCenter makercon-left"><i class="iconfont f24px icon-bengfang green"></i><p class="mt5px">直饮水泵房</p></div>';
                        } else {
                            markerContent += '<div class="textCenter makercon-left"><i class="iconfont f24px icon-bengfang gray"></i><p class="mt5px">直饮水泵房</p></div>';
                        }
                        markerContent += '<div class="makercon-right">';
                        markerContent += '<p class="f16px fb ellipsis1">' + data.dataTable[i].stationName + '</p>';
                        markerContent += '<div class="green f16px fb tb-f">';
                        var szstr = '';//各区数值
                        var fqstr = '<div class="tb-f f12px">';//各区名称
                        if (data.dataTable[i].deviceJKs.length > 0) {
                            for (var j = 0; j < data.dataTable[i].deviceJKs.length; j++) {
                                if (data.dataTable[i].deviceJKs[j].jPressOut.Value == true) {
                                    szstr += '<span class="red">' + data.dataTable[i].deviceJKs[j].jPressOut.Key + '</span>'
                                } else {
                                    szstr += '<span>' + data.dataTable[i].deviceJKs[j].jPressOut.Key + '</span>'
                                }
                                if (data.dataTable[i].deviceJKs[j].partition == 1) {
                                    fqstr += '<span>低区</span>'
                                } else if (data.dataTable[i].deviceJKs[j].partition == 2) {
                                    fqstr += '<span>中区</span>'
                                }
                                else if (data.dataTable[i].deviceJKs[j].partition == 3) {
                                    fqstr += '<span>高区</span>'
                                }
                                else if (data.dataTable[i].deviceJKs[j].partition == 4) {
                                    fqstr += '<span>超高区</span>'
                                }
                                else {
                                    fqstr += '<span>低区</span>'
                                }
                            }
                            fqstr += '</div>';
                            szstr += '</div>';
                            markerContent += szstr + fqstr;
                        }
                        markerContent += '</div></div><div class="sj">'
                        //设置宽度
                        var div = document.createElement('div');
                        if (data.dataTable[i].deviceJKs.length == 1) {
                            div.style.width = (data.dataTable[i].deviceJKs.length * 50 + 200) + 'px';
                        }
                        else if (data.dataTable[i].deviceJKs.length == 0) {
                            div.style.width = '300px';
                        }
                        else {
                            div.style.width = (data.dataTable[i].deviceJKs.length * 50 + 125) + 'px';
                        }
                        div.setAttribute("class", "makercon overflow pad10px");

                        div.innerHTML = markerContent;
                        marker = new AMap.Marker({
                            position: [data.dataTable[i].lng, data.dataTable[i].lat],
                            name: data.dataTable[i].stationName,
                            content: div,
                            offset: new AMap.Pixel(-139, -100), //相对于基点的偏移位置
                        });
                        marker.id = data.dataTable[i].stationID;
                        marker.on('mouseover', function (e) {
                            var id = this.id;
                            LoadZStationJkData(id, e);
                        })
                        marker.on('click', function (e) {
                            var id = this.id;
                            LoadZStationJkData(id, e);
                        })
                        marker.on('mouseout', function (e) {
                            var id = this.id;
                            map.clearInfoWindow();
                        })
                        marker.on('dblclick', function (e) {
                            map.setZoomAndCenter(map.getZoom() + 1, e.target.getPosition());
                        })
                        map.add(marker);
                        markers.push(marker);
                    }
                    else if (zoomlevel < 9.10) {

                    }
                }
            })
        }
        //弹出框数据加载
        function LoadZStationJkData(id, e) {
            $.post("/Sws/Map/LoadDataByZStationID", { id: id }, function (data) {
                if (data != null) {
                    var clore = '';
                    if (data.jk.state == "故障") {
                        clore = 'red';
                    } else if (data.jk.state == "正常") {
                        clore = 'green';
                    } else {
                        clore = 'gray';
                    }
                    var table = '<div class="makercon overflow pad10px">';
                    //table += '<div class="maptitle"><i class="iconfont f24px icon-bengfang ' + clore + '"></i><p><span class="fb f16px" >' + data.jk.stationName + '</span></p></div>';
                    table += "<div class='maptitle'><i class='iconfont f24px icon-bengfang " + clore + "'></i><p><span class='fb f16px' onClick=" + '"' + "window.open('/Sws/Sws_Detail/Index/" + data.jk.stationID + "')" + '"' + "'>" + data.jk.stationName + "</span></p></div>";

                    table += '<ul class="maplist">';
                    table += '<li><span>分区</span><span>PH</span><span>浊度</span><span>余氯</span></li>';
                    if (data.jk.deviceJKs.length > 0) {
                        for (var i = 0; i < data.jk.deviceJKs.length; i++) {
                            if (data.jk.deviceJKs[i].partition == "1") {
                                table += '<li><span>低区</span>';
                            } else if (data.jk.deviceJKs[i].partition == "2") {
                                table += '<li><span>中区</span>';
                            }
                            else if (data.jk.deviceJKs[i].partition == "3") {
                                table += '<li><span>高区</span>';
                            }
                            else if (data.jk.deviceJKs[i].partition == "4") {
                                table += '<li><span>超高区</span>';
                            }
                            table += '<span>' + data.jk.deviceJKs[i].ph + '</span>'
                            table += '<span>' + data.jk.deviceJKs[i].turbidity + '</span>'
                            table += '<span>' + data.jk.deviceJKs[i].cl + '</span>'
                            table += '</li>'
                        }
                    }
                    table += '</ul><div class="sj"></div>';
                    infoWindow = new AMap.InfoWindow({
                        content: table,  //使用默认信息窗体框样式，显示信息内容
                        //offset: new AMap.Pixel(-55, -10), //相对于基点的偏移位置
                    });
                    //infoWindow.open(map, [data.jk.lng, data.jk.lat]);
                    infoWindow.open(map, e.target.getPosition());
                }
            })
        }
    </script>
    <script>
        $(function () {

        })

    </script>
</body>
</html>
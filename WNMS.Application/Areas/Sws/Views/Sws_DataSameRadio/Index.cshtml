@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>数据同比监测</title>
    <link href="../../css/AdminLTE.lite.css" rel="stylesheet" />
    <link href="../../css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/zlw.css">
    <link rel="stylesheet" href="~/css/hyl.css">
    <link rel="stylesheet" href="~/css/font-awesome.css">

    <!-- 树 -->
    @*<link href="//at.alicdn.com/t/font_1545052_hvghkazl5sa.css" rel="stylesheet" />*@
    <link href="~/css/ztreefont.css" rel="stylesheet" />
    <link href="~/css/iconfont.css" rel="stylesheet" />
    <link href="~/lib/ztree/diy/zTreeStyle01.css" rel="stylesheet" />

    <script src="~/js/jquery-1.12.4.min.js"></script>
    <!-- 日历 -->
    <script src="~/lib/My97DatePicker/WdatePicker.js"></script>
    <script src="~/js/bootstrap.min.js"></script>

    <!-- echart -->
    <script src="~/js/echarts.min.js"></script>
    <script src="~/lib/ztree/jquery.ztree.core-3.5.js"></script>
    <script src="~/lib/ztree/jquery.ztree.excheck-3.5.js"></script>

    <style>
        .con13_top {
            height: 51px;
            padding: 10px;
            border-bottom: 1px solid #ddd
        }

        .btn-group, .btn-group-vertical {
            vertical-align: top
        }

        .zlw_datamain_rgyi label {
            font-weight: 400
        }

        .con13_top .hyl_input {
            width: 165px;
        }

        .con13_top .timeChoice {
            display: none;
        }

            .con13_top .timeChoice:first-of-type {
                display: inline-block;
            }

        /*.input-text, .inptnb {
                            height: 30px;
                            border-radius: 5px;
                            outline: none;
                            padding: 0 5px;
                            border: 1px solid #999
                        }*/
        .no-img {
            position: absolute;
            left: 0;
            top: 30%;
            width: 100%;
            height: 100%;
            text-align: center
        }



        #MyOverLayNum:focus {
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
            transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
        }

        .ztree .iconfont {
            padding-right: 5px;
        }
    </style>
</head>
<body>
    <div class="zlw_datamain">
        <div class="zlw_datamaincon">
            <!-- star left -->
            <div class="zlw_datamain_lf">
                <div id="treeDemo" class="ztree" style="height:calc(100% - 50px);margin-top:50px;overflow:auto">
                    <!-- tree渲染区域 -->
                </div>
                <div class="zlw_datamain_lfcon">
                    <div class="zlw_datamain_lfconsea">
                        <form action="">
                            <i class="glyphicon glyphicon-search" id="search"></i>
                            <input type="text" class="form-control" id="stationName" placeholder="搜索&quot;泵房&quot;名称" autocomplete="off" />
                        </form>
                    </div>
                </div>
            </div>
            <!-- left end -->
            <!-- star right -->
            <div class="zlw_datamain_rg">
                <div class="zlw_datamain_rgcon">
                    <!-- 列表 -->
                    <div class="zlw_datamain_rgyi clearfloat">
                        <div class="con13_top con13_single">
                            <label class="hyl_label">起始时间:</label>
                            <input type="text" onclick="WdatePicker({ dateFmt:'yyyy-MM-dd'})" id="Dev_BeginDate" class="hyl_input hyl_input-sm input-text" value="@ViewBag.DateTime" autocomplete="off">
                            <input type="text" onclick="WdatePicker({ dateFmt:'yyyy-MM'})" id="Dev_BeginDate_year" class="hyl_input hyl_input-sm input-text" value="@ViewBag.Date" autocomplete="off" style="display:none">
                            <select class="input-text hyl_select" style="margin:0 10px;" id="OverlayTime">
                                @*
                                <option value="">叠加时间...</option>*@
                                <option value="day">天</option>
                                <option value="week">周</option>
                                <option value="month">月</option>
                                <option value="year">年</option>
                            </select>
                            <select class="input-text hyl_select" id="OverlayNum">
                                @*
                                <option value="">叠加数量...</option>*@
                                <option value="3">3天</option>
                                <option value="5">5天</option>
                                <option value="9">9天</option>
                            </select>
                            <label class="hyl_label pl10px">自定义叠加数量:</label>
                            <input id="MyOverLayNum" type="text" class="inptnb hyl_input" style="width: 60px" />


                            <label style="margin:0 10px;"><input type="checkbox" id="linemax" /> 显示曲线最大值</label>
                            <label><input type="checkbox" id="linemin" /> 显示曲线最小值</label>


                            <div class="btn-group pull-right" role="group" aria-label="...">
                                <button type="button" class="btn btn-default" id="OverlayTimeSearch"><i class="fa fa-search"></i> 查询</button>
                                <button type="button" class="btn btn-default" id="overrefresh"><i class="fa fa-refresh"></i> 刷新</button>
                            </div>
                        </div>
                    </div>
                    <!-- 表格 -->
                    <div class="zlw_datamain_rger">
                        <div class="no-img" id="imge">
                            <img src="~/images/null.png" width="150" />
                            <p class="gray">暂无数据！</p>
                        </div>
                        <div class="zlw_datamain_rgernr" id="echart">
                        </div>
                    </div>
                </div>
            </div>
            <!-- right end -->
        </div>
    </div>
    <script>
        //定义设备Id，模拟量Id
        var deviceId, dataId;
        //年月日期
        var yearMonth = "@ViewBag.Date";

        //树配置及回调函数
        var setting = {
            check: {
                enable: true,
                //chkboxType: { "Y": "", "N": "" },
                chkStyle: "radio",
                radioType: "all"
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            callback: {
                onClick: onClickNode,
                // onCheck: zTreeOnCheck
            },
            view: {
                showTitle: false,
                showLine: true,
                nameIsHTML: true,
                showIcon: false
            }
        };
        var zNodes = @ViewBag.TreeNodes, zTreeObj;
        
        // 点击勾选节点
        function onClickNode(event, treeId, treeNode) {
            console.log(treeNode)
            if (zTreeObj && treeNode && !treeNode.children) {
                deviceId = treeNode.pId;
                dataId = treeNode.id;
                zTreeObj.checkNode(treeNode, !treeNode.checked);  // 选中点击的节点

                zTreeOnCheck(event, treeId, treeNode)
            }

            if (zTreeObj && treeNode && treeNode.children && treeNode.children.length > 0) {
                zTreeObj.expandNode(treeNode, !treeNode.open, false, false);
            }

        }

        function zTreeOnCheck(event, treeId, treeNode) {
            deviceId = treeNode.pId;
            dataId = treeNode.id;
            var nodes = zTreeObj.getCheckedNodes(true);
            SearchData();

        }


        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echart'));
        // 指定图表的配置项和数据
        option = {
            title: {
                //text: '用水量预测分析图表',
                subtext: '',
                x: 'center'
            },
            tooltip: {
                trigger: 'axis'
            },
            legend: {
                data: [],
                top: 20,
                icon: 'roundRect'
            },
            grid: {
                left: '45px',
                right: '20px'

            },
            dataZoom: [
                {
                    show: true,
                    realtime: true,
                    start: 0,
                    end: 100
                },
                {
                    type: 'inside',
                    realtime: true,
                    start: 0,
                    end: 100
                }
            ],
            toolbox: {
                show: true,
                feature: {
                    dataView: { show: false, readOnly: true },
                    magicType: { show: true, type: ['line', 'bar'] },
                    restore: { show: true },
                    saveAsImage: { show: true },
                    lang: ['数据视图', '关闭']
                }
            },
            calculable: true,
            xAxis:
            {
                type: 'time',

            }
            ,
            yAxis: {
                type: 'value',
                min: function (value) {
                    var val = (0.95 * value.min).toFixed(0)
                    return val;
                },
                max: function (value) {
                    var val = (1.05 * value.max).toFixed(0);
                    return val;
                }
            },
            series: [
            ]
        };

        $(function () {
            //加载树
            zTreeObj = $.fn.zTree.init($("#treeDemo"), setting, zNodes);


            //查询按钮点击事件
            $("#Btn_Search").click(function () {
                var nodes = zTreeObj.getCheckedNodes(true);
                if (nodes.length < 1) {
                    alert("请选中至少一个检测点")
                } else {
                    if (nodes.length == 1) {

                    } else {
                        GetChartsData();
                    }
                }
            });

            ////查询树
            //$("#search").click(function () {
            //    LoadZtree();
            //});

            //树查询
            $("#stationName").bind("keypress", function (event) {
                if (event.keyCode != 13) {
                    if (event.keyCode < 48 || event.keyCode > 57) {
                        console.log("1");
                    }
                } else {
                    event.preventDefault();
                    LoadZtree();
                }
            });

            window.onresize = function () {
                myChart.resize();
            }
        });

        //树查询
        function LoadZtree() {
            //查询树列表数据
            $.post("/Sws/Sws_DataMonitoring/SearchTree", {
                stationName: $("#stationName").val()
            }, function (data) {
                zTreeObj.destroy();    //清空树
                var aa = JSON.parse(data);   //数据转json
                if ($("#stationName").val() != "") {
                    zTreeObj = $.fn.zTree.init($("#treeDemo"), setting, aa);   //重新初始化树
                    zTreeObj.expandAll(true);     //初始化数列表展开
                } else {
                    zTreeObj = $.fn.zTree.init($("#treeDemo"), setting, aa);   //重新初始化树
                }
            });
        }

        //时间叠加查询
        $("#OverlayTimeSearch").click(function () {
            SearchData();
        });

        function SearchData() {
            var nodes = zTreeObj.getCheckedNodes(true);
            if (nodes.length > 0) {
                var dataid = nodes[0].id;
                var did = nodes[0].pId;
                var node_name = nodes[0].name;

                
                if ($("#OverlayTime").val() != "" && ($("#OverlayNum").val() != "" || $("#MyOverLayNum").val() != "")) {
                    var overNum;
                    if ($("#MyOverLayNum").val() != "") {
                        overNum = $("#MyOverLayNum").val();
                    } else {
                        overNum = $("#OverlayNum").val();
                    }
                    myChart.showLoading({
                        text: '加载中',
                        textStyle: {
                            fontSize: 30
                        },
                        // maskColor: '#060A13',
                        textColor: 'black',
                    });
                    var begindate_search = $("#Dev_BeginDate").val();
                    if ($("#OverlayTime").val() == "year") {
                        begindate_search = $("#Dev_BeginDate_year").val();
                    }
                    $.post("/Sws/Sws_DataMonitoring/GetOverLayTimeHistory", {
                        time: $("#OverlayTime").val(),
                        num: overNum,
                        dataID: dataid,
                        beginDate: begindate_search,
                        deviceID: did
                    }, function (data) {
                        console.log(data)
                        myChart.hideLoading();
                        var nuits = data.datainfo;
                        if ($("#OverlayTime").val() == "day") {
                            if (data.result.length > 0) {
                                $("#imge").css("display", "none");
                                $("#echart").css("display", "block");
                                var series = [];
                                var legends = [];
                                var xsis = {
                                    type: 'time',
                                    maxInterval: 3600 * 1 * 1000,
                                    axisLabel: {
                                        rotate: 30,
                                        formatter: function (value, index) {
                                            var date = new Date(value);
                                            return FormattDate(date);
                                        }
                                    },
                                };
                                var tooltip = {
                                    trigger: 'axis',
                                    formatter: function (datas) {
                                        var aa = datas[0].name;
                                        var date = new Date(Date.parse(aa.replace(/-/g, "/")));
                                        var datetime = FormattDate(date);
                                        var res = datetime + '<br/>'
                                        for (var i = 0, length = datas.length; i < length; i++) {
                                            var dataC = "--";
                                            if (datas[i].value[1] != undefined) {
                                                dataC = datas[i].value[1];
                                            }

                                            res += '<div class="circle_box"><span class="circle" style="float:left;background:' + datas[i].color + '"></span>' + datas[i].seriesName + '：'
                                                + dataC + " " + nuits + '</div>'
                                        }
                                        return res;
                                    }
                                };
                                for (var i = 0; i < data.result.length; i++) {
                                    var markdata = [];
                                    var aa = $("#linemax");
                                    if ($("#linemax")[0].checked) {
                                        var mark1 = { type: 'max', name: '最大值' };
                                        markdata.push(mark1);
                                    }
                                    if ($("#linemin")[0].checked) {
                                        var mark1 = { type: 'min', name: '最小值' };
                                        markdata.push(mark1);
                                    }
                                    var obj = {
                                        name: '',
                                        type: 'line',
                                        yAxisIndex: '0',
                                        smooth: true,
                                        symbol: "none",
                                        data: [],
                                        markPoint: {
                                            data: markdata
                                        },
                                    };
                                    //if (dataid > 2002) {
                                    //    obj.yAxisIndex = "1"
                                    //}
                                    obj.name = data.result[i].name;
                                    obj.data = eval(data.result[i].data);
                                    series.push(obj);
                                    legends.push(data.result[i].name);
                                }
                                myChart.clear();
                                option.dataZoom = zoominit();
                                option.series = series;
                                option.legend.data = legends;
                                option.xAxis = xsis;
                                option.tooltip = tooltip;
                                // if (node_name.includes('压')) {
                                    var item_list = []
                                    for (let i = 1; i < data.result.length; i++) {
                                        var item = eval(data.result[i].data)
                                        console.log(item)
                                        for (let j = 1; j < item.length; j++) {
                                            item_list.push(item[j].value[1])
                                        }
                                        
                                    }
                                    const maxValue = item_list.reduce((acc, cur) => Math.max(acc, cur), -Infinity);

                                    // 获取最小值
                                    const minValue = item_list.reduce((acc, cur) => Math.min(acc, cur), Infinity);

                                    option.yAxis.min = minValue * 0.9;
                                    option.yAxis.max = maxValue * 1.1;
                                    console.log(option.yAxis.min)
                                    console.log(option.yAxis.max)
                                // }
                                myChart.setOption(option);
                                var height = $(".zlw_datamain_rgernr").height();
                                var width = $(".zlw_datamain_rgernr").width();
                                myChart.resize({
                                    width: width,
                                    height: height
                                });
                            } else {
                                $("#echart").css("display", "none");
                                $("#imge").css("display", "block");
                            }
                        }
                        if ($("#OverlayTime").val() == "week") {
                            if (data.IsCumulation == true) {//累计量
                                if (data.result.length > 0) {
                                    $("#imge").css("display", "none");
                                    $("#echart").css("display", "block");
                                    var series = [];
                                    var legends = [];
                                    var xsis = {
                                        type: 'time',
                                        maxInterval: 3600 * 24 * 1000,
                                        axisLabel: {
                                            rotate: 30,
                                            formatter: function (value, index) {
                                                // 格式化成月/日，只在第一个刻度显示年份
                                                var date = new Date(value);
                                                var dayname = ConvertDateName(date.getDay());
                                                return dayname;
                                            }
                                        }
                                    };
                                    var tooltip = {
                                        trigger: 'axis',
                                        formatter: function (datas) {
                                            var aass = datas[0].name;
                                            var date = new Date(Date.parse(aass.replace(/-/g, "/")));
                                            var res = ConvertDateName(date.getDay()) + '<br/>'
                                            for (var i = 0, length = datas.length; i < length; i++) {
                                                var dataC = "--";
                                                if (datas[i].value[1] != undefined) {
                                                    dataC = datas[i].value[1];
                                                }
                                                res += '<div class="circle_box"><span class="circle" style="float:left;background:' + datas[i].color + '"></span>' + " " + datas[i].seriesName + '：'
                                                    + dataC + " " + nuits + '</div>'
                                            }
                                            return res;
                                        }
                                    };
                                    for (var i = 0; i < data.result.length; i++) {
                                        var markdata = [];
                                        var aa = $("#linemax");
                                        if ($("#linemax")[0].checked) {
                                            var mark1 = { type: 'max', name: '最大值' };
                                            markdata.push(mark1);
                                        }
                                        if ($("#linemin")[0].checked) {
                                            var mark1 = { type: 'min', name: '最小值' };
                                            markdata.push(mark1);
                                        }
                                        var obj = {
                                            name: '',
                                            type: 'line',
                                            yAxisIndex: '0',
                                            smooth: true,
                                            data: [],
                                            symbol: "none",
                                            markPoint: {
                                                data: markdata
                                            },
                                        };
                                        //if (dataid > 2002) {
                                        //    obj.yAxisIndex = "1"
                                        //}
                                        obj.name = "第" + data.result[i].name + "周";
                                        obj.data = eval(data.result[i].data);
                                        series.push(obj);
                                        legends.push("第" + data.result[i].name + "周");
                                    }
                                    myChart.clear();
                                    option.series = series;
                                    option.legend.data = legends;
                                    option.xAxis = xsis;
                                    option.dataZoom = zoominit();
                                    option.tooltip = tooltip;
                                    myChart.setOption(option);
                                    var height = $(".zlw_datamain_rgernr").height();
                                    var width = $(".zlw_datamain_rgernr").width();
                                    myChart.resize({
                                        width: width,
                                        height: height
                                    });
                                } else {
                                    $("#echart").css("display", "none");
                                    $("#imge").css("display", "block");
                                }
                            } else {//瞬时量
                                if (data.result.length > 0) {
                                    $("#imge").css("display", "none");
                                    $("#echart").css("display", "block");
                                    var series = [];
                                    var legends = [];
                                    var xsis = {
                                        type: 'time',
                                        maxInterval: 3600 * 8 * 1000,
                                        axisLabel: {
                                            rotate: 30,
                                            formatter: function (value, index) {
                                                // 格式化成月/日，只在第一个刻度显示年份
                                                var date = new Date(value);
                                                var dayname = ConvertDateName(date.getDay());
                                                return dayname + " " + FormattDate(date);
                                            }
                                        }
                                    };
                                    var tooltip = {
                                        trigger: 'axis',
                                        formatter: function (datas) {
                                            var aa = datas[0].name;
                                            var date = new Date(Date.parse(aa.replace(/-/g, "/")));
                                            var res = ConvertDateName(date.getDay()) + FormattDate(date) + '<br/>'
                                            for (var i = 0, length = datas.length; i < length; i++) {
                                                var dataC = "--";
                                                if (datas[i].value[1] != undefined) {
                                                    dataC = datas[i].value[1];
                                                }
                                                res += '<div class="circle_box"><span class="circle" style="float:left;background:' + datas[i].color + '"></span>' + " " + datas[i].seriesName + '：'
                                                    + dataC + " " + nuits + '</div>'
                                            }
                                            return res;
                                        }
                                    };
                                    for (var i = 0; i < data.result.length; i++) {
                                        var markdata = [];
                                        var aa = $("#linemax");
                                        if ($("#linemax")[0].checked) {
                                            var mark1 = { type: 'max', name: '最大值' };
                                            markdata.push(mark1);
                                        }
                                        if ($("#linemin")[0].checked) {
                                            var mark1 = { type: 'min', name: '最小值' };
                                            markdata.push(mark1);
                                        }
                                        var obj = {
                                            name: '',
                                            type: 'line',
                                            yAxisIndex: '0',
                                            smooth: true,
                                            data: [],
                                            symbol: "none",
                                            markPoint: {
                                                data: markdata
                                            },
                                            showSymbol: false,
                                        };
                                        //if (dataid > 2002) {
                                        //    obj.yAxisIndex = "1"
                                        //}
                                        obj.name = "第" + data.result[i].name + "周";
                                        obj.data = eval(data.result[i].data);
                                        series.push(obj);
                                        legends.push("第" + data.result[i].name + "周");
                                    }
                                    myChart.clear();
                                    option.series = series;
                                    option.legend.data = legends;
                                    option.xAxis = xsis;
                                    option.tooltip = tooltip;
                                    option.dataZoom = zoominit();
                                    myChart.setOption(option);
                                    var height = $(".zlw_datamain_rgernr").height();
                                    var width = $(".zlw_datamain_rgernr").width();
                                    myChart.resize({
                                        width: width,
                                        height: height
                                    });
                                } else {
                                    $("#echart").css("display", "none");
                                    $("#imge").css("display", "block");
                                }
                            }
                        }
                        if ($("#OverlayTime").val() == "month") {//月数据查询
                            if (data.IsCumulation == true) {//累计量
                                if (data.result.length > 0) {
                                    $("#imge").css("display", "none");
                                    $("#echart").css("display", "block");
                                    var series = [];
                                    var legends = [];
                                    var xsis = {
                                        type: 'time',
                                        //minInterval: 3600 * 24 * 1000,
                                        axisLabel: {
                                            rotate: 30,
                                            formatter: function (value, index) {
                                                // 格式化成月/日，只在第一个刻度显示年份
                                                var date = new Date(value);
                                                return date.getDate() + "日";
                                            }
                                        }
                                    };
                                    var tooltip = {
                                        trigger: 'axis',
                                        formatter: function (datas) {
                                            var aa = datas[0].name;
                                            var date = new Date(Date.parse(aa.replace(/-/g, "/")));
                                            var res = date.getDate() + "日" + '<br/>'
                                            for (var i = 0, length = datas.length; i < length; i++) {
                                                var dataC = "--";
                                                if (datas[i].value[1] != undefined) {
                                                    dataC = datas[i].value[1];
                                                }
                                                res += '<div class="circle_box"><span class="circle" style="float:left;background:' + datas[i].color + '"></span>' + " " + datas[i].seriesName + '：'
                                                    + dataC + " " + nuits + '</div>'
                                            }
                                            return res;
                                        }
                                    };
                                    for (var i = 0; i < data.result.length; i++) {
                                        var markdata = [];
                                        var aa = $("#linemax");
                                        if ($("#linemax")[0].checked) {
                                            var mark1 = { type: 'max', name: '最大值' };
                                            markdata.push(mark1);
                                        }
                                        if ($("#linemin")[0].checked) {
                                            var mark1 = { type: 'min', name: '最小值' };
                                            markdata.push(mark1);
                                        }
                                        var obj = {
                                            name: '',
                                            type: 'line',
                                            yAxisIndex: '0',
                                            smooth: true,
                                            data: [],
                                            symbol: "none",
                                            markPoint: {
                                                data: markdata
                                            },
                                        };
                                        //if (dataid > 2002) {
                                        //    obj.yAxisIndex = "1"
                                        //}
                                        obj.name = data.result[i].name;
                                        obj.data = eval(data.result[i].data);
                                        series.push(obj);
                                        legends.push(data.result[i].name);
                                    }
                                    myChart.clear();
                                    option.series = series;
                                    option.legend.data = legends;
                                    option.xAxis = xsis;
                                    option.tooltip = tooltip;
                                    option.dataZoom = zoominit();
                                    myChart.setOption(option);
                                    var height = $(".zlw_datamain_rgernr").height();
                                    var width = $(".zlw_datamain_rgernr").width();
                                    myChart.resize({
                                        width: width,
                                        height: height
                                    });
                                } else {
                                    $("#echart").css("display", "none");
                                    $("#imge").css("display", "block");
                                }
                            } else {//瞬时量

                                if (data.result.length > 0) {
                                    $("#imge").css("display", "none");
                                    $("#echart").css("display", "block");
                                    var series = [];
                                    var legends = [];
                                    var xsis = {
                                        type: 'time',
                                        //maxInterval: 3600 * 24 * 1000,
                                        axisLabel: {
                                            rotate: 30,
                                            formatter: function (value, index) {
                                                var date = new Date(value);
                                                return date.getDate() + "日";
                                            }
                                        }
                                    };
                                    var tooltip = {
                                        trigger: 'axis',
                                        formatter: function (datas) {
                                            var aa = datas[0].name;
                                            var date = new Date(Date.parse(aa.replace(/-/g, "/")));
                                            var res = date.getDate() + "日" + '<br/>'
                                            for (var i = 0, length = datas.length; i < length; i++) {
                                                var dataC = "--";
                                                if (datas[i].value[1] != undefined) {
                                                    dataC = datas[i].value[1];
                                                }
                                                res += '<div class="circle_box"><span class="circle" style="float:left;background:' + datas[i].color + '"></span>' + " " + datas[i].seriesName + '：'
                                                    + dataC + " " + nuits + '</div>'
                                            }
                                            return res;
                                        }
                                    };
                                    for (var i = 0; i < data.result.length; i++) {
                                        var markdata = [];
                                        var aa = $("#linemax");
                                        if ($("#linemax")[0].checked) {
                                            var mark1 = { type: 'max', name: '最大值' };
                                            markdata.push(mark1);
                                        }
                                        if ($("#linemin")[0].checked) {
                                            var mark1 = { type: 'min', name: '最小值' };
                                            markdata.push(mark1);
                                        }
                                        var obj = {
                                            name: '',
                                            type: 'line',
                                            yAxisIndex: '0',
                                            smooth: true,
                                            symbol: "none",
                                            data: [],
                                            markPoint: {
                                                data: markdata
                                            },
                                        };
                                        //if (dataid > 2002) {
                                        //    obj.yAxisIndex = "1"
                                        //}
                                        obj.name = data.result[i].name;
                                        obj.data = eval(data.result[i].data);
                                        series.push(obj);
                                        legends.push(data.result[i].name);
                                    }
                                    myChart.clear();
                                    option.series = series;
                                    option.legend.data = legends;
                                    option.xAxis = xsis;
                                    option.tooltip = tooltip;
                                    option.dataZoom = zoominit();
                                    myChart.setOption(option);
                                    var height = $(".zlw_datamain_rgernr").height();
                                    var width = $(".zlw_datamain_rgernr").width();
                                    myChart.resize({
                                        width: width,
                                        height: height
                                    });
                                } else {
                                    $("#echart").css("display", "none");
                                    $("#imge").css("display", "block");
                                }
                            }
                        }
                        if ($("#OverlayTime").val() == "year") {//月数据查询
                            if (data.IsCumulation == true) {//累计量
                                if (data.result.length > 0) {
                                    $("#imge").css("display", "none");
                                    $("#echart").css("display", "block");
                                    var series = [];
                                    var legends = [];
                                    var xsis = {
                                        type: 'time',
                                        //minInterval: 3600 * 24 * 1000,
                                        axisLabel: {
                                            rotate: 30,
                                            formatter: function (value, index) {
                                                // 格式化成月/日，只在第一个刻度显示年份
                                                var date = new Date(value);
                                                return (date.getMonth() + 1) + "月";
                                            }
                                        }
                                    };
                                    var tooltip = {
                                        trigger: 'axis',
                                        formatter: function (datas) {
                                            var aa = datas[0].name;
                                            var date = new Date(Date.parse(aa.replace(/-/g, "/")));
                                            var res = (date.getMonth() + 1) + "月" + '<br/>'
                                            for (var i = 0, length = datas.length; i < length; i++) {
                                                var dataC = "--";
                                                if (datas[i].value[1] != undefined) {
                                                    dataC = datas[i].value[1];
                                                }
                                                res += '<div class="circle_box"><span class="circle" style="float:left;background:' + datas[i].color + '"></span>' + " " + datas[i].seriesName + '：'
                                                    + dataC + " " + nuits + '</div>'
                                            }
                                            return res;
                                        }
                                    };
                                    for (var i = 0; i < data.result.length; i++) {
                                        var markdata = [];
                                        var aa = $("#linemax");
                                        if ($("#linemax")[0].checked) {
                                            var mark1 = { type: 'max', name: '最大值' };
                                            markdata.push(mark1);
                                        }
                                        if ($("#linemin")[0].checked) {
                                            var mark1 = { type: 'min', name: '最小值' };
                                            markdata.push(mark1);
                                        }
                                        var obj = {
                                            name: '',
                                            type: 'line',
                                            yAxisIndex: '0',
                                            smooth: true,
                                            data: [],
                                            symbol: "none",
                                            markPoint: {
                                                data: markdata
                                            },
                                        };
                                        //if (dataid > 2002) {
                                        //    obj.yAxisIndex = "1"
                                        //}
                                        obj.name = data.result[i].name;
                                        obj.data = eval(data.result[i].data);
                                        series.push(obj);
                                        legends.push(data.result[i].name);
                                    }
                                    myChart.clear();
                                    option.series = series;
                                    option.legend.data = legends;
                                    option.xAxis = xsis;
                                    option.tooltip = tooltip;
                                    option.dataZoom = zoominit();
                                    myChart.setOption(option);
                                    var height = $(".zlw_datamain_rgernr").height();
                                    var width = $(".zlw_datamain_rgernr").width();
                                    myChart.resize({
                                        width: width,
                                        height: height
                                    });
                                } else {
                                    $("#echart").css("display", "none");
                                    $("#imge").css("display", "block");
                                }
                            } else {//瞬时量

                                if (data.result.length > 0) {
                                    $("#imge").css("display", "none");
                                    $("#echart").css("display", "block");
                                    var series = [];
                                    var legends = [];
                                    var xsis = {
                                        type: 'time',
                                        //maxInterval: 3600 * 24 * 1000,
                                        axisLabel: {
                                            rotate: 30,
                                            formatter: function (value, index) {
                                                var date = new Date(value);
                                                return (date.getMonth() + 1) + "月";
                                            }
                                        }
                                    };
                                    var tooltip = {
                                        trigger: 'axis',
                                        formatter: function (datas) {
                                            var aa = datas[0].name;
                                            var date = new Date(Date.parse(aa.replace(/-/g, "/")));
                                            var res = (date.getMonth() + 1) + "月" + '<br/>'
                                            for (var i = 0, length = datas.length; i < length; i++) {
                                                var dataC = "--";
                                                if (datas[i].value[1] != undefined) {
                                                    dataC = datas[i].value[1];
                                                }
                                                res += '<div class="circle_box"><span class="circle" style="float:left;background:' + datas[i].color + '"></span>' + " " + datas[i].seriesName + '：'
                                                    + dataC + " " + nuits + '</div>'
                                            }
                                            return res;
                                        }
                                    };
                                    for (var i = 0; i < data.result.length; i++) {
                                        var markdata = [];
                                        var aa = $("#linemax");
                                        if ($("#linemax")[0].checked) {
                                            var mark1 = { type: 'max', name: '最大值' };
                                            markdata.push(mark1);
                                        }
                                        if ($("#linemin")[0].checked) {
                                            var mark1 = { type: 'min', name: '最小值' };
                                            markdata.push(mark1);
                                        }
                                        var obj = {
                                            name: '',
                                            type: 'line',
                                            yAxisIndex: '0',
                                            smooth: true,
                                            symbol: "none",
                                            data: [],
                                            markPoint: {
                                                data: markdata
                                            },
                                        };
                                        //if (dataid > 2002) {
                                        //    obj.yAxisIndex = "1"
                                        //}
                                        obj.name = data.result[i].name;
                                        obj.data = eval(data.result[i].data);
                                        series.push(obj);
                                        legends.push(data.result[i].name);
                                    }
                                    myChart.clear();
                                    option.series = series;
                                    option.legend.data = legends;
                                    option.xAxis = xsis;
                                    option.tooltip = tooltip;
                                    option.dataZoom = zoominit();
                                    myChart.setOption(option);
                                    var height = $(".zlw_datamain_rgernr").height();
                                    var width = $(".zlw_datamain_rgernr").width();
                                    myChart.resize({
                                        width: width,
                                        height: height
                                    });
                                } else {
                                    $("#echart").css("display", "none");
                                    $("#imge").css("display", "block");
                                }
                            }
                        }
                    });
                } else {
                    alert("请完善查询条件");
                }
            } else {
                //alert("请选择查询参数");
                $("#echart").css("display", "none");
                $("#imge").css("display", "block");
            }
        }

        $("#OverlayTime").change(function () {
            $("#Dev_BeginDate").css("display", "inline-block");
            $("#Dev_BeginDate_year").css("display", "none");
            if ($("#OverlayTime").val() == "day") {
                $("#OverlayNum").empty();
                $("#OverlayNum").append('<option value = "3"> 3天</option >' +
                    '<option value="5">5天</option>' +
                    '<option value="9">9天</option>');
            } else {
                if ($("#OverlayTime").val() == "week") {
                    $("#OverlayNum").empty();
                    $("#OverlayNum").append('<option value = "3">3周</option >' +
                        '<option value="4">4周</option>' +
                        '<option value="5">5周</option>');
                } else {
                    if ($("#OverlayTime").val() == "month") {
                        $("#OverlayNum").empty();
                        $("#OverlayNum").append('<option value = "3">3月</option >' +
                            '<option value="4">4月</option>' +
                            '<option value="5">5月</option>');
                    } else {
                        if ($("#OverlayTime").val() == "year") {
                            $("#Dev_BeginDate").css("display", "none");
                            $("#Dev_BeginDate_year").css("display", "inline-block");
                            $("#OverlayNum").empty();
                            $("#OverlayNum").append('<option value = "2">2年</option >' +
                                '<option value="3">3年</option>' +
                                '<option value="4">4年</option>');

                        }
                        else {
                            $("#OverlayNum").empty();
                        }
                    }
                }
            }
        });

        function ConvertDateName(num) {
            var stringname = "";
            if (num == 1) {
                stringname = "周一";
            }
            if (num == 2) {
                stringname = "周二";
            }
            if (num == 3) {
                stringname = "周三";
            }
            if (num == 4) {
                stringname = "周四";
            }
            if (num == 5) {
                stringname = "周五";
            }
            if (num == 6) {
                stringname = "周六";
            }
            if (num == 0) {
                stringname = "周日";
            }
            return stringname;
        }

        function FormattDate(date) {
            var hour = "";
            var minites = "";
            var second = "";
            if (date.getHours() < 10) {
                hour = "0" + date.getHours();
            }
            else {
                hour = date.getHours();
            }
            if (date.getMinutes() < 10) {
                minites = "0" + date.getMinutes();
            }
            else {
                minites = date.getMinutes();
            }
            if (date.getSeconds() < 10) {
                second = "0" + date.getSeconds();
            }
            else {
                second = date.getSeconds();
            }
            return hour + ":" + minites + ":" + second;
        }
        //刷新
        $("#overrefresh").click(function () {
            window.location.reload();
        });
        $("#manyrefresh").click(function () {
            window.location.reload();
        });

        function zoominit() {
            var zooms = [{
                show: true,
                realtime: true,
                start: 0,
                end: 100
            },
            {
                type: 'inside',
                realtime: true,
                start: 0,
                end: 100
            }];
            return zooms;

        }
        function changeTime() {
            var dateFormat = "yyyy-MM-dd";
            if ($("#OverlayTime").val() == "year") {
                dateFormat = "yyyy-MM";
            }
            return dateFormat;
        }

        $(document).ready(function () { 
            window.addEventListener('DOMContentLoaded', function () {
                var urlParams = new URLSearchParams(window.location.search);
                var paramStr = urlParams.get('param');
                if (paramStr) {
                    var parts = paramStr.split(",");
                    var pid = parts[0];
                    var ids = parts[1];
                    var val = parts[2];
                    var nodeParent = zTreeObj.getNodeByParam("id", pid, null);
                    var nodeChild = zTreeObj.getNodeByParam("id", ids, null);
                    var nodeCheck = zTreeObj.getNodeByParam("id", val, null);

                    zTreeObj.expandNode(nodeParent, true, false, false);
                    zTreeObj.expandNode(nodeChild, true, false, false);
                    zTreeObj.checkNode(nodeCheck, true);
                    SearchData()
                }
            });
        })
        
    </script>
</body>
</html>

<?xml version="1.0" encoding="utf-8"?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" autoReload="true" throwExceptions="false" internalLogLevel="Warn" internalLogFile="${basedir}/logs/NlogRecords.log">
	<!--指定了当NLog自己遇到Warn等级以上的报错时，生成日志到./logs/NlogRecords.log下（网站的相对路径）。除非纠错，不可以设为Trace否则速度很慢，起码Debug以上-->
	<extensions>
		<add assembly="NLog.Web.AspNetCore" />
	</extensions>
	<targets >
		<!--通过数据库记录日志 配置
    dbProvider请选择mysql或是sqlserver，同时注意连接字符串,需要安装对应的sql数据提供程序
    dbProvider="MySql.Data.MySqlClient.MySqlConnection, MySql.Data" connectionString="server=192.168.137.10;database=EvMSDB;user=root;password=mysql@local"
    dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient" connectionString="Server=192.168.1.204;Database=EvMSDB;User ID=sa;Password=yzhly@126"
    -->
		<target xsi:type="AsyncWrapper" name="asyncDb" queueLimit="5000" overflowAction="Block">
			<target name="log_database" xsi:type="Database" dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient" connectionString="Server=47.104.187.1;Database=WNMS_SS;User ID=wnms;Password=wnmswnmswnmswnms">
				<!--<target name="log_database" xsi:type="Database" dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient" connectionString="Server=47.104.187.1;Database=WNMS_SS;User ID=wnms;Password=wnmswnmswnmswnms">-->
				<commandText>
					INSERT INTO Sys_Log ([LogDate],[LogLevel],[LogLogger],[LogAction],[LogType],[LogMessage],[LogUrl],[UserName],[IP]) VALUES
					(@LogDate, @LogLevel, @LogLogger, @LogAction, @LogType, @LogMessage, @LogUrl, @UserName,@UserIP)
				</commandText>
				<parameter name="@LogDate" layout="${date}" />
				<parameter name="@LogLevel" layout="${level}" />
				<parameter name="@LogLogger" layout="${logger}" />
				<parameter name="@LogAction" layout="${aspnet-mvc-action}" />
				<!--<parameter name="@LogType" layout="${event-properties:item=LogType}" />-->
				<parameter name="@LogType" layout="1" />
				<parameter name="@LogMessage" layout="${message}" />
				<parameter name="@LogUrl" layout="${aspnet-request-url:IncludePort=true:IncludeQueryString=true}" />
				<parameter name="@UserName" layout="${aspnet-session:Variable=userName}" />
				<!--<parameter name="@UserName" layout="${aspnet-item:variable=UserName}" />-->
				<parameter name="@UserIP" layout="${aspnet-Request-IP}" />
			</target>
		</target>
		<!--输出文件-->
		<target name="log_file" xsi:type="File" fileName="logs/${shortdate}.log"
				layout="【异常时间】：${date}${newline}【异常级别】：${level:uppercase=true}${newline}${message}" />
		<!--layout="${longdate} | ${level:uppercase=false} | ${logger} | ${message} ${onexception:${exception:format=tostring} ${newline} ${stacktrace} ${newline}" />-->
		<!--ColoredConsole彩色控制台 xsi:type="Console"是指定输出到普通控制台-->
		<target name="log_console" xsi:type="ColoredConsole" useDefaultRowHighlightingRules="true" layout="【异常时间】：${longdate}${newline}【异常级别】：${level}${newline}${message}  ">
			<highlight-row condition="level == LogLevel.Trace" foregroundColor="DarkGray" />
			<highlight-row condition="level == LogLevel.Debug" foregroundColor="Gray" />
			<highlight-row condition="level == LogLevel.Info" foregroundColor="White" />
			<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
			<highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
			<highlight-row condition="level == LogLevel.Fatal" foregroundColor="Magenta" backgroundColor="White" />
		</target>
	</targets>
	<rules>
		<!--跳过所有级别的Microsoft组件的日志记录-->
		<!--<logger name="Microsoft.*" maxlevel="Info" final="true" />-->
		<!-- BlackHole without writeTo -->
		<!--只通过数据库记录日志，这里的*，如果给了name名字，代码里用日志记录的时候，取logger需要把name当做参数-->
		<!--<logger name="*" minlevel="Info" writeTo="log_database" />-->
		<!--<logger name="*" level="Info" writeTo="log_database" />-->
		<logger name="*" minlevel="Trace" writeTo="asyncDb" />
		<logger name="*" minlevel="Warn" writeTo="log_file" />
		<!--<logger name="*" minlevel="Trace" writeTo="asyncDb" />-->
		<!--<logger name="*" level="LogLevel.Error" writeTo="log_file" />-->
	</rules>
</nlog>
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"../chunks/ensureType.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import r from"../geometry/SpatialReference.js";import{a as e,s as i,b as p,l as c}from"../chunks/suggestLocations.js";import n from"./Task.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../chunks/metadata.js";import"../chunks/handleUtils.js";import"../core/Error.js";import"../chunks/JSONSupport.js";import"../core/Accessor.js";import"../chunks/deprecate.js";import"../chunks/ArrayPool.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/promiseUtils.js";import"../chunks/writer.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/utils3.js";import"../chunks/scaleUtils.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/projectionEllipsoid.js";import"../chunks/Ellipsoid.js";import"../chunks/floorFilterUtils.js";import"../rest/support/AddressCandidate.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../chunks/reader.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/extentUtils.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../chunks/commonProperties3.js";let u=class extends n{constructor(t){super(t),this.outSpatialReference=null,this.url=null}addressToLocations(t,s){!t.outSpatialReference&&this.outSpatialReference&&(t.outSpatialReference=this.outSpatialReference);const o={...this.requestOptions,...s};return e(this.url,t,o)}suggestLocations(t,s){const o={...this.requestOptions,...s};return i(this.url,t,o)}addressesToLocations(t,s){!t.outSpatialReference&&this.outSpatialReference&&(t.outSpatialReference=this.outSpatialReference);const o={...this.requestOptions,...s};return p(this.url,t,o)}locationToAddress(t,s){!t.outSpatialReference&&this.outSpatialReference&&(t.outSpatialReference=this.outSpatialReference);const o={...this.requestOptions,...s};return c(this.url,t,o)}};t([s({type:r})],u.prototype,"outSpatialReference",void 0),t([s()],u.prototype,"url",void 0),u=t([o("esri.tasks.Locator")],u);const m=u;export{m as default};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import"../../geometry.js";import e from"../../request.js";import t from"../../core/Error.js";import{f as r,c as n}from"../../chunks/iteratorUtils.js";import{b as s,i as o}from"../../core/lang.js";import{eachAlways as i}from"../../core/promiseUtils.js";import{isHTTPSProtocol as a,hasSameOrigin as u,toHTTPS as p}from"../../core/urlUtils.js";import{initializeProjection as l,project as c}from"../../geometry/projection.js";import m,{e as y,W as d}from"../../geometry/SpatialReference.js";import{f}from"../../chunks/typeUtils.js";import{g}from"../../chunks/geojson.js";import{i as h,v as w}from"../../chunks/xmlUtils.js";import j from"../support/Field.js";import b from"../../geometry/Extent.js";import"../../chunks/ensureType.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/object.js";import"../../chunks/string.js";import"../../geometry/Geometry.js";import"../../chunks/tslib.es6.js";import"../../chunks/JSONSupport.js";import"../../core/Accessor.js";import"../../chunks/deprecate.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/metadata.js";import"../../chunks/handleUtils.js";import"../../chunks/ArrayPool.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../geometry/Multipoint.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/Ellipsoid.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/extentUtils.js";import"../../geometry/Polyline.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/jsonMap.js";import"../../kernel.js";import"../../chunks/mathUtils.js";import"../../chunks/common.js";import"../../chunks/unitUtils.js";import"../../chunks/projectionEllipsoid.js";import"../../chunks/mat4.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../chunks/OptimizedFeature.js";import"../support/fieldUtils.js";import"../../chunks/arcadeOnDemand.js";import"../../chunks/enumeration.js";import"../../chunks/domains.js";import"../support/CodedValueDomain.js";import"../support/Domain.js";import"../support/InheritedDomain.js";import"../support/RangeDomain.js";import"../../chunks/fieldType.js";function T(e){var t;return null!=(t=function(e){var t,r,n,s;const o=k.exec(e);if(!o)return null;const i=o.groups,a=+i.year,u=+i.month-1,p=+i.day,l=+(null!=(t=i.hours)?t:"0"),c=+(null!=(r=i.minutes)?r:"0"),m=+(null!=(n=i.seconds)?n:"0");if(l>23)return null;if(c>59)return null;if(m>59)return null;const y=null!=(s=i.ms)?s:"0",d=y?+y.padEnd(3,"0").substring(0,3):0;let f;if(i.isUTC)f=Date.UTC(a,u,p,l,c,m,d);else if(i.offsetSign){const e=+i.offsetHours,t=+i.offsetMinutes;f=6e4*("+"===i.offsetSign?-1:1)*(60*e+t)+Date.UTC(a,u,p,l,c,m,d)}else f=new Date(a,u,p,l,c,m,d).getTime();return Number.isNaN(f)?null:f}(e))?t:function(e){const t=new Date(e).getTime();return Number.isNaN(t)?null:t}(e)}const k=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/,S="__esri_wfs_id__";async function F(t,r){const n=x((await e(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:"2.0.0",...null==r?void 0:r.customParameters},signal:null==r?void 0:r.signal})).data);return function(e,t){if(!a(e))return;u(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=p(t.operations.DescribeFeatureType.url));u(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=p(t.operations.GetFeature.url))}(t,n),n}function x(e){const r=_(e);!function(e){const r=e.firstElementChild.getAttribute("version");if(!r)return;if("2.0.0"!==r)throw new t("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${r}. Supported version: 2.0.0`)}(r),V(r);const s=r.firstElementChild,o=n(h(s,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},r=new Set([4326]),n=e=>{var t,n;const s=parseInt(null==(t=e.textContent.match(/(?<wkid>\d+$)/i))||null==(n=t.groups)?void 0:n.wkid,10);Number.isNaN(s)||r.add(s)};return w(e,{Name:e=>{const{name:r,prefix:n}=L(e.textContent);t.typeName=`${n}:${r}`,t.name=r,t.namespacePrefix=n,t.namespaceUri=e.lookupNamespaceURI(n)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=function(e){let t,r,n,s;for(const o of e.children)switch(o.localName){case"LowerCorner":[t,r]=o.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[n,s]=o.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:n,ymax:s,spatialReference:d}}(e)},DefaultSRS:n,DefaultCRS:n,OtherSRS:n,OtherCRS:n}),t.title||(t.title=t.name),t.supportedSpatialReferences.push(...r),t}}}));return{operations:v(s),get featureTypes(){return Array.from(o())},readFeatureTypes:o}}const C=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function v(e){let r=!1;const n={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if(w(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{n.GetCapabilities.url=e.getAttribute("xlink:href")}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{n.DescribeFeatureType.url=e.getAttribute("xlink:href")}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{n.GetFeature.url=e.getAttribute("xlink:href")}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:e=>{const t=e.textContent;C.has(t.toLowerCase())&&(n.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{r="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{n.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),!r)throw new t("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(s(n.GetFeature.outputFormat))throw new t("wfs-layer:geojson-not-supported","WFS service doesn't support GeoJSON output format");return n}function E(e,t,n){return r(e,(e=>n?e.name===t&&e.namespaceUri===n:e.typeName===t||e.name===t))}async function N(e,r,n,o={}){var a;const{featureType:u,extent:p}=await P(e,r,n,o),{fields:l,geometryType:c,swapXY:y,objectIdField:d,geometryField:f}=await async function(e,r,n={}){const[o,a]=await i([A(e.operations.DescribeFeatureType.url,r,n),R(e,r,n)]);if(o.error||a.error)throw new t("wfs-layer:getWFSLayerTypeInfo-error",`An error occurred while getting info about the feature type '${r}'`,{error:o.error||a.error});const{fields:u,errors:p}=o.value,l=o.value.geometryType||a.value.geometryType,c=a.value.swapXY;if(s(l))throw new t("wfs-layer:unknown-geometry-type",`The geometry type could not be determined for type '${r}`,{typeName:r,geometryType:l,fields:u,errors:p});return{...U(u),geometryType:l,swapXY:c}}(e,u.typeName,o);return{url:e.operations.GetCapabilities.url,name:u.name,namespaceUri:u.namespaceUri,fields:l,geometryField:f,geometryType:c,objectIdField:d,spatialReference:null!=(a=o.spatialReference)?a:m.WGS84,extent:p,swapXY:y,wfsCapabilities:e,customParameters:o.customParameters}}async function P(e,r,n,o={}){const{spatialReference:i=m.WGS84}=o,a=e.readFeatureTypes(),u=r?E(a,r,n):a.next().value;if(s(u))throw r?new t("wfs-layer:feature-type-not-found",`The type '${r}' could not be found in the service`):new t("wfs-layer:empty-service","The service is empty");let p=new b({...u.extent,spatialReference:i});if(!y(i,d))try{await l(d,i,void 0,o),p=c(p,d)}catch{throw new t("wfs-layer:unsupported-spatial-reference","Projection not supported")}return{extent:p,spatialReference:i,featureType:u}}function U(e){var t;const r=e.find((e=>"geometry"===e.type));let n=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),n||(n=new j({name:"__esri_wfs_id__",type:"oid",alias:"__esri_wfs_id__"}),e.unshift(n)),{geometryField:null!=(t=null==r?void 0:r.name)?t:null,objectIdField:n.name,fields:e}}async function R(t,r,n={}){var s;let o,i=!1;const[a,u]=await Promise.all([M(t.operations.GetFeature.url,r,t.operations.GetFeature.outputFormat,{...n,count:1}),e(t.operations.GetFeature.url,{responseType:"text",query:O(r,void 0,{...n,count:1}),signal:null==n?void 0:n.signal})]),p="FeatureCollection"===a.type&&(null==(s=a.features[0])?void 0:s.geometry);if(p){let e;switch(o=f.fromJSON(g(p.type)),p.type){case"Point":e=p.coordinates;break;case"LineString":case"MultiPoint":e=p.coordinates[0];break;case"MultiLineString":case"Polygon":e=p.coordinates[0][0];break;case"MultiPolygon":e=p.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(u.data);if(t){const r=e[0].toFixed(3),n=e[1].toFixed(3),s=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&n===s&&(i=!0)}}return{geometryType:o,swapXY:i}}async function A(t,r,n){return G(r,(await e(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:"2.0.0",TYPENAME:r,...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data)}function G(e,n){const{name:s}=L(e),i=_(n);V(i);const a=r(h(i.firstElementChild,{element:e=>({name:e.getAttribute("name"),typeName:L(e.getAttribute("type")).name})}),(({name:e})=>e===s));if(o(a)){const e=r(h(i.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute("name")===a.typeName));if(o(e))return function(e){var r,n;const s=[],o=[];let i;const a=h(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const u of a){const a=u.getAttribute("name");if(!a)continue;let p,l;if(u.hasAttribute("type")?p=L(u.getAttribute("type")).name:w(u,{simpleType:{restriction:e=>(p=L(e.getAttribute("base")).name,{maxLength:e=>{l=+e.getAttribute("value")}})}}),!p)continue;const c="true"===u.getAttribute("nillable");let m=!1;switch(p.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":o.push(new j({name:a,alias:a,type:"integer",nullable:c}));break;case"float":case"double":case"decimal":o.push(new j({name:a,alias:a,type:"double",nullable:c}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":o.push(new j({name:a,alias:a,type:"string",nullable:c,length:null!=(r=l)?r:255}));break;case"datetime":case"date":o.push(new j({name:a,alias:a,type:"date",nullable:c,length:null!=(n=l)?n:36}));break;case"pointpropertytype":i="point",m=!0;break;case"multipointpropertytype":i="multipoint",m=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":i="polyline",m=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":i="polygon",m=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":m=!0,s.push(new t("wfs-layer:unknown-geometry-type",`geometry type '${p}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:s.push(new t("wfs-layer:unknown-field-type",`Unknown field type '${p}'`,{type:(new XMLSerializer).serializeToString(e)}))}m&&o.push(new j({name:a,alias:a,type:"geometry",nullable:c}))}for(const e of o)if("integer"===e.type&&!e.nullable&&D.has(e.name.toLowerCase())){e.type="oid";break}return{geometryType:i,fields:o,errors:s}}(e)}throw new t("wfs-layer:feature-type-not-found",`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(i)})}const D=new Set(["objectid","fid"]);async function M(r,n,s,o){let{data:i}=await e(r,{responseType:"text",query:O(n,s,o),signal:null==o?void 0:o.signal});i=i.replace(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{var a;if(null!=o&&null!=(a=o.dateFields)&&a.length){const e=new Set(o.dateFields);return JSON.parse(i,((t,r)=>e.has(t)?T(r):r))}return JSON.parse(i)}catch(e){throw new t("wfs-layer:malformed-json","Error while parsing the response",{response:i,error:e})}}function O(e,t,r){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:"EPSG:4326",STARTINDEX:null==r?void 0:r.startIndex,COUNT:null==r?void 0:r.count,...null==r?void 0:r.customParameters}}async function I(t,r,n){const s=_((await e(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:r,RESULTTYPE:"hits",...null==n?void 0:n.customParameters},signal:null==n?void 0:n.signal})).data);V(s);const o=Number.parseFloat(s.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(o)?0:o}function _(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function L(e){const[t,r]=e.split(":");return{prefix:r?t:"",name:null!=r?r:t}}function V(e){let r,n;if(w(e.firstElementChild,{Exception:e=>(r=e.getAttribute("exceptionCode"),{ExceptionText:e=>{n=e.textContent}})}),r)throw new t(`wfs-layer:${r}`,n)}export{S as WFS_OID_FIELD_NAME,A as describeFeatureType,E as findFeatureType,F as getCapabilities,M as getFeature,I as getFeatureCount,P as getFeatureTypeInfo,N as getWFSLayerInfo,G as parseDescribeFeatureTypeResponse,x as parseGetCapabilitiesResponse,U as prepareWFSLayerFields};

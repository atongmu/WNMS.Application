/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{i as t,b as e}from"../core/lang.js";import n from"../layers/support/PixelBlock.js";function i(e){return t(e)&&"esri.layers.support.PixelBlock"===e.declaredClass&&e.pixels&&e.pixels.length>0}function l(t,e){if(null==e||!e.length||!i(t))return t;const l=t.pixels.length;return e&&e.some((t=>t>=l))||1===l&&1===e.length&&0===e[0]?t:l!==e.length||e.some(((t,e)=>t!==e))?new n({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function o(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let i=0;n[0][0]<0&&(i=n[0][0]);const l=Math.max(256,n[n.length-1][0]-i+1),o=new Uint8Array(4*l),r=[];let s,a=0,f=0;const h=5===n[0].length;if(l>65536)return n.forEach((t=>{r[t[0]-i]=h?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:i,alphaSpecified:h};if(t.fillUnspecified)for(s=n[f],a=s[0]-i;a<l;a++)o[4*a]=s[1],o[4*a+1]=s[2],o[4*a+2]=s[3],o[4*a+3]=h?s[4]:255,a===s[0]-i&&(s=f===n.length-1?s:n[++f]);else for(a=0;a<n.length;a++)s=n[a],f=4*(s[0]-i),o[f]=s[1],o[f+1]=s[2],o[f+2]=s[3],o[f+3]=h?s[4]:255;return{indexedColormap:o,offset:i,alphaSpecified:h}}function r(t,e){if(!i(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const n=t.clone(),l=n.pixels;let o=n.mask;const r=n.width*n.height;if(1!==l.length)return t;const{indexedColormap:s,indexed2DColormap:a,offset:f,alphaSpecified:h}=e,u=s.length-1;let c=0;const p=l[0],x=new Uint8Array(p.length),m=new Uint8Array(p.length),d=new Uint8Array(p.length);let g,y=0;if(s)if(o)for(c=0;c<r;c++)o[c]&&(y=4*(p[c]-f),y<f||y>u?o[c]=0:(x[c]=s[y],m[c]=s[y+1],d[c]=s[y+2],o[c]=s[y+3]));else{for(o=new Uint8Array(r),c=0;c<r;c++)y=4*(p[c]-f),y<f||y>u?o[c]=0:(x[c]=s[y],m[c]=s[y+1],d[c]=s[y+2],o[c]=s[y+3]);n.mask=o}else if(o)for(c=0;c<r;c++)o[c]&&(g=a[p[c]],x[c]=g[0],m[c]=g[1],d[c]=g[2],o[c]=g[3]);else{for(o=new Uint8Array(r),c=0;c<r;c++)g=a[p[c]],x[c]=g[0],m[c]=g[1],d[c]=g[2],o[c]=g[3];n.mask=o}return n.pixels=[x,m,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function s(t){if(!i(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:n,pixelType:l,statistics:o}=t,r=t.width*t.height,s=e.length;let a,f,h,u,c;const p=[],x=[];let m,d,g,y,w,M,k,A,U,C;const T=256;for(u=0;u<s;u++){if(m=new Uint32Array(T),g=e[u],"u8"===l)if(a=-.5,f=255.5,n)for(c=0;c<r;c++)n[c]&&m[g[c]]++;else for(c=0;c<r;c++)m[g[c]]++;else{if(a=o[u].minValue,f=o[u].maxValue,h=(f-a)/T,d=new Uint32Array(257),n)for(c=0;c<r;c++)n[c]&&d[Math.floor((g[c]-a)/h)]++;else for(c=0;c<r;c++)d[Math.floor((g[c]-a)/h)]++;for(c=0;c<255;c++)m[c]=d[c];m[255]=d[255]+d[256]}for(p.push({min:a,max:f,size:T,counts:m}),y=0,w=0,A=0,c=0;c<T;c++)y+=m[c],w+=c*m[c];for(U=w/y,c=0;c<T;c++)A+=m[c]*(c-U)**2;C=Math.sqrt(A/(y-1)),h=(f-a)/T,M=(U+.5)*h+a,k=C*h,x.push({min:a,max:f,avg:M,stddev:k})}return{statistics:x,histograms:p}}function a(t){const e=[];for(let n=0;n<t.length;n++){const{min:i,max:l,size:o,counts:r}=t[n];let s=0,a=0;for(let t=0;t<o;t++)s+=r[t],a+=t*r[t];const f=a/s;let h=0;for(let t=0;t<o;t++)h+=r[t]*(t-f)**2;const u=(l-i)/o,c=(f+.5)*u+i,p=Math.sqrt(h/(s-1))*u;e.push({min:i,max:l,avg:c,stddev:p})}return e}function f(t){const{minCutOff:e,maxCutOff:n,gamma:i,pixelType:l}=t,o=t.outMin||0,r=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(l))return null;const s=e.length;let a,f,h=0;"s8"===l?h=-127:"s16"===l&&(h=-32767);let u=256;["u16","s16"].indexOf(l)>-1&&(u=65536);const c=[],p=[],x=r-o;for(a=0;a<s;a++)p[a]=n[a]-e[a],c[a]=x/(n[a]-e[a]);const m=i&&i.length>=s,d=[];if(m)for(a=0;a<s;a++)i[a]>1?i[a]>2?d[a]=6.5+(i[a]-2)**2.5:d[a]=6.5+100*(2-i[a])**4:d[a]=1;let g;const y=[];let w,M,k;if(m)for(a=0;a<s;a++){for(k=[],f=0;f<u;f++)w=f+h,g=(w-e[a])/p[a],M=1,i[a]>1&&(M-=(1/x)**(g*d[a])),w<n[a]&&w>e[a]?k[f]=Math.floor(M*x*g**(1/i[a]))+o:w>=n[a]?k[f]=r:k[f]=o;y[a]=k}else for(a=0;a<s;a++){for(k=[],f=0;f<u;f++)w=f+h,w<=e[a]?k[f]=o:w>=n[a]?k[f]=r:k[f]=Math.floor((w-e[a])/p[a]*x)+o;y[a]=k}if(null!=t.contrastOffset){const e=function(t,e){const n=Math.min(Math.max(t,-100),100),i=Math.min(Math.max(e,-100),100),l=255,o=128;let r,s;const a=new Uint8Array(256);for(r=0;r<256;r++)n>0&&n<100?s=(200*r-100*l+2*l*i)/(2*(100-n))+o:n<=0&&n>-100?s=(200*r-100*l+2*l*i)*(100+n)/2e4+o:100===n?(s=200*r-100*l+(l+1)*(100-n)+2*l*i,s=s>0?l:0):-100===n&&(s=o),a[r]=s>l?l:s<0?0:s;return a}(t.contrastOffset,t.brightnessOffset);for(a=0;a<s;a++)for(k=y[a],f=0;f<u;f++)k[f]=e[k[f]]}return{lut:y,offset:h}}function h(t,e=256){e=Math.min(e,256);const{size:n,counts:i}=t,l=new Uint8Array(n),o=i.reduce(((t,n)=>t+n/e),0);let r=0,s=0,a=0,f=o;for(let t=0;t<n;t++)if(a+=i[t],!(t<n-1&&a+i[t+1]<f)){for(;r<e-1&&f<a;)r++,f+=o;for(let e=s;e<=t;e++)l[e]=r;s=t+1}for(let t=s;t<n;t++)l[t]=e-1;return l}function u(t,e){if(!i(t))return null;const n=t.clone(),{pixels:l,mask:o}=n,{minCutOff:r,maxCutOff:s,gamma:a}=e,f=e.outMin||0,h=e.outMax||255,u=n.width*n.height,c=l.length;let p,x,m,d,g;const y=h-f,w=[],M=[];for(p=0;p<c;p++)M[p]=s[p]-r[p],w[p]=y/(s[p]-r[p]);const k=a&&a.length>=c,A=[];if(k)for(p=0;p<c;p++)a[p]>1?a[p]>2?A[p]=6.5+(a[p]-2)**2.5:A[p]=6.5+100*(2-a[p])**4:A[p]=1;if(k)if(null!=o){for(x=0;x<u;x++)if(o[x])for(p=0;p<c;p++)m=l[p][x],g=(m-r[p])/M[p],d=1,a[p]>1&&(d-=(1/y)**(g*A[p])),m<s[p]&&m>r[p]?l[p][x]=Math.floor(d*y*g**(1/a[p]))+f:m>=s[p]?l[p][x]=h:l[p][x]=f}else for(x=0;x<u;x++)for(p=0;p<c;p++)m=l[p][x],g=(m-r[p])/M[p],d=1,a[p]>1&&(d-=(1/y)**(g*A[p])),m<s[p]&&m>r[p]?l[p][x]=Math.floor(d*y*g**(1/a[p]))+f:m>=s[p]?l[p][x]=h:l[p][x]=f;else if(null!=o){for(x=0;x<u;x++)if(o[x])for(p=0;p<c;p++)m=l[p][x],m<s[p]&&m>r[p]?l[p][x]=Math.floor((m-r[p])/M[p]*y)+f:m>=s[p]?l[p][x]=h:l[p][x]=f}else for(x=0;x<u;x++)for(p=0;p<c;p++)m=l[p][x],m<s[p]&&m>r[p]?l[p][x]=Math.floor((m-r[p])/M[p]*y)+f:m>=s[p]?l[p][x]=h:l[p][x]=f;return n.pixelType="u8",n.updateStatistics(),n}function c(t,e){if(!i(t))return null;const{pixels:l,mask:o}=t,r=t.width*t.height,s=l.length;let a=e.lut;const{offset:f}=e;let h,u;a&&1===a[0].length&&(a=l.map((()=>a)));const c=[];let p,x,m;if(f)if(null==o)for(h=0;h<s;h++){for(p=l[h],x=a[h],m=new Uint8Array(r),u=0;u<r;u++)m[u]=x[p[u]-f];c.push(m)}else for(h=0;h<s;h++){for(p=l[h],x=a[h],m=new Uint8Array(r),u=0;u<r;u++)o[u]&&(m[u]=x[p[u]-f]);c.push(m)}else if(null==o)for(h=0;h<s;h++){for(p=l[h],x=a[h],m=new Uint8Array(r),u=0;u<r;u++)m[u]=x[p[u]];c.push(m)}else for(h=0;h<s;h++){for(p=l[h],x=a[h],m=new Uint8Array(r),u=0;u<r;u++)o[u]&&(m[u]=x[p[u]]);c.push(m)}const d=new n({width:t.width,height:t.height,pixels:c,mask:o,pixelType:"u8"});return d.updateStatistics(),d}function p(t,e){if(!i(t))return null;const n=t.clone(),{pixels:l}=n,o=n.width*n.height,r=e.length,s=Math.floor(r/2),a=e[Math.floor(s)],f=l[0];let h,u,c,p,x,m,d=!1;const g=new Uint8Array(o),y=new Uint8Array(o),w=new Uint8Array(o);let M=n.mask;const k=4===e[0].mappedColor.length;for(M||(M=new Uint8Array(o),M.fill(k?255:1),n.mask=M),x=0;x<o;x++)if(M[x]){for(h=f[x],d=!1,m=s,u=a,c=0,p=r-1;p-c>1;){if(h===u.value){d=!0;break}h>u.value?c=m:p=m,m=Math.floor((c+p)/2),u=e[Math.floor(m)]}d||(h===e[c].value?(u=e[c],d=!0):h===e[p].value?(u=e[p],d=!0):h<e[c].value?(d=!1,u=null):h>e[c].value&&(h<e[p].value?(u=e[c],d=!0):p===r-1?(d=!1,u=null):(u=e[p],d=!0))),d?(g[x]=u.mappedColor[0],y[x]=u.mappedColor[1],w[x]=u.mappedColor[2],M[x]=u.mappedColor[3]):g[x]=y[x]=w[x]=M[x]=0}return n.pixels=[g,y,w],n.mask=M,n.pixelType="u8",n.maskIsAlpha=k,n}function x(t,n){if(!t||0===t.length)return null;const i=t.filter((t=>t.pixelBlock))[0];if(!i||e(i.pixelBlock))return null;const l=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,o=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,r=.01*Math.min(l,o),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,s.map((t=>t.extent.xmin))),f=Math.min.apply(null,s.map((t=>t.extent.ymin))),h=Math.max.apply(null,s.map((t=>t.extent.xmax))),u=Math.max.apply(null,s.map((t=>t.extent.ymax))),c={x:Math.round((n.xmin-a)/l),y:Math.round((u-n.ymax)/o)},p={width:Math.round((h-a)/l),height:Math.round((u-f)/o)},x={width:Math.round((n.xmax-n.xmin)/l),height:Math.round((n.ymax-n.ymin)/o)};if(Math.round(p.width/i.pixelBlock.width)*Math.round(p.height/i.pixelBlock.height)!==s.length||c.x<0||c.y<0||p.width<x.width||p.height<x.height)return null;return{extent:n,pixelBlock:d(s.map((t=>t.pixelBlock)),p,{clipOffset:c,clipSize:x})}}function m(t,e,n,i,l,o){const{width:r,height:s}=n.block,{x:a,y:f}=n.offset,{width:h,height:u}=n.mosaic,c=function(t,e,n,i,l,o,r,s){return{xmin:l<=n*t?0:l<n*t+t?l-n*t:t,ymin:o<=i*e?0:o<i*e+e?o-i*e:e,xmax:l+r<=n*t?0:l+r<n*t+t?l+r-n*t:t,ymax:o+s<=i*e?0:o+s<i*e+e?o+s-i*e:e}}(r,s,i,l,a,f,h,u);let p=0,x=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth,e=r*o.resolutionX,n=o.startX+i*e,l=n+e;n<t&&l>t?x=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,x=0)}if(c.xmax-=x,"number"!=typeof e)for(let n=c.ymin;n<c.ymax;n++){const o=(l*s+n-f)*h+(i*r-a)+p,u=n*r;for(let n=c.xmin;n<c.xmax;n++)t[o+n]=e[u+n]}else for(let n=c.ymin;n<c.ymax;n++){const o=(l*s+n-f)*h+(i*r-a)+p;for(let n=c.xmin;n<c.xmax;n++)t[o+n]=e}}function d(l,o,r={}){const{clipOffset:s,clipSize:a,alignmentInfo:f,blockWidths:h}=r;if(h)return function(e,l,o){const r=e.find((e=>t(e)));if(!t(r))return null;const s=e.some((e=>!t(e)||!!e.mask)),{width:a,height:f}=l,h=s?new Uint8Array(a*f):null,{blockWidths:u}=o,c=[],p=r.getPlaneCount(),x=n.getPixelArrayConstructor(r.pixelType);if(s)for(let t=0,n=0;t<e.length;n+=u[t],t++){const l=e[t];if(!i(l))continue;const o=l.mask;for(let e=0;e<f;e++)for(let i=0;i<u[t];i++)h[e*a+i+n]=null==o?255:o[e*l.width+i]}for(let t=0;t<p;t++){const n=new x(a*f);for(let l=0,o=0;l<e.length;o+=u[l],l++){const r=e[l];if(!i(r))continue;const s=r.pixels[t];if(null!=s)for(let t=0;t<f;t++)for(let e=0;e<u[l];e++)n[t*a+e+o]=s[t*r.width+e]}c.push(n)}const m=new n({width:a,height:f,mask:h,pixels:c,pixelType:r.pixelType});return m.updateStatistics(),m}(l,o,{blockWidths:h});const u=l.filter((t=>i(t)))[0];if(e(u))return null;const c=a?a.width:o.width,p=a?a.height:o.height,x=u.width,d=u.height,g=o.width/x,y=o.height/d,w={offset:s||{x:0,y:0},mosaic:a||o,block:{width:x,height:d}},M=u.pixelType,k=n.getPixelArrayConstructor(M),A=u.pixels.length,U=[];let C,T;for(let t=0;t<A;t++){T=new k(c*p);for(let e=0;e<y;e++)for(let n=0;n<g;n++){const o=l[e*g+n];i(o)&&(C=o.pixels[t],m(T,C,w,n,e,f))}U.push(T)}let S;if(l.some((t=>e(t)||t.mask&&t.mask.length>0))){S=new Uint8Array(c*p);for(let e=0;e<y;e++)for(let n=0;n<g;n++){const i=l[e*g+n],o=t(i)?i.mask:null;m(S,o||(i?1:0),w,n,e,f)}}const v=new n({width:c,height:p,pixels:U,pixelType:M,mask:S});return v.updateStatistics(),v}function g(t,e,n){if(!i(t))return null;const{width:l,height:o}=t,r=e.x,s=e.y,a=n.width+r,f=n.height+s;if(r<0||s<0||a>l||f>o)return t;if(0===r&&0===s&&a===l&&f===o)return t;t.mask||(t.mask=new Uint8Array(l*o));const h=t.mask;for(let t=0;t<o;t++){const e=t*l;for(let n=0;n<l;n++)h[e+n]=t<s||t>=f||n<r||n>=a?0:1}return t.updateStatistics(),t}function y(t){if(0===t.size)return 0;let e=0,n=-1,i=0;const l=t.keys();let o=l.next();for(;!o.done;)i=t.get(o.value),i>e&&(n=o.value,e=i),o=l.next();return n}function w(t,e,n){if(0===n)return;const i=t.get(e);1===i?t.delete(e):t.set(e,i-1)}function M(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function k(t,e,l){let{x:o,y:r}=e;const{width:s,height:a}=l;if(0===o&&0===r&&a===t.height&&s===t.width)return t;const{width:f,height:h}=t,u=Math.max(0,r),c=Math.max(0,o),p=Math.min(o+s,f),x=Math.min(r+a,h);if(p<0||x<0||!i(t))return null;o=Math.max(0,-o),r=Math.max(0,-r);const{pixels:m,mask:d}=t,g=s*a,y=m.length,w=[];for(let e=0;e<y;e++){const i=m[e],l=n.createEmptyBand(t.pixelType,g);for(let t=u;t<x;t++){const e=t*f;let n=(t+r-u)*s+o;for(let t=c;t<p;t++)l[n++]=i[e+t]}w.push(l)}const M=new Uint8Array(g);for(let t=u;t<x;t++){const e=t*f;let n=(t+r-u)*s+o;for(let t=c;t<p;t++)M[n++]=d?d[e+t]:1}const k=new n({width:l.width,height:l.height,pixelType:t.pixelType,pixels:w,mask:M});return k.updateStatistics(),k}function A(t,e=!0){if(!i(t))return null;const{pixels:l,width:o,height:r,mask:s,pixelType:a}=t,f=[],h=Math.round(o/2),u=Math.round(r/2),c=r-1,p=o-1;for(let t=0;t<l.length;t++){const i=l[t],s=n.createEmptyBand(a,h*u);let x=0;for(let t=0;t<r;t+=2)for(let n=0;n<o;n+=2){const l=i[t*o+n];if(e){const e=n===p?l:i[t*o+n+1],r=t===c?l:i[t*o+n+o],a=n===p?r:t===c?e:i[t*o+n+o+1];s[x++]=(l+e+r+a)/4}else s[x++]=l}f.push(s)}let x=null;if(s){x=new Uint8Array(h*u);let t=0;for(let n=0;n<r;n+=2)for(let i=0;i<o;i+=2){const l=s[n*o+i];if(e){const e=i===p?l:s[n*o+i+1],r=n===c?l:s[n*o+i+o],a=i===p?r:n===c?e:s[n*o+i+o+1];x[t++]=l*e*r*a?1:0}else x[t++]=l}}return new n({width:h,height:u,pixelType:a,pixels:f,mask:x})}function U(t,e,n){if(!i(t))return null;const{width:l,height:o}=e;let{width:r,height:s}=t;const a=new Map,f={x:0,y:0},h=null==n?1:1+n;let u=t;for(let t=0;t<h;t++){const n=Math.ceil(r/l),i=Math.ceil(s/o);for(let r=0;r<i;r++){f.y=r*o;for(let i=0;i<n;i++){f.x=i*l;const n=k(u,f,e);a.set(`${t}/${r}/${i}`,n)}}t<h-1&&(u=A(u)),r=Math.round(r/2),s=Math.round(s/2)}return a}function C(t,e,l,o,r="nearest"){if(!i(t))return null;"majority"===r&&(t=function(t){if(!i(t))return null;const e=t.clone(),{width:n,height:l,pixels:o,mask:r}=t,s=o[0],a=e.pixels[0];for(let t=2;t<l-1;t++){const e=new Map;for(let i=t-2;i<t+2;i++)for(let t=0;t<4;t++){const l=i*n+t;M(e,s[l],r?r[l]:1)}a[t*n]=y(e),a[t*n+1]=a[t*n+2]=a[t*n];let i=3;for(;i<n-1;i++){let l=(t-2)*n+i+1;M(e,s[l],r?r[l]:1),l=(t-1)*n+i+1,M(e,s[l],r?r[l]:1),l=t*n+i+1,M(e,s[l],r?r[l]:1),l=(t+1)*n+i+1,M(e,s[l],r?r[l]:1),l=(t-2)*n+i-3,w(e,s[l],r?r[l]:1),l=(t-1)*n+i-3,w(e,s[l],r?r[l]:1),l=t*n+i-3,w(e,s[l],r?r[l]:1),l=(t+1)*n+i-3,w(e,s[l],r?r[l]:1),a[t*n+i]=y(e)}a[t*n+i+1]=a[t*n+i]}for(let t=0;t<n;t++)a[t]=a[n+t]=a[2*n+t],a[(l-1)*n+t]=a[(l-2)*n+t];return e.updateStatistics(),e}(t));const{pixels:s,mask:a,pixelType:f}=t,h=t.width,u=t.height,c=n.getPixelArrayConstructor(f),p=s.length,{width:x,height:m}=e,d=o.cols,g=o.rows,k=Math.ceil(x/d-.1/d),A=Math.ceil(m/g-.1/g);let U,C,T,S,v,b,B,O=!1;for(let t=0;t<l.length;t+=3)-1===l[t]&&-1===l[t+1]&&-1===l[t+2]&&(O=!0);const P=k*d,z=P*A*g,j=new Float32Array(z),I=new Float32Array(z);let W,D,E=0;const $="majority"===r?0:.5;for(let t=0;t<A;t++)for(let e=0;e<k;e++){U=12*(t*k+e),C=l[U],T=l[U+1],S=l[U+2],v=l[U+3],b=l[U+4],B=l[U+5];for(let n=0;n<g;n++){E=(t*g+n)*P+e*d,D=(n+.5)/g;for(let t=0;t<n;t++)W=(t+.5)/d,j[E+t]=Math.round((C*W+T*D+S)*h-$),I[E+t]=Math.round((v*W+b*D+B)*u-$)}U+=6,C=l[U],T=l[U+1],S=l[U+2],v=l[U+3],b=l[U+4],B=l[U+5];for(let n=0;n<g;n++){E=(t*g+n)*P+e*d,D=(n+.5)/g;for(let t=n;t<d;t++)W=(t+.5)/d,j[E+t]=Math.round((C*W+T*D+S)*h-$),I[E+t]=Math.round((v*W+b*D+B)*u-$)}}const q=(t,e)=>{for(let n=0;n<m;n++){U=n*P;for(let i=0;i<x;i++)j[U]<0||I[U]<0?t[n*x+i]=0:t[n*x+i]=e[j[U]+I[U]*h],U++}},F=[];let V;for(let t=0;t<p;t++)V=new c(x*m),q(V,s[t]),F.push(V);const X=new n({width:x,height:m,pixelType:f,pixels:F});if(a)X.mask=new Uint8Array(x*m),q(X.mask,a);else if(O){X.mask=new Uint8Array(x*m);for(let t=0;t<x*m;t++)X.mask[t]=j[t]<0||I[t]<0?0:1}return X.updateStatistics(),X}export{f as a,o as b,r as c,h as d,l as e,s as f,U as g,a as h,i,g as j,C as k,c as l,d as m,k as n,x as o,p as r,u as s};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{b as n}from"../core/lang.js";function t(n,t){return n?t?4:3:t?3:2}function r(r,N,s,c,f){if(n(N)||!N.lengths.length)return null;const i="upperLeft"===(null==f?void 0:f.originPosition)?-1:1;r.lengths.length&&(r.lengths.length=0),r.coords.length&&(r.coords.length=0);const T=r.coords,g=[],h=s?[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY]:[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY],{lengths:E,coords:m}=N,b=t(s,c);let F=0;for(const n of E){const t=e(h,m,F,n,s,c,i);t&&g.push(t),F+=n*b}if(g.sort(((n,t)=>{let r=i*n[2]-i*t[2];return 0===r&&s&&(r=n[4]-t[4]),r})),g.length){let n=6*g[0][2];T[0]=g[0][0]/n,T[1]=g[0][1]/n,s&&(n=6*g[0][4],T[2]=0!==n?g[0][3]/n:0),(T[0]<h[0]||T[0]>h[1]||T[1]<h[2]||T[1]>h[3]||s&&(T[2]<h[4]||T[2]>h[5]))&&(T.length=0)}if(!T.length){const n=N.lengths[0]?function(n,r,e,N,s){const c=t(N,s);let f=r,i=r+c,T=0,g=0,h=0,E=0;for(let t=0,r=e-1;t<r;t++,f+=c,i+=c){const t=n[f],r=n[f+1],e=n[f+2],s=n[i],c=n[i+1],m=n[i+2],b=N?o(t,r,e,s,c,m):I(t,r,s,c);if(b)if(T+=b,N){const n=l(t,r,e,s,c,m);g+=b*n[0],h+=b*n[1],E+=b*n[2]}else{const n=u(t,r,s,c);g+=b*n[0],h+=b*n[1]}}if(T>0)return N?[g/T,h/T,E/T]:[g/T,h/T];if(e>0)return N?[n[r],n[r+1],n[r+2]]:[n[r],n[r+1]];return null}(m,0,E[0],s,c):null;if(!n)return null;T[0]=n[0],T[1]=n[1],s&&n.length>2&&(T[2]=n[2])}return r}function e(n,r,e,I,o,u,l=1){const N=t(o,u);let s=e,c=e+N,f=0,i=0,T=0,g=0,h=0;for(let t=0,e=I-1;t<e;t++,s+=N,c+=N){const t=r[s],e=r[s+1],I=r[s+2],u=r[c],l=r[c+1],N=r[c+2];let E=t*l-u*e;g+=E,f+=(t+u)*E,i+=(e+l)*E,o&&(E=t*N-u*I,T+=(I+N)*E,h+=E),t<n[0]&&(n[0]=t),t>n[1]&&(n[1]=t),e<n[2]&&(n[2]=e),e>n[3]&&(n[3]=e),o&&(I<n[4]&&(n[4]=I),I>n[5]&&(n[5]=I))}if(g*l>0&&(g*=-1),h*l>0&&(h*=-1),!g)return null;const E=[f,i,.5*g];return o&&(E[3]=T,E[4]=.5*h),E}function I(n,t,r,e){const I=r-n,o=e-t;return Math.sqrt(I*I+o*o)}function o(n,t,r,e,I,o){const u=e-n,l=I-t,N=o-r;return Math.sqrt(u*u+l*l+N*N)}function u(n,t,r,e){return[n+.5*(r-n),t+.5*(e-t)]}function l(n,t,r,e,I,o){return[n+.5*(e-n),t+.5*(I-t),r+.5*(o-r)]}export{r as g};

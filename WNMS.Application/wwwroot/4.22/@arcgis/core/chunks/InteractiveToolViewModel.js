/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../core/Accessor.js";import s from"../core/Error.js";import i from"../core/Handles.js";import{i as o,z as r,k as n,b as a,u as l}from"../core/lang.js";import{createTask as h,throwIfAborted as c,isAborted as p}from"../core/promiseUtils.js";import{r as d,s as w,a as v}from"./reactiveUtils.js";import{property as u}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as y}from"../core/accessorSupport/decorators/subclass.js";import{e as _}from"./interactiveToolUtils.js";let m=class extends e{constructor(t){super(t),this.analysis=null,this.tool=null,this._baseHandles=new i,this._loggedUnsupportedErrorOnce=!1,this._reconnectViewTask=null,this._isAnalysisOwner=!0,this._parentChangeFromReconnect=!1,this._toolCreationTask=null,t&&null!=t.visible&&(this.visible=t.visible)}initialize(){this._baseHandles.add([d((()=>({ready:o(this.view)&&this.view.ready,supported:this.supported})),(({ready:t,supported:e})=>{!t||e||this._loggedUnsupportedErrorOnce||(this.logError(this.unsupportedErrorMessage),this._loggedUnsupportedErrorOnce=!0),this._scheduleViewReconnect()}),w),d((()=>o(this.analysis)?this.analysis.parent:null),(t=>{this._isAnalysisOwner&&o(t)&&t!==this.view&&(this._isAnalysisOwner=!1),this._parentChangeFromReconnect||this._scheduleViewReconnect()}),{sync:!0})])}destroy(){this.removeTool(),this._reconnectViewTask=r(this._reconnectViewTask),this._disconnectFromView(this.view),this.view=null,this._baseHandles=n(this._baseHandles),this._isAnalysisOwner&&o(this.analysis)&&(this.analysis.destroy(),this._set("analysis",null))}get supported(){return a(this.view)||this.view.type===this.supportedViewType}get view(){return this._get("view")}set view(t){if(t===this.view)return;this._disconnectFromView(this.view),this.removeTool(),this._set("view",t);const e="tools";this._baseHandles.remove(e),a(t)||this._baseHandles.add(t.tools.on("change",(t=>{if(this.tool)for(const e of t.removed)if(this.tool===e){e.destroyed||e.destroy(),this._set("tool",null);break}})),e)}set visible(t){this._set("visible",t),o(this.tool)&&(this.tool.visible=t),t||(this._toolCreationTask=r(this._toolCreationTask))}get active(){return o(this._toolCreationTask)&&!this._toolCreationTask.finished||o(this.tool)&&this.tool.active}get disabled(){return a(this.view)||!this.view.ready||!this.supported}get creatingTool(){return o(this._toolCreationTask)&&!this._toolCreationTask.finished}onConnectToAnalysisView(t){}onDisconnectFromAnalysisView(){}async createTool(){const t="Tool creation was interrupted by another tool being created.";if(o(this.tool)&&this.tool.rejectCreation(t),this.removeTool(),a(this.view)||!this.supported)return Promise.reject(new s("tool:create","The view does not support the tool.",this.unsupportedErrorMessage));this._toolCreationTask=h((async e=>{await l(this.view).whenReady(),c(e,t);const s=this.createToolParams(),i=_(s.constructorArguments);o(this.analysis)&&(i.analysis=this.analysis);const r=new s.toolConstructor({visible:this.visible,...i,view:this.view});return await r.whenCreationStarted(),p(e)&&r.rejectCreation(t),c(e,t),r}));const e=await this._toolCreationTask.promise;this._set("tool",e),e.completed?this.view.tools.add(e):(this.view.addAndActivateTool(e),v((()=>e.completed),(()=>{e.active&&o(this.view)&&(this.view.activeTool=null)}),{initial:!0,once:!0}))}removeTool(){this._toolCreationTask=r(this._toolCreationTask),a(this.tool)||(o(this.view)&&this.view.tools&&this.view.tools.remove(this.tool),this.tool.rejectCreation("Rejecting creation because tool is removed."),this.tool.destroyed||this.tool.destroy(),this._set("tool",null))}_scheduleViewReconnect(){this._reconnectViewTask=r(this._reconnectViewTask),this._reconnectViewTask=h((t=>this._reconnectView(t)))}async _reconnectView(t){const e=o(this.view)&&this.view.ready&&this.supported;if(p(t))return;if(this._disconnectFromView(this.view),!e||a(this.view))return;const s=this.view;if(o(this.analysis)){if(this._isAnalysisOwner){if(o(this.analysis.parent))return void this.logError("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,s.analyses.add(this.analysis),this._parentChangeFromReconnect=!1}const e=await s.whenAnalysisView(this.analysis);if(p(t))return void this._disconnectFromView(s);if(a(e))return void this.logError("Unable to retrieve analysis view for analysis. Analysis may not be part of the scene.");this.onConnectToAnalysisView(e)}}_disconnectFromView(t){o(this.analysis)&&(o(t)&&this._isAnalysisOwner&&(this._parentChangeFromReconnect=!0,t.analyses.remove(this.analysis),this._parentChangeFromReconnect=!1),this.onDisconnectFromAnalysisView())}logError(...t){this.logger.error(...t)}};t([u({constructOnly:!0})],m.prototype,"analysis",void 0),t([u({constructOnly:!0})],m.prototype,"tool",void 0),t([u()],m.prototype,"supported",null),t([u({value:null})],m.prototype,"view",null),t([u({type:Boolean,value:!0})],m.prototype,"visible",null),t([u()],m.prototype,"active",null),t([u()],m.prototype,"disabled",null),t([u()],m.prototype,"_toolCreationTask",void 0),t([u({readOnly:!0})],m.prototype,"creatingTool",null),m=t([y("esri.widgets.support.InteractiveToolViewModel")],m);export{m as I};

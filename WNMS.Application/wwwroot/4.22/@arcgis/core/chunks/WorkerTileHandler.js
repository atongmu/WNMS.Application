/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{isAborted as e,isAbortError as t}from"../core/promiseUtils.js";import{i as s}from"../core/lang.js";import{C as i,a as r,b as n,p as a,c as o,r as l,l as h,i as c}from"./GeometryUtils.js";import{R as u,B as f}from"./Rect.js";import{D as d}from"./config.js";import{P as x,t as y,T as g,S as p,l as m}from"./TileClipper.js";import{P as _}from"./pbf.js";import{M as I,I as w,T as b,S as M}from"./StyleRepository.js";import{A as P}from"./ArrayPool.js";import{e as D}from"./earcut.js";import{L as B}from"./TurboLine.js";import{n as V}from"./string.js";import"../core/Error.js";import"./Logger.js";import"../config.js";import"./object.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./definitions.js";import"./GeometryUtils2.js";import"../Color.js";import"./colorUtils.js";import"./mathUtils.js";import"./common.js";import"./ensureType.js";import"./colorUtils2.js";import"./unitBezier.js";function k(e){return!(e<11904)&&(e>=12704&&e<=12735||(e>=12544&&e<=12591||(e>=65072&&e<=65103||(e>=63744&&e<=64255||(e>=13056&&e<=13311||(e>=11904&&e<=12031||(e>=12736&&e<=12783||(e>=12288&&e<=12351||(e>=13312&&e<=19903||(e>=19968&&e<=40959||(e>=12800&&e<=13055||(e>=65280&&e<=65519||(e>=12352&&e<=12447||(e>=12272&&e<=12287||(e>=12032&&e<=12255||(e>=12784&&e<=12799||(e>=12448&&e<=12543||(e>=65040&&e<=65055||(e>=42128&&e<=42191||e>=40960&&e<=42127)))))))))))))))))))}function L(e){switch(e){case 10:case 32:case 38:case 40:case 41:case 43:case 45:case 47:case 173:case 183:case 8203:case 8208:case 8211:case 8231:return!0}return!1}function A(e){switch(e){case 9:case 10:case 11:case 12:case 13:case 32:return!0}return!1}class v{constructor(e,t,s,i,r,n,a){this._glyphItems=e,this._maxWidth=t,this._lineHeight=s,this._letterSpacing=i,this._hAnchor=r,this._vAnchor=n,this._justify=a}getShaping(e,t,s){const i=this._letterSpacing,r=this._lineHeight,n=this._justify,a=this._maxWidth,o=[];let l=0,h=0;const c=e.length;for(let t=0;t<c;t++){const r=e.charCodeAt(t),n=s&&(746===(u=r)||747===u||!(u<4352)&&(u>=12704&&u<=12735||u>=12544&&u<=12591||u>=65072&&u<=65103&&!(u>=65097&&u<=65103)||u>=63744&&u<=64255||u>=13056&&u<=13311||u>=11904&&u<=12031||u>=12736&&u<=12783||u>=12288&&u<=12351&&!(u>=12296&&u<=12305||u>=12308&&u<=12319||12336===u)||u>=13312&&u<=19903||u>=19968&&u<=40959||u>=12800&&u<=13055||u>=12592&&u<=12687||u>=43360&&u<=43391||u>=55216&&u<=55295||u>=4352&&u<=4607||u>=44032&&u<=55215||u>=12352&&u<=12447||u>=12272&&u<=12287||u>=12688&&u<=12703||u>=12032&&u<=12255||u>=12784&&u<=12799||u>=12448&&u<=12543&&12540!==u||u>=65280&&u<=65519&&!(65288===u||65289===u||65293===u||u>=65306&&u<=65310||65339===u||65341===u||65343===u||u>=65371&&u<=65503||65507===u||u>=65512&&u<=65519)||u>=65104&&u<=65135&&!(u>=65112&&u<=65118||u>=65123&&u<=65126)||u>=5120&&u<=5759||u>=6320&&u<=6399||u>=65040&&u<=65055||u>=19904&&u<=19967||u>=40960&&u<=42127||u>=42128&&u<=42191));let a;for(const e of this._glyphItems)if(a=e[r],a)break;o.push({codePoint:r,x:l,y:h,vertical:n,glyphMosaicItem:a}),a&&(l+=a.metrics.advance+i)}var u;let f=l;if(a>0){f=l/Math.max(1,Math.ceil(l/a))}const d=e.indexOf("â€‹")>=0,x=[];for(let e=0;e<c-1;e++){const t=o[e].codePoint,s=k(t);if(L(t)||s){let i=0;if(10===t)i-=1e4;else if(s&&d)i+=150;else{40!==t&&65288!==t||(i+=50);const s=o[e+1].codePoint;41!==s&&65289!==s||(i+=50)}x.push(this._buildBreak(e+1,o[e].x,f,x,i,!1))}}const y=this._optimalBreaks(this._buildBreak(c,l,f,x,0,!0));let g=0;const p=t?-r:r;let m=0;for(let e=0;e<y.length;e++){const t=y[e];let s=m;for(;s<t&&A(o[s].codePoint);)o[s].glyphMosaicItem=null,++s;let i=t-1;for(;i>s&&A(o[i].codePoint);)o[i].glyphMosaicItem=null,--i;if(s<=i){const e=o[s].x;for(let t=s;t<=i;t++)o[t].x-=e,o[t].y=h;let t=o[i].x;o[i].glyphMosaicItem&&(t+=o[i].glyphMosaicItem.metrics.advance),g=Math.max(t,g),n&&this._applyJustification(o,s,i)}m=t,h+=p}if(o.length>0){const e=y.length-1,s=(n-this._hAnchor)*g;let i=(-this._vAnchor*(e+1)+.5)*r;t&&e&&(i+=e*r);for(const e of o)e.x+=s,e.y+=i}return o.filter((e=>e.glyphMosaicItem))}static getTextBox(e,t){if(!e.length)return null;let s=1/0,i=1/0,r=0,n=0;for(const a of e){const e=a.glyphMosaicItem.metrics.advance,o=a.x,l=a.y-17,h=o+e,c=l+t;s=Math.min(s,o),r=Math.max(r,h),i=Math.min(i,l),n=Math.max(n,c)}return{x:s,y:i,width:r-s,height:n-i}}static getBox(e){if(!e.length)return null;let t=1/0,s=1/0,i=0,r=0;for(const n of e){const{height:e,left:a,top:o,width:l}=n.glyphMosaicItem.metrics,h=n.x,c=n.y-(e-Math.abs(o)),u=h+l+a,f=c+e;t=Math.min(t,h),i=Math.max(i,u),s=Math.min(s,c),r=Math.max(r,f)}return{x:t,y:s,width:i-t,height:r-s}}static addDecoration(e,t){const s=e.length;if(0===s)return;let i=e[0].x+e[0].glyphMosaicItem.metrics.left,r=e[0].y;for(let n=1;n<s;n++){const s=e[n];if(s.y!==r){const a=e[n-1].x+e[n-1].glyphMosaicItem.metrics.left+e[n-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:r+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new u(4,0,4,8),metrics:{width:a-i,height:8,left:0,top:0,advance:0},page:0,code:0}}),r=s.y,i=s.x+s.glyphMosaicItem.metrics.left}}const n=e[s-1].x+e[s-1].glyphMosaicItem.metrics.left+e[s-1].glyphMosaicItem.metrics.width;e.push({codePoint:0,x:i,y:r+t-3,vertical:!1,glyphMosaicItem:{sdf:!0,rect:new u(4,0,4,8),metrics:{width:n-i,height:8,left:0,top:0,advance:0},page:0,code:0}})}_breakScore(e,t,s,i){const r=(e-t)*(e-t);return i?e<t?r/2:2*r:r+Math.abs(s)*s}_buildBreak(e,t,s,i,r,n){let a=null,o=this._breakScore(t,s,r,n);for(const e of i){const i=t-e.x,l=this._breakScore(i,s,r,n)+e.score;l<=o&&(a=e,o=l)}return{index:e,x:t,score:o,previousBreak:a}}_optimalBreaks(e){return e?this._optimalBreaks(e.previousBreak).concat(e.index):[]}_applyJustification(e,t,s){const i=e[s],r=i.vertical?24:i.glyphMosaicItem?i.glyphMosaicItem.metrics.advance:0,n=(i.x+r)*this._justify;for(let i=t;i<=s;i++)e[i].x-=n}}class T{constructor(e,t,s=0,i=-1,r=.5){this.x=e,this.y=t,this.angle=s,this.segment=i,this.minzoom=r}}class S{constructor(e,t,s,i,r,a=.5,o=n){this.anchor=e,this.labelAngle=t,this.glyphAngle=s,this.page=i,this.alternateVerticalGlyph=r,this.minzoom=a,this.maxzoom=o}}class C{constructor(e,t,s,i,r,n,a,o,l,h,c,u){this.tl=e,this.tr=t,this.bl=s,this.br=i,this.mosaicRect=r,this.labelAngle=n,this.minAngle=a,this.maxAngle=o,this.anchor=l,this.minzoom=h,this.maxzoom=c,this.page=u}}class z{constructor(e){this.shapes=e}}class U{getIconPlacement(e,t,s){const n=new x(e.x,e.y),a=0===s.rotationAlignment,o=s.keepUpright;let l=s.rotate*i;a&&(l+=e.angle);const h=new z([]);return s.allowOverlap&&s.ignorePlacement||!d||(h.iconColliders=[]),this._addIconPlacement(h,n,t,s,l),a&&o&&this._addIconPlacement(h,n,t,s,l+r),h}_addIconPlacement(e,t,s,i,r){const a=s.pixelRatio,o=s.width/a,l=s.height/a,h=i.offset;let c=h[0],u=h[1];switch(i.anchor){case 0:c-=o/2,u-=l/2;break;case 1:u-=l/2;break;case 2:c-=o,u-=l/2;break;case 3:c-=o/2;break;case 4:c-=o/2,u-=l;break;case 5:break;case 7:u-=l;break;case 6:c-=o;break;case 8:c-=o,u-=l}const f=s.rect,y=2/a,g=c-y,p=u-y,m=g+f.width/a,_=p+f.height/a,I=new x(g,p),w=new x(m,_),b=new x(g,_),M=new x(m,p);if(0!==r){const e=Math.cos(r),t=Math.sin(r);I.rotate(e,t),w.rotate(e,t),b.rotate(e,t),M.rotate(e,t)}const P=new C(I,M,b,w,f,r,0,256,t,.5,n,0);if(e.shapes.push(P),(!i.allowOverlap||!i.ignorePlacement)&&d){const s=i.size,a=i.padding,h={xTile:t.x,yTile:t.y,dxPixels:c*s-a,dyPixels:u*s-a,hard:!i.optional,partIndex:0,width:o*s+2*a,height:l*s+2*a,angle:r,minLod:.5,maxLod:n};e.iconColliders.push(h)}}getTextPlacement(e,t,s,a){const o=new x(e.x,e.y),l=a.rotate*i,h=0===a.rotationAlignment,c=a.keepUpright,u=a.padding;let f=.5;const d=!h?0:e.angle,y=e.segment>=0&&h,g=a.allowOverlap&&a.ignorePlacement?null:[],p=[],m=!y;let _=Number.POSITIVE_INFINITY,I=Number.NEGATIVE_INFINITY,w=_,b=I;const M=(y||h)&&c,P=a.size/24;let D=!1;for(const e of t)if(e.vertical){D=!0;break}let B,V=0,k=0;if(!y&&D){const e=v.getTextBox(t,24*a.lineHeight);switch(a.anchor){case 1:V=e.height/2,k=-e.width/2;break;case 2:V=-e.height/2,k=e.width/2;break;case 3:V=e.height/2,k=e.width/2;break;case 4:V=-e.height/2,k=-e.width/2;break;case 5:V=e.height;break;case 7:k=-e.width;break;case 6:k=e.width;break;case 8:V=-e.height}}V+=24*a.offset[0],k+=24*a.offset[1];for(const i of t){const t=i.glyphMosaicItem;if(!t||t.rect.isEmpty)continue;const L=t.rect,A=t.metrics,v=t.page;if(g&&m){if(void 0!==B&&B!==i.y){let t,s,i,r;D?(t=-b+V,s=_+k,i=b-w,r=I-_):(t=_+V,s=w+k,i=I-_,r=b-w);const o={xTile:e.x,yTile:e.y,dxPixels:t*P-u,dyPixels:s*P-u,hard:!a.optional,partIndex:1,width:i*P+2*u,height:r*P+2*u,angle:l,minLod:.5,maxLod:n};g.push(o),_=Number.POSITIVE_INFINITY,I=Number.NEGATIVE_INFINITY,w=_,b=I}B=i.y}const T=[];if(y){const r=.5*t.metrics.width,n=(i.x+A.left-4+r)*P*8;if(f=this._placeGlyph(e,f,n,s,e.segment,1,i.vertical,v,T),c&&(f=this._placeGlyph(e,f,n,s,e.segment,-1,i.vertical,v,T)),f>=2)break}else T.push(new S(o,d,d,v,!1)),h&&c&&T.push(new S(o,d+r,d+r,v,!1));const z=i.x+A.left,U=i.y-17-A.top,F=z+A.width,R=U+A.height;let E,N,j,G,O,K,q,H;if(!y&&D)if(i.vertical){const e=(z+F)/2-A.height/2,t=(U+R)/2+A.width/2;E=new x(-t-4+V,e-4+k),N=new x(E.x+L.width,E.y+L.height),j=new x(E.x,N.y),G=new x(N.x,E.y)}else E=new x(4-U+V,z-4+k),N=new x(E.x-L.height,E.y+L.width),j=new x(N.x,E.y),G=new x(E.x,N.y);else E=new x(z-4+V,U-4+k),N=new x(E.x+L.width,E.y+L.height),j=new x(E.x,N.y),G=new x(N.x,E.y);for(const t of T){let s,r,n,o;if(t.alternateVerticalGlyph){if(!O){const e=(U+R)/2+k;O=new x((z+F)/2+V-A.height/2-4,e+A.width/2+4),K=new x(O.x+L.height,O.y-L.width),q=new x(K.x,O.y),H=new x(O.x,K.y)}s=O,r=q,n=H,o=K}else s=E,r=j,n=G,o=N;const h=U,c=R,f=t.glyphAngle+l;if(0!==f){const e=Math.cos(f),t=Math.sin(f);s=s.clone(),r=r.clone(),n=n.clone(),o=o.clone(),s.rotate(e,t),o.rotate(e,t),r.rotate(e,t),n.rotate(e,t)}let d=0,B=256;if(y&&D?i.vertical?t.alternateVerticalGlyph?(d=32,B=96):(d=224,B=32):(d=224,B=96):(d=192,B=64),p.push(new C(s,n,r,o,L,t.labelAngle,d,B,t.anchor,t.minzoom,t.maxzoom,t.page)),g&&(!M||this._legible(t.labelAngle)))if(m)z<_&&(_=z),h<w&&(w=h),F>I&&(I=F),c>b&&(b=c);else if(t.minzoom<2){const s={xTile:e.x,yTile:e.y,dxPixels:(z+V)*P-u,dyPixels:(h+V)*P-u,hard:!a.optional,partIndex:1,width:(F-z)*P+2*u,height:(c-h)*P+2*u,angle:f,minLod:t.minzoom,maxLod:t.maxzoom};g.push(s)}}}if(f>=2)return null;if(g&&m){let t,s,i,r;D?(t=-b+V,s=_+k,i=b-w,r=I-_):(t=_+V,s=w+k,i=I-_,r=b-w);const o={xTile:e.x,yTile:e.y,dxPixels:t*P-u,dyPixels:s*P-u,hard:!a.optional,partIndex:1,width:i*P+2*u,height:r*P+2*u,angle:l,minLod:.5,maxLod:n};g.push(o)}const L=new z(p);return g&&g.length>0&&(L.textColliders=g),L}_legible(e){const t=l(e);return t<65||t>=193}_placeGlyph(e,t,s,i,l,h,c,u,f){let d=h;const y=d<0?a(e.angle+r,o):e.angle;let g=0;s<0&&(d*=-1,s*=-1,g=r),d>0&&++l;let p=new x(e.x,e.y),m=i[l],_=n;if(i.length<=l)return _;for(;;){const e=m.x-p.x,r=m.y-p.y,n=Math.sqrt(e*e+r*r),h=Math.max(s/n,t),x=e/n,I=r/n,w=a(Math.atan2(I,x)+g,o);if(f.push(new S(p,y,w,u,!1,h,_)),c&&f.push(new S(p,y,w,u,!0,h,_)),h<=t)return h;p=m.clone();do{if(l+=d,i.length<=l||l<0)return h;m=i[l]}while(p.isEqual(m));let b=m.x-p.x,M=m.y-p.y;const P=Math.sqrt(b*b+M*M);b*=n/P,M*=n/P,p.x-=b,p.y-=M,_=h}}}class F{constructor(e,t){this.values={};const s=t.keys,i=t.values;for(;e.next();)switch(e.tag()){case 1:this.id=e.getUInt64();break;case 2:{const t=e.getMessage(),r=this.values;for(;!t.empty();){const e=t.getUInt32(),n=t.getUInt32();r[s[e]]=i[n]}t.release();break}case 3:this.type=e.getUInt32();break;case 4:this._pbfGeometry=e.getMessage();break;default:e.skip()}}getGeometry(e){if(void 0!==this._geometry)return this._geometry;if(!this._pbfGeometry)return null;const t=this._pbfGeometry;let s,i;this._pbfGeometry=null,e?e.reset(this.type):s=[];let r,n=1,a=0,o=0,l=0;for(;!t.empty();){if(0===a){const e=t.getUInt32();n=7&e,a=e>>3}switch(a--,n){case 1:o+=t.getSInt32(),l+=t.getSInt32(),e?e.moveTo(o,l):(i&&s.push(i),i=[],i.push(new x(o,l)));break;case 2:o+=t.getSInt32(),l+=t.getSInt32(),e?e.lineTo(o,l):i.push(new x(o,l));break;case 7:e?e.close():i&&!i[0].equals(o,l)&&i.push(i[0].clone());break;default:throw t.release(),new Error("Invalid path operation")}}return e?r=e.result():(i&&s.push(i),r=s),t.release(),this._geometry=r,r}}class R extends I{constructor(){super(12)}add(e,t,s){const i=this.array;i.push(e),i.push(t),i.push(s)}}class E{constructor(e){for(this.extent=4096,this.keys=[],this.values=[],this._pbfLayer=e.clone();e.next();)switch(e.tag()){case 1:this.name=e.getString();break;case 3:this.keys.push(e.getString());break;case 4:this.values.push(e.processMessage(E._parseValue));break;case 5:this.extent=e.getUInt32();break;default:e.skip()}}getData(){return this._pbfLayer}static _parseValue(e){for(;e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getInt64();case 5:return e.getUInt64();case 6:return e.getSInt64();case 7:return e.getBool();default:e.skip()}return null}}class N extends I{constructor(e){super(e)}add(e,t,s,i,r,n,a,o,l,h,c,u){const f=this.array;let d=I.i1616to32(e,t);f.push(d);const x=31;d=I.i8888to32(Math.round(x*s),Math.round(x*i),Math.round(x*r),Math.round(x*n)),f.push(d),d=I.i8888to32(Math.round(x*a),Math.round(x*o),Math.round(x*l),Math.round(x*h)),f.push(d),d=I.i1616to32(c,0),f.push(d),u&&f.push(...u)}}class j extends I{constructor(e){super(e)}add(e,t,s){const i=this.array;i.push(I.i1616to32(e,t)),s&&i.push(...s)}}class G extends I{constructor(e){super(e)}add(e,t,s,i,r,n,a){const o=this.array,l=this.index;let h=I.i1616to32(e,t);o.push(h);return h=I.i8888to32(Math.round(15*s),Math.round(15*i),r,n),o.push(h),a&&o.push(...a),l}}class O extends I{constructor(e){super(e)}add(e,t,s,i,r,n,a,o,h,c,u,f){const d=this.array;let x=I.i1616to32(e,t);d.push(x),x=I.i1616to32(Math.round(8*s),Math.round(8*i)),d.push(x),x=I.i8888to32(r/4,n/4,o,h),d.push(x),x=I.i8888to32(0,l(a),10*c,Math.min(10*u,255)),d.push(x),f&&d.push(...f)}}class K extends I{constructor(e){super(e)}add(e,t,s,i,r){const n=this.array,a=I.i1616to32(2*e+s,2*t+i);n.push(a),r&&n.push(...r)}}class q{constructor(e,t,s){this.layerExtent=4096,this._features=[],this.layer=e,this.zoom=t,this._spriteInfo=s,this._filter=e.getFeatureFilter()}pushFeature(e){this._filter&&!this._filter.filter(e,this.zoom)||this._features.push(e)}hasFeatures(){return this._features.length>0}getResources(e,t,s){}}class H extends q{constructor(e,t,s,i,r){super(e,t,s),this.type=4,this._circleVertexBuffer=i,this._circleIndexBuffer=r}get circleIndexStart(){return this._circleIndexStart}get circleIndexCount(){return this._circleIndexCount}processFeatures(e){const t=this._circleVertexBuffer,s=this._circleIndexBuffer;this._circleIndexStart=3*s.index,this._circleIndexCount=0;const i=this.layer,r=this.zoom;e&&e.setExtent(this.layerExtent);for(const n of this._features){const a=n.getGeometry(e);if(!a)continue;const o=i.circleMaterial.encodeAttributes(n,r,i);for(const e of a)if(e)for(const i of e){const e=t.index;t.add(i.x,i.y,0,0,o),t.add(i.x,i.y,0,1,o),t.add(i.x,i.y,1,0,o),t.add(i.x,i.y,1,1,o),s.add(e+0,e+1,e+2),s.add(e+1,e+2,e+3),this._circleIndexCount+=6}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this._circleVertexBuffer.array.length,e+=this._circleIndexBuffer.array.length;const t=new Uint32Array(e),s=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._circleIndexStart,t[i++]=this._circleIndexCount,t[i++]=this._circleVertexBuffer.array.length;for(let e=0;e<this._circleVertexBuffer.array.length;e++)s[i++]=this._circleVertexBuffer.array[e];t[i++]=this._circleIndexBuffer.array.length;for(let e=0;e<this._circleIndexBuffer.array.length;e++)t[i++]=this._circleIndexBuffer.array[e];return t.buffer}}class W extends q{constructor(e,t,s,i,r,n,a){super(e,t,s),this.type=1,this._patternMap=new Map,this._fillVertexBuffer=i,this._fillIndexBuffer=r,this._outlineVertexBuffer=n,this._outlineIndexBuffer=a}get fillIndexStart(){return this._fillIndexStart}get fillIndexCount(){return this._fillIndexCount}get outlineIndexStart(){return this._outlineIndexStart}get outlineIndexCount(){return this._outlineIndexCount}getResources(e,t,s){const i=this.layer,r=this.zoom,n=i.getPaintProperty("fill-pattern");if(n)if(n.isDataDriven)for(const e of this._features)t(n.getValue(r,e),!0);else t(n.getValue(r),!0)}processFeatures(e){this._fillIndexStart=3*this._fillIndexBuffer.index,this._fillIndexCount=0,this._outlineIndexStart=3*this._outlineIndexBuffer.index,this._outlineIndexCount=0;const t=this.layer,s=this.zoom,{fillMaterial:i,outlineMaterial:r,hasDataDrivenFill:n,hasDataDrivenOutline:a}=t;e&&e.setExtent(this.layerExtent);const o=t.getPaintProperty("fill-pattern"),l=null==o?void 0:o.isDataDriven;let h=!o&&t.getPaintValue("fill-antialias",s);if(t.outlineUsesFillColor){if(h&&!t.hasDataDrivenOpacity){const e=t.getPaintValue("fill-opacity",s),i=t.getPaintValue("fill-opacity",s+1);e<1&&i<1&&(h=!1)}if(h&&!t.hasDataDrivenColor){const e=t.getPaintValue("fill-color",s),i=t.getPaintValue("fill-color",s+1);e[3]<1&&i[3]<1&&(h=!1)}}const c=this._features,u=null==e?void 0:e.validateTessellation;if(l){const n=[];for(const l of c){const c=o.getValue(s,l),f=this._spriteInfo[c];if(!f||!f.rect)continue;const d=i.encodeAttributes(l,s,t,f),x=h&&a?r.encodeAttributes(l,s,t):[],y=l.getGeometry(e);n.push({ddFillAttributes:d,ddOutlineAttributes:x,page:f.page,geometry:y}),n.sort(((e,t)=>e.page-t.page));for(const{ddFillAttributes:e,ddOutlineAttributes:s,page:i,geometry:r}of n)this._processFeature(r,h,t.outlineUsesFillColor,e,s,u,i)}}else for(const o of c){const l=n?i.encodeAttributes(o,s,t):null,c=h&&a?r.encodeAttributes(o,s,t):null,f=o.getGeometry(e);this._processFeature(f,h,t.outlineUsesFillColor,l,c,u)}}serialize(){let e=10;e+=this.layerUIDs.length,e+=this._fillVertexBuffer.array.length,e+=this._fillIndexBuffer.array.length,e+=this._outlineVertexBuffer.array.length,e+=this._outlineIndexBuffer.array.length,e+=3*this._patternMap.size+1;const t=new Uint32Array(e),s=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._fillIndexStart,t[i++]=this._fillIndexCount,t[i++]=this._outlineIndexStart,t[i++]=this._outlineIndexCount;const r=this._patternMap,n=r.size;if(t[i++]=n,n>0)for(const[e,[s,n]]of r)t[i++]=e,t[i++]=s,t[i++]=n;t[i++]=this._fillVertexBuffer.array.length;for(let e=0;e<this._fillVertexBuffer.array.length;e++)s[i++]=this._fillVertexBuffer.array[e];t[i++]=this._fillIndexBuffer.array.length;for(let e=0;e<this._fillIndexBuffer.array.length;e++)t[i++]=this._fillIndexBuffer.array[e];t[i++]=this._outlineVertexBuffer.array.length;for(let e=0;e<this._outlineVertexBuffer.array.length;e++)s[i++]=this._outlineVertexBuffer.array[e];t[i++]=this._outlineIndexBuffer.array.length;for(let e=0;e<this._outlineIndexBuffer.array.length;e++)t[i++]=this._outlineIndexBuffer.array[e];return t.buffer}_processFeature(e,t,s,i,r,n,a){if(!e)return;const o=e.length,l=!r||0===r.length;if(t&&(!s||l))for(let t=0;t<o;t++)this._processOutline(e[t],r);let h;for(let t=0;t<o;t++){const s=W._area(e[t]);s>32?(void 0!==h&&this._processFill(e,h,i,n,a),h=[t]):s<-32&&void 0!==h&&h.push(t)}void 0!==h&&this._processFill(e,h,i,n,a)}_processOutline(e,t){const s=this._outlineVertexBuffer,i=this._outlineIndexBuffer,r=i.index;let n,a,o;const l=new x(0,0),h=new x(0,0),c=new x(0,0);let u=-1,f=-1,d=-1,y=-1,g=-1,p=!1;let m=e.length;if(m<2)return;const _=e[0];let I=e[m-1];for(;m&&I.isEqual(_);)--m,I=e[m-1];if(!(m-0<2)){for(let r=0;r<m;++r){0===r?(n=e[m-1],a=e[0],o=e[1],l.assignSub(a,n),l.normalize(),l.rightPerpendicular()):(n=a,a=o,o=r!==m-1?e[r+1]:e[0],l.assign(h));const x=this._isClipEdge(n,a);-1===y&&(p=x),h.assignSub(o,a),h.normalize(),h.rightPerpendicular();const _=l.x*h.y-l.y*h.x;c.assignAdd(l,h),c.normalize();const I=-c.x*-l.x+-c.y*-l.y;let w=Math.abs(0!==I?1/I:1);w>8&&(w=8),_>=0?(d=s.add(a.x,a.y,l.x,l.y,0,1,t),-1===y&&(y=d),u>=0&&f>=0&&d>=0&&!x&&i.add(u,f,d),f=s.add(a.x,a.y,w*-c.x,w*-c.y,0,-1,t),-1===g&&(g=f),u>=0&&f>=0&&d>=0&&!x&&i.add(u,f,d),u=f,f=d,d=s.add(a.x,a.y,c.x,c.y,0,1,t),u>=0&&f>=0&&d>=0&&!x&&i.add(u,f,d),f=s.add(a.x,a.y,h.x,h.y,0,1,t),u>=0&&f>=0&&d>=0&&!x&&i.add(u,f,d)):(d=s.add(a.x,a.y,w*c.x,w*c.y,0,1,t),-1===y&&(y=d),u>=0&&f>=0&&d>=0&&!x&&i.add(u,f,d),f=s.add(a.x,a.y,-l.x,-l.y,0,-1,t),-1===g&&(g=f),u>=0&&f>=0&&d>=0&&!x&&i.add(u,f,d),u=f,f=d,d=s.add(a.x,a.y,-c.x,-c.y,0,-1,t),u>=0&&f>=0&&d>=0&&!x&&i.add(u,f,d),u=s.add(a.x,a.y,-h.x,-h.y,0,-1,t),u>=0&&f>=0&&d>=0&&!x&&i.add(u,f,d))}u>=0&&f>=0&&y>=0&&!p&&i.add(u,f,y),u>=0&&y>=0&&g>=0&&!p&&i.add(u,g,y),this._outlineIndexCount+=3*(i.index-r)}}_processFill(e,t,s,i,r){let n;t.length>1&&(n=[]);let a=0;for(const s of t)0!==a&&n.push(a),a+=e[s].length;const o=2*a,l=P.acquire();for(const s of t){const t=e[s],i=t.length;for(let e=0;e<i;++e)l.push(t[e].x,t[e].y)}const h=D(l,n,2);if(D.deviation(l,n,2,h)>0){const i=t.map((t=>e[t].length)),{buffer:n,vertexCount:a}=y(l,i);if(a>0){const e=this._fillVertexBuffer.index;for(let e=0;e<a;e++)this._fillVertexBuffer.add(n[2*e],n[2*e+1],s);for(let t=0;t<a;t+=3){const s=e+t;this._fillIndexBuffer.add(s,s+1,s+2)}if(void 0!==r){const e=this._patternMap,t=e.get(r);t?t[1]+=a:e.set(r,[this._fillIndexStart+this._fillIndexCount,a])}this._fillIndexCount+=a}}else{const e=h.length;if(e>0){const t=this._fillVertexBuffer.index;let i=0;for(;i<o;)this._fillVertexBuffer.add(l[i++],l[i++],s);let n=0;for(;n<e;)this._fillIndexBuffer.add(t+h[n++],t+h[n++],t+h[n++]);if(void 0!==r){const t=this._patternMap,s=t.get(r);s?s[1]+=e:t.set(r,[this._fillIndexStart+this._fillIndexCount,e])}this._fillIndexCount+=e}}P.release(l)}_isClipEdge(e,t){return e.x===t.x?e.x<=-64||e.x>=4160:e.y===t.y&&(e.y<=-64||e.y>=4160)}static _area(e){let t=0;const s=e.length-1;for(let i=0;i<s;i++)t+=(e[i].x-e[i+1].x)*(e[i].y+e[i+1].y);return t+=(e[s].x-e[0].x)*(e[s].y+e[0].y),.5*t}}class Y extends q{constructor(e,t,s,i,r){super(e,t,s),this.type=2,this._tessellationOptions={pixelCoordRatio:8,halfWidth:0,offset:0},this._patternMap=new Map,this.tessellationProperties={_lineVertexBuffer:null,_lineIndexBuffer:null,_ddValues:null},this.tessellationProperties._lineVertexBuffer=i,this.tessellationProperties._lineIndexBuffer=r,this._lineTessellator=new B(Z(this.tessellationProperties),J(this.tessellationProperties),e.canUseThinTessellation)}get lineIndexStart(){return this._lineIndexStart}get lineIndexCount(){return this._lineIndexCount}getResources(e,t,s){const i=this.layer,r=this.zoom,n=i.hasDataDrivenLine,a=i.getPaintProperty("line-pattern"),o=i.getPaintProperty("line-dasharray"),l=i.getLayoutProperty("line-cap");if(!a&&!o)return;const h=(null==l?void 0:l.getValue(r))||0,c=null==l?void 0:l.isDataDriven;if(n){const e=null==a?void 0:a.isDataDriven,s=null==o?void 0:o.isDataDriven;if(!e&&!s)return;for(const s of this._features)t(e?a.getValue(r,s):this._getDashArrayKey(s,r,i,o,c,l,h))}else if(a)t(a.getValue(r));else if(o){const e=o.getValue(r);t(i.getDashKey(e,h))}}processFeatures(e){var t,s,i,r,n,a;this._lineIndexStart=3*this.tessellationProperties._lineIndexBuffer.index,this._lineIndexCount=0;const o=this.layer,l=this.zoom,h=this._features,c=this._tessellationOptions,{hasDataDrivenLine:u,lineMaterial:f}=o;e&&e.setExtent(this.layerExtent);const d=o.getPaintProperty("line-pattern"),x=o.getPaintProperty("line-dasharray"),y=null==d?void 0:d.isDataDriven,g=null==x?void 0:x.isDataDriven;let p;p=o.getLayoutProperty("line-cap");const m=null!=(t=p)&&t.isDataDriven?p:null,_=m?null:o.getLayoutValue("line-cap",l),I=_||0,w=!!m;p=o.getLayoutProperty("line-join");const b=null!=(s=p)&&s.isDataDriven?p:null,M=b?null:o.getLayoutValue("line-join",l);p=o.getLayoutProperty("line-miter-limit");const P=null!=(i=p)&&i.isDataDriven?p:null,D=P?null:o.getLayoutValue("line-miter-limit",l);p=o.getLayoutProperty("line-round-limit");const B=null!=(r=p)&&r.isDataDriven?p:null,V=B?null:o.getLayoutValue("line-round-limit",l);p=o.getPaintProperty("line-width");const k=null!=(n=p)&&n.isDataDriven?p:null,L=k?null:o.getPaintValue("line-width",l);p=o.getPaintProperty("line-offset");const A=null!=(a=p)&&a.isDataDriven?p:null,v=A?null:o.getPaintValue("line-offset",l);if(y||g){const t=[];for(const s of h){const i=y?d.getValue(l,s):this._getDashArrayKey(s,l,o,x,w,m,I),r=this._spriteInfo[i];if(!r||!r.rect)continue;const n=f.encodeAttributes(s,l,o,r),a=s.getGeometry(e);t.push({ddAttributes:n,page:r.page,cap:m?m.getValue(l,s):_,join:b?b.getValue(l,s):M,miterLimit:P?P.getValue(l,s):D,roundLimit:B?B.getValue(l,s):V,halfWidth:.5*(k?k.getValue(l,s):L),offset:A?A.getValue(l,s):v,geometry:a})}t.sort(((e,t)=>e.page-t.page)),c.textured=!0;for(const{ddAttributes:e,page:s,cap:i,join:r,miterLimit:n,roundLimit:a,halfWidth:o,offset:l,geometry:h}of t)c.capType=i,c.joinType=r,c.miterLimit=n,c.roundLimit=a,c.halfWidth=o,c.offset=l,this._processFeature(h,e,s)}else{c.textured=!(!d&&!x),c.capType=_,c.joinType=M,c.miterLimit=D,c.roundLimit=V,c.halfWidth=.5*L,c.offset=v;for(const t of h){const s=u?f.encodeAttributes(t,l,o):null;m&&(c.capType=m.getValue(l,t)),b&&(c.joinType=b.getValue(l,t)),P&&(c.miterLimit=P.getValue(l,t)),B&&(c.roundLimit=B.getValue(l,t)),k&&(c.halfWidth=.5*k.getValue(l,t)),A&&(c.offset=A.getValue(l,t));const i=t.getGeometry(e);this._processFeature(i,s)}}}serialize(){let e=6;e+=this.layerUIDs.length,e+=this.tessellationProperties._lineVertexBuffer.array.length,e+=this.tessellationProperties._lineIndexBuffer.array.length,e+=3*this._patternMap.size+1;const t=new Uint32Array(e),s=new Int32Array(t.buffer);let i=0;t[i++]=this.type,t[i++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[i++]=this.layerUIDs[e];t[i++]=this._lineIndexStart,t[i++]=this._lineIndexCount;const r=this._patternMap,n=r.size;if(t[i++]=n,n>0)for(const[e,[s,n]]of r)t[i++]=e,t[i++]=s,t[i++]=n;t[i++]=this.tessellationProperties._lineVertexBuffer.array.length;for(let e=0;e<this.tessellationProperties._lineVertexBuffer.array.length;e++)s[i++]=this.tessellationProperties._lineVertexBuffer.array[e];t[i++]=this.tessellationProperties._lineIndexBuffer.array.length;for(let e=0;e<this.tessellationProperties._lineIndexBuffer.array.length;e++)t[i++]=this.tessellationProperties._lineIndexBuffer.array[e];return t.buffer}_processFeature(e,t,s){if(!e)return;const i=e.length;for(let r=0;r<i;r++)this._processGeometry(e[r],t,s)}_processGeometry(e,t,s){if(e.length<2)return;let i,r,n=e[0],a=1;for(;a<e.length;)i=e[a].x-n.x,r=e[a].y-n.y,i*i+r*r<1e-6?e.splice(a,1):(n=e[a],++a);if(e.length<2)return;const o=this.tessellationProperties._lineIndexBuffer,l=3*o.index;this._tessellationOptions.initialDistance=0,this._tessellationOptions.wrapDistance=65535,this.tessellationProperties._ddValues=t,this._lineTessellator.tessellate(e,this._tessellationOptions);const h=3*o.index-l;if(void 0!==s){const e=this._patternMap,t=e.get(s);t?t[1]+=h:e.set(s,[l+this._lineIndexCount,h])}this._lineIndexCount+=h}_getDashArrayKey(e,t,s,i,r,n,a){const o=r?n.getValue(t,e):a,l=i.getValue(t,e);return s.getDashKey(l,o)}}const Z=e=>(t,s,i,r,n,a,o,l,h,c,u)=>(e._lineVertexBuffer.add(t,s,o,l,i,r,n,a,h,c,u,e._ddValues),e._lineVertexBuffer.index-1),J=e=>(t,s,i)=>{e._lineIndexBuffer.add(t,s,i)};function Q(e,t){return e.iconMosaicItem&&t.iconMosaicItem?e.iconMosaicItem.page===t.iconMosaicItem.page?0:e.iconMosaicItem.page-t.iconMosaicItem.page:e.iconMosaicItem&&!t.iconMosaicItem?1:!e.iconMosaicItem&&t.iconMosaicItem?-1:0}class X extends q{constructor(e,t,s,i,r,n,a,o){super(e,t,o.getSpriteItems()),this.type=3,this._markerMap=new Map,this._glyphMap=new Map,this._glyphBufferDataStorage=new Map,this._isIconSDF=!1,this._iconVertexBuffer=s,this._iconIndexBuffer=i,this._textVertexBuffer=r,this._textIndexBuffer=n,this._placementEngine=a,this._workerTileHandler=o}get markerPageMap(){return this._markerMap}get glyphsPageMap(){return this._glyphMap}get symbolInstances(){return this._symbolInstances}getResources(e,t,s){const i=this.layer,r=this.zoom;e&&e.setExtent(this.layerExtent);const n=i.getLayoutProperty("icon-image"),a=i.getLayoutProperty("text-field");let o=i.getLayoutProperty("text-transform"),l=i.getLayoutProperty("text-font");const h=[];let c,u,f,d;n&&!n.isDataDriven&&(c=n.getValue(r)),a&&!a.isDataDriven&&(u=a.getValue(r)),o&&o.isDataDriven||(f=i.getLayoutValue("text-transform",r),o=null),l&&l.isDataDriven||(d=i.getLayoutValue("text-font",r),l=null);for(const x of this._features){const y=x.getGeometry(e);if(!y||0===y.length)continue;let g,p;n&&(g=n.isDataDriven?n.getValue(r,x):this._replaceKeys(c,x.values),g&&t(g));let m=!1;if(a&&(p=a.isDataDriven?a.getValue(r,x):this._replaceKeys(u,x.values),p)){switch(p=p.replace(/\\n/g,"\n"),o&&(f=o.getValue(r,x)),f){case 2:p=p.toLowerCase();break;case 1:p=p.toUpperCase()}if(X._bidiEngine.hasBidiChar(p)){let e;e="rtl"===X._bidiEngine.checkContextual(p)?"IDNNN":"ICNNN",p=X._bidiEngine.bidiTransform(p,e,"VLYSN"),m=!0}const e=p.length;if(e>0){l&&(d=l.getValue(r,x));for(const t of d){let i=s[t];i||(i=s[t]=new Set);for(let t=0;t<e;t++){const e=p.charCodeAt(t);i.add(e)}}}}if(!g&&!p)continue;const _=i.getLayoutValue("symbol-sort-key",r,x),I={feature:x,sprite:g,label:p,rtl:m,geometry:y,hash:(p?V(p):0)^(g?V(g):0),priority:_,textFont:d};h.push(I)}this._symbolFeatures=h}processFeatures(e){e&&e.setExtent(this.layerExtent);const t=this.layer,s=this.zoom,r=t.getLayoutValue("symbol-placement",s),n=0!==r,a=8*t.getLayoutValue("symbol-spacing",s),o=t.getLayoutProperty("icon-image"),l=t.getLayoutProperty("text-field"),h=o?new w(t,s,n):null,c=l?new b(t,s,n):null,u=this._workerTileHandler;let f;o&&(f=u.getSpriteItems()),this._iconIndexStart=3*this._iconIndexBuffer.index,this._textIndexStart=3*this._textIndexBuffer.index,this._iconIndexCount=0,this._textIndexCount=0,this._markerMap.clear(),this._glyphMap.clear();const d=[];let x=1;c&&c.size&&(x=c.size/24);const y=c?c.maxAngle*i:0,g=c?8*c.size:0;for(const e of this._symbolFeatures){let t;h&&f&&e.sprite&&(t=f[e.sprite],t&&t.sdf&&(this._isIconSDF=!0));let i;!!t&&h.update(s,e.feature);let o=0;const l=e.label;if(l){c.update(s,e.feature);const t=n?c.keepUpright:c.writingMode&&c.writingMode.indexOf(1)>=0;let r=.5;switch(c.anchor){case 5:case 1:case 7:r=0;break;case 6:case 2:case 8:r=1}let a=.5;switch(c.anchor){case 5:case 3:case 6:a=0;break;case 7:case 4:case 8:a=1}let h=.5;switch(c.justify){case 0:h=r;break;case 1:h=0;break;case 3:h=1}const f=24*c.letterSpacing,d=n?0:24*c.maxWidth,y=24*c.lineHeight,g=e.textFont.map((e=>u.getGlyphItems(e)));if(i=new v(g,d,y,f,r,a,h).getShaping(l,e.rtl,t),i&&i.length>0){let e=1e30,t=-1e30;for(const s of i)e=Math.min(e,s.x),t=Math.max(t,s.x);o=(t-e+48)*x*8}}for(let s of e.geometry){const l=[];if(1===r){if(i&&i.length>0&&c&&c.size){const e=8*c.size*(2+Math.min(2,4*Math.abs(c.offset[1])));s=X._smoothVertices(s,e)}X._pushAnchors(l,s,a,o)}else 2===r?X._pushCenterAnchor(l,s):3===e.feature.type?X._pushCentroid(l,s):l.push(new T(s[0].x,s[0].y));for(const r of l){if(r.x<0||r.x>4096||r.y<0||r.y>4096)continue;if(n&&o>0&&0===c.rotationAlignment&&!X._honorsTextMaxAngle(s,r,o,y,g))continue;const a={shaping:i,line:s,iconMosaicItem:t,anchor:r,symbolFeature:e,textColliders:[],iconColliders:[],textVertexRanges:[],iconVertexRanges:[]};d.push(a),this._processFeature(a,h,c)}}}d.sort(Q),this._addPlacedGlyphs(),this._symbolInstances=d}serialize(){let e=11;e+=this.layerUIDs.length,e+=3*this.markerPageMap.size,e+=3*this.glyphsPageMap.size,e+=X.symbolsSerializationLength(this._symbolInstances),e+=this._iconVertexBuffer.array.length,e+=this._iconIndexBuffer.array.length,e+=this._textVertexBuffer.array.length,e+=this._textIndexBuffer.array.length;const t=new Uint32Array(e),s=new Int32Array(t.buffer),i=new Float32Array(t.buffer);let r=0;t[r++]=this.type,t[r++]=this.layerUIDs.length;for(let e=0;e<this.layerUIDs.length;e++)t[r++]=this.layerUIDs[e];t[r++]=this._isIconSDF?1:0,t[r++]=this.markerPageMap.size;for(const[e,[s,i]]of this.markerPageMap)t[r++]=e,t[r++]=s,t[r++]=i;t[r++]=this.glyphsPageMap.size;for(const[e,[s,i]]of this.glyphsPageMap)t[r++]=e,t[r++]=s,t[r++]=i;t[r++]=this._iconVertexBuffer.index/4,t[r++]=this._textVertexBuffer.index/4,r=X.serializeSymbols(t,s,i,r,this._symbolInstances),t[r++]=this._iconVertexBuffer.array.length;for(let e=0;e<this._iconVertexBuffer.array.length;e++)s[r++]=this._iconVertexBuffer.array[e];t[r++]=this._iconIndexBuffer.array.length;for(let e=0;e<this._iconIndexBuffer.array.length;e++)t[r++]=this._iconIndexBuffer.array[e];t[r++]=this._textVertexBuffer.array.length;for(let e=0;e<this._textVertexBuffer.array.length;e++)s[r++]=this._textVertexBuffer.array[e];t[r++]=this._textIndexBuffer.array.length;for(let e=0;e<this._textIndexBuffer.array.length;e++)t[r++]=this._textIndexBuffer.array[e];return t.buffer}static symbolsSerializationLength(e){let t=0;t+=1;for(const s of e||[]){t+=4,t+=1;for(const e of s.textColliders)t+=10;for(const e of s.iconColliders)t+=10;t+=1,t+=2*s.textVertexRanges.length,t+=1,t+=2*s.iconVertexRanges.length}return t}static serializeSymbols(e,t,s,i,r){r=r||[],t[i++]=r.length;for(const e of r){t[i++]=e.anchor.x,t[i++]=e.anchor.y,t[i++]=e.symbolFeature.hash,t[i++]=e.symbolFeature.priority,t[i++]=e.textColliders.length+e.iconColliders.length;for(const r of e.textColliders)t[i++]=r.xTile,t[i++]=r.yTile,t[i++]=r.dxPixels,t[i++]=r.dyPixels,t[i++]=r.hard?1:0,t[i++]=r.partIndex,s[i++]=r.minLod,s[i++]=r.maxLod,t[i++]=r.width,t[i++]=r.height;for(const r of e.iconColliders)t[i++]=r.xTile,t[i++]=r.yTile,t[i++]=r.dxPixels,t[i++]=r.dyPixels,t[i++]=r.hard?1:0,t[i++]=r.partIndex,s[i++]=r.minLod,s[i++]=r.maxLod,t[i++]=r.width,t[i++]=r.height;t[i++]=e.textVertexRanges.length;for(const[s,r]of e.textVertexRanges)t[i++]=s,t[i++]=r;t[i++]=e.iconVertexRanges.length;for(const[s,r]of e.iconVertexRanges)t[i++]=s,t[i++]=r}return i}_replaceKeys(e,t){return e.replace(/{([^{}]+)}/g,(function(e,s){return s in t?t[s]:""}))}_processFeature(e,t,s){const{line:i,iconMosaicItem:r,shaping:n,anchor:a}=e,o=this.zoom,l=this.layer,c=!!r;let u=!0;c&&(u=t.optional||!r);const f=n&&n.length>0;let d,x,y=!0;if(f&&(y=s.optional),c&&(d=this._placementEngine.getIconPlacement(a,r,t)),(d||u)&&(f&&(x=this._placementEngine.getTextPlacement(a,n,i,s)),x||y)){if(d&&x||(y||u?y||x?u||d||(x=null):d=null:(d=null,x=null)),x){const t=l.hasDataDrivenText?l.textMaterial.encodeAttributes(e.symbolFeature.feature,o,l):null;if(this._storePlacedGlyphs(e,x.shapes,o,s.rotationAlignment,t),x.textColliders){e.textColliders=x.textColliders;for(const e of x.textColliders){e.minLod=Math.max(o+h(e.minLod),0),e.maxLod=Math.min(o+h(e.maxLod),25);const t=e.angle;if(t){const s=Math.cos(t),i=Math.sin(t),r=e.dxPixels*s-e.dyPixels*i,n=e.dxPixels*i+e.dyPixels*s,a=(e.dxPixels+e.width)*s-e.dyPixels*i,o=(e.dxPixels+e.width)*i+e.dyPixels*s,l=e.dxPixels*s-(e.dyPixels+e.height)*i,h=e.dxPixels*i+(e.dyPixels+e.height)*s,c=(e.dxPixels+e.width)*s-(e.dyPixels+e.height)*i,u=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*s,f=Math.min(r,a,l,c),d=Math.max(r,a,l,c),x=Math.min(n,o,h,u),y=Math.max(n,o,h,u);e.dxPixels=f,e.dyPixels=x,e.width=d-f,e.height=y-x}}}}if(d){const s=l.hasDataDrivenIcon?l.iconMaterial.encodeAttributes(e.symbolFeature.feature,o,l):null;if(this._addPlacedIcons(e,d.shapes,o,r.page,1===t.rotationAlignment,s),d.iconColliders){e.iconColliders=d.iconColliders;for(const e of d.iconColliders){e.minLod=Math.max(o+h(e.minLod),0),e.maxLod=Math.min(o+h(e.maxLod),25);const t=e.angle;if(t){const s=Math.cos(t),i=Math.sin(t),r=e.dxPixels*s-e.dyPixels*i,n=e.dxPixels*i+e.dyPixels*s,a=(e.dxPixels+e.width)*s-e.dyPixels*i,o=(e.dxPixels+e.width)*i+e.dyPixels*s,l=e.dxPixels*s-(e.dyPixels+e.height)*i,h=e.dxPixels*i+(e.dyPixels+e.height)*s,c=(e.dxPixels+e.width)*s-(e.dyPixels+e.height)*i,u=(e.dxPixels+e.width)*i+(e.dyPixels+e.height)*s,f=Math.min(r,a,l,c),d=Math.max(r,a,l,c),x=Math.min(n,o,h,u),y=Math.max(n,o,h,u);e.dxPixels=f,e.dyPixels=x,e.width=d-f,e.height=y-x}}}}}}_addPlacedIcons(e,t,s,i,r,n){const a=Math.max(s-1,0),o=this._iconVertexBuffer,l=this._iconIndexBuffer,c=this._markerMap;for(const u of t){const t=r?0:Math.max(s+h(u.minzoom),a),f=r?25:Math.min(s+h(u.maxzoom),25);if(f<=t)continue;const d=u.tl,x=u.tr,y=u.bl,g=u.br,p=u.mosaicRect,m=u.labelAngle,_=u.minAngle,I=u.maxAngle,w=u.anchor,b=o.index,M=p.x,P=p.y,D=M+p.width,B=P+p.height,V=o.index;o.add(w.x,w.y,d.x,d.y,M,P,m,_,I,t,f,n),o.add(w.x,w.y,x.x,x.y,D,P,m,_,I,t,f,n),o.add(w.x,w.y,y.x,y.y,M,B,m,_,I,t,f,n),o.add(w.x,w.y,g.x,g.y,D,B,m,_,I,t,f,n),e.iconVertexRanges.length>0&&e.iconVertexRanges[0][0]+e.iconVertexRanges[0][1]===V?e.iconVertexRanges[0][1]+=4:e.iconVertexRanges.push([V,4]),l.add(b+0,b+1,b+2),l.add(b+1,b+2,b+3),c.has(i)?c.get(i)[1]+=6:c.set(i,[this._iconIndexStart+this._iconIndexCount,6]),this._iconIndexCount+=6}}_addPlacedGlyphs(){const e=this._textVertexBuffer,t=this._textIndexBuffer,s=this._glyphMap;for(const[i,r]of this._glyphBufferDataStorage)for(const n of r){const r=e.index,a=n.symbolInstance,o=n.ddAttributes,l=e.index;e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.tl[0],n.tl[1],n.xmin,n.ymin,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,o),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.tr[0],n.tr[1],n.xmax,n.ymin,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,o),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.bl[0],n.bl[1],n.xmin,n.ymax,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,o),e.add(n.glyphAnchor[0],n.glyphAnchor[1],n.br[0],n.br[1],n.xmax,n.ymax,n.labelAngle,n.minAngle,n.maxAngle,n.minLod,n.maxLod,o),a.textVertexRanges.length>0&&a.textVertexRanges[0][0]+a.textVertexRanges[0][1]===l?a.textVertexRanges[0][1]+=4:a.textVertexRanges.push([l,4]),t.add(r+0,r+1,r+2),t.add(r+1,r+2,r+3),s.has(i)?s.get(i)[1]+=6:s.set(i,[this._textIndexStart+this._textIndexCount,6]),this._textIndexCount+=6}this._glyphBufferDataStorage.clear()}_storePlacedGlyphs(e,t,s,i,r){const n=Math.max(s-1,0),a=1===i;let o,l,c,u,f,d,x,y,g,p,m;for(const i of t){if(o=a?0:Math.max(s+h(i.minzoom),n),l=a?25:Math.min(s+h(i.maxzoom),25),l<=o)continue;c=i.tl,u=i.tr,f=i.bl,d=i.br,x=i.labelAngle,y=i.minAngle,g=i.maxAngle,p=i.anchor,m=i.mosaicRect,this._glyphBufferDataStorage.has(i.page)||this._glyphBufferDataStorage.set(i.page,[]);this._glyphBufferDataStorage.get(i.page).push({glyphAnchor:[p.x,p.y],tl:[c.x,c.y],tr:[u.x,u.y],bl:[f.x,f.y],br:[d.x,d.y],xmin:m.x,ymin:m.y,xmax:m.x+m.width,ymax:m.y+m.height,labelAngle:x,minAngle:y,maxAngle:g,minLod:o,maxLod:l,placementLod:n,symbolInstance:e,ddAttributes:r})}}static _pushAnchors(e,t,s,i){s+=i;let r=0;const n=t.length-1;for(let e=0;e<n;e++)r+=x.distance(t[e],t[e+1]);let a=i||s;if(a*=.5,r<=a)return;const o=a/r;let l=0,h=-(s=r/Math.max(Math.round(r/s),1))/2;const u=t.length-1;for(let i=0;i<u;i++){const r=t[i],n=t[i+1],a=n.x-r.x,u=n.y-r.y,f=Math.sqrt(a*a+u*u);let d;for(;h+s<l+f;){h+=s;const t=(h-l)/f,x=c(r.x,n.x,t),y=c(r.y,n.y,t);void 0===d&&(d=Math.atan2(u,a)),e.push(new T(x,y,d,i,o))}l+=f}}static _pushCenterAnchor(e,t){let s=0;const i=t.length-1;for(let e=0;e<i;e++)s+=x.distance(t[e],t[e+1]);const r=s/2;let n=0;const a=t.length-1;for(let s=0;s<a;s++){const i=t[s],a=t[s+1],o=a.x-i.x,l=a.y-i.y,h=Math.sqrt(o*o+l*l);if(r<n+h){const t=(r-n)/h,u=c(i.x,a.x,t),f=c(i.y,a.y,t),d=Math.atan2(l,o);return void e.push(new T(u,f,d,s,0))}n+=h}}static _deviation(e,t,s){const i=(t.x-e.x)*(s.x-t.x)+(t.y-e.y)*(s.y-t.y),r=(t.x-e.x)*(s.y-t.y)-(t.y-e.y)*(s.x-t.x);return Math.atan2(r,i)}static _honorsTextMaxAngle(e,t,s,i,r){let n=0;const a=s/2;let o=new x(t.x,t.y),l=t.segment+1;for(;n>-a;){if(--l,l<0)return!1;n-=x.distance(e[l],o),o=e[l]}n+=x.distance(e[l],e[l+1]);const h=[];let c=0;const u=e.length;for(;n<a;){const t=e[l];let s,a=l;do{if(++a,a===u)return!1;s=e[a]}while(s.isEqual(t));let o,f=a;do{if(++f,f===u)return!1;o=e[f]}while(o.isEqual(s));const d=this._deviation(t,s,o);for(h.push({deviation:d,distToAnchor:n}),c+=d;n-h[0].distToAnchor>r;)c-=h.shift().deviation;if(Math.abs(c)>i)return!1;n+=x.distance(s,o),l=a}return!0}static _smoothVertices(e,t){if(t<=0)return e;let s=e.length;if(s<3)return e;const i=[];let r=0,n=0;i.push(0);for(let t=1;t<s;t++){const s=x.distance(e[t],e[t-1]);s>0&&(r+=s,i.push(r),n++,n!==t&&(e[n]=e[t]))}if(s=n+1,s<3)return e;t=Math.min(t,.2*r);const a=e[0].x,o=e[0].y,l=e[s-1].x,h=e[s-1].y,c=x.sub(e[0],e[1]);c.normalize(),e[0].x+=t*c.x,e[0].y+=t*c.y,c.assignSub(e[s-1],e[s-2]),c.normalize(),e[s-1].x+=t*c.x,e[s-1].y+=t*c.y,i[0]-=t,i[s-1]+=t;const u=[];u.push(new x(a,o));const f=1e-6,d=.5*t;for(let r=1;r<s-1;r++){let n=0,a=0,o=0;for(let s=r-1;s>=0;s--){const l=d+i[s+1]-i[r];if(l<0)break;const h=i[s+1]-i[s],c=i[r]-i[s]<d?1:l/h;if(c<f)break;const u=c*c,x=c*l-.5*u*h,y=c*h/t,g=e[s+1],p=e[s].x-g.x,m=e[s].y-g.y;n+=y/x*(g.x*c*l+.5*u*(l*p-h*g.x)-u*c*h*p/3),a+=y/x*(g.y*c*l+.5*u*(l*m-h*g.y)-u*c*h*m/3),o+=y}for(let l=r+1;l<s;l++){const s=d-i[l-1]+i[r];if(s<0)break;const h=i[l]-i[l-1],c=i[l]-i[r]<d?1:s/h;if(c<f)break;const u=c*c,x=c*s-.5*u*h,y=c*h/t,g=e[l-1],p=e[l].x-g.x,m=e[l].y-g.y;n+=y/x*(g.x*c*s+.5*u*(s*p-h*g.x)-u*c*h*p/3),a+=y/x*(g.y*c*s+.5*u*(s*m-h*g.y)-u*c*h*m/3),o+=y}u.push(new x(n/o,a/o))}return u.push(new x(l,h)),e[0].x=a,e[0].y=o,e[s-1].x=l,e[s-1].y=h,u}static _pushCentroid(e,t){const s=4096,i=4096,r=t.length-1;let n=0,a=0,o=0,l=t[0].x,h=t[0].y;l>s&&(l=s),l<0&&(l=0),h>i&&(h=i),h<0&&(h=0);for(let e=1;e<r;e++){let r=t[e].x,c=t[e].y,u=t[e+1].x,f=t[e+1].y;r>s&&(r=s),r<0&&(r=0),c>i&&(c=i),c<0&&(c=0),u>s&&(u=s),u<0&&(u=0),f>i&&(f=i),f<0&&(f=0);const d=(r-l)*(f-h)-(u-l)*(c-h);n+=d*(l+r+u),a+=d*(h+c+f),o+=d}n/=3*o,a/=3*o,isNaN(n)||isNaN(a)||e.push(new T(n,a))}}var $;X._bidiEngine=new f,function(e){e[e.INITIALIZED=0]="INITIALIZED",e[e.NO_DATA=1]="NO_DATA",e[e.READY=2]="READY",e[e.MODIFIED=3]="MODIFIED",e[e.INVALID=4]="INVALID"}($||($={}));class ee{constructor(e,t,s,i,r){if(this._pbfTiles={},this._tileClippers={},this._client=s,this._tile=t,r){this._styleLayerUIDs=new Set;for(const e of r)this._styleLayerUIDs.add(e)}this._styleRepository=i,this._layers=this._styleRepository.layers;const[n,a,o]=t.tileKey.split("/").map(parseFloat);this._level=n;const l=8+Math.max(5*(this._level-14),0);for(const t of Object.keys(e)){const s=e[t];this._pbfTiles[t]=new _(new Uint8Array(s.protobuff),new DataView(s.protobuff));if(s.refKey){const[e]=s.refKey.split("/").map(parseFloat),i=n-e;if(i>0){const e=(1<<i)-1,s=a&e,r=o&e;this._tileClippers[t]=new g(i,s,r,8,l)}}this._tileClippers[t]||(this._tileClippers[t]=new p)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(e){const t=m(),s=this._initialize(e),{returnedBuckets:i}=s;this._processLayers(s),this._linkReferences(s),this._filterFeatures(s);const r=[],n=new Set,a=(e,t)=>{n.has(e)||(r.push({name:e,repeat:t}),n.add(e))},o={};for(const e of i)e.getResources(e.tileClipper,a,o);if(this._tile.status===$.INVALID)return Promise.resolve([]);const l=this._fetchResources(r,o,e);return Promise.all([...l,t]).then((()=>this._processFeatures(s.returnedBuckets)))}_initialize(e){return{signal:e&&e.signal,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,layers:s,zoom:i,sourceNameToTileClipper:r,sourceNameToUniqueSourceLayerBuckets:n,sourceNameToUniqueSourceLayers:a,returnedBuckets:o,layerIdToBucket:l,referencerUIDToReferencedId:h}=e;for(let e=s.length-1;e>=0;e--){const c=s[e];if(!this._canParseStyleLayer(c.uid)||c.minzoom&&i<Math.floor(c.minzoom)||c.maxzoom&&i>=c.maxzoom||0===c.type)continue;if(!t[c.source]||!r[c.source])continue;const u=t[c.source],f=r[c.source],d=c.sourceLayer,x=u[d];if(x){let e=a[c.source];if(e||(e=a[c.source]=new Set),e.add(c.sourceLayer),c.refLayerId)h.set(c.uid,c.refLayerId);else{const e=this._createBucket(c);if(e){e.layerUIDs=[c.uid],e.layerExtent=x.extent,e.tileClipper=f;let t=n[c.source];t||(t=n[c.source]={});let s=t[d];s||(s=t[d]=[]),s.push(e),o.push(e),l[c.id]=e}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:s}=e;s.forEach(((e,s)=>{t[e=e]&&t[e].layerUIDs.push(s)}))}_filterFeatures(t){const{signal:s,sourceNameToTileData:i,sourceNameToUniqueSourceLayerBuckets:r,sourceNameToUniqueSourceLayers:n}=t,a=10*this._level,o=10*(this._level+1),l=[],h=[];for(const e of Object.keys(n)){n[e].forEach((t=>{l.push(t),h.push(e)}))}for(let t=0;t<l.length;t++){const n=h[t],c=l[t];if(!i[n]||!r[n])continue;const u=i[n][c],f=r[n][c];if(!f||0===f.length)continue;if(e(s))return;const d=u.getData();for(;d.nextTag(2);){const e=d.getMessage(),t=new F(e,u);e.release();const s=t.values;if(s){const e=s._minzoom;if(e&&e>=o)continue;const t=s._maxzoom;if(t&&t<=a)continue}for(const e of f)e.pushFeature(t)}}}_fetchResources(e,t,s){const i=[],r=this._tile.getWorkerTileHandler();let n,a;e.length>0&&(n=r.fetchSprites(e,this._client,s),i.push(n));for(const e in t){const n=t[e];n.size>0&&(a=r.fetchGlyphs(this._tile.tileKey,e,n,this._client,s),i.push(a))}return i}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()||this._canParseStyleLayer(e.layer.uid)));for(const e of t)e.processFeatures(e.tileClipper);return t}_parseTileData(e){const t={};for(const s of Object.keys(e)){const i=e[s],r={};for(;i.next();)switch(i.tag()){case 3:{const e=i.getMessage(),t=new E(e);e.release(),r[t.name]=t;break}default:i.skip()}t[s]=r}return t}_createBucket(e){switch(e.type){case 0:return null;case 1:return this._createFillBucket(e);case 2:return this._createLineBucket(e);case 4:return this._createCircleBucket(e);case 3:return this._createSymbolBucket(e)}}_createFillBucket(e){return new W(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new j(e.fillMaterial.getStride()),new R,new G(e.outlineMaterial.getStride()),new R)}_createLineBucket(e){return new Y(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new N(e.lineMaterial.getStride()),new R)}_createCircleBucket(e){return new H(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new K(e.circleMaterial.getStride()),new R)}_createSymbolBucket(e){const t=this._tile;return new X(e,this._level,new O(e.iconMaterial.getStride()),new R,new O(e.textMaterial.getStride()),new R,t.placementEngine,t.getWorkerTileHandler())}}class te{constructor(e,t,s,i){this.status=$.INITIALIZED,this.placementEngine=new U,this.tileKey=e,this.refKeys=t,this._workerTileHandler=s,this._styleRepository=i}release(){this.tileKey="",this.refKeys=null,this.status=$.INITIALIZED,this._workerTileHandler=null}async parse(e,i,r){const n=r&&r.signal;if(s(n)){const e=()=>{n.removeEventListener("abort",e),this.status=$.INVALID};n.addEventListener("abort",e)}let a;try{a=await this._parse(e,r)}catch(e){if(t(e))throw e;return{result:[],transferList:[]}}this.status=$.READY;const o=[];for(const e of a){const t=e.serialize();o.push(t)}return{result:o,transferList:o.length<=i&&o}}setObsolete(){this.status=$.INVALID}getLayers(){return this._workerTileHandler.getLayers()}getWorkerTileHandler(){return this._workerTileHandler}async _parse(e,t){const s=e.sourceName2DataAndRefKey;if(0===Object.keys(s).length)return[];this.status=$.MODIFIED;return new ee(s,this,t.client,this._styleRepository,e.styleLayerUIDs).parse(t)}}class se{constructor(){this._spriteInfo={},this._glyphInfo={}}reset(){return this._spriteInfo={},this._glyphInfo={},Promise.resolve()}getLayers(){var e;return null==(e=this._styleRepository)?void 0:e.layers}async createTileAndParse(e,s){const{key:i}=e,r={};for(const t of Object.keys(e.sourceName2DataAndRefKey)){const s=e.sourceName2DataAndRefKey[t];r[t]=s.refKey}const n=new te(i,r,this,this._styleRepository);try{return await n.parse(e,this._vectorTileLayerMaxBuffers,s)}catch(e){if(n.setObsolete(),n.release(),!t(e))throw e;return null}}updateStyle(e){if(!e||0===e.length||!this._styleRepository)return;const t=this._styleRepository;for(const s of e){const e=s.type,i=s.data;switch(e){case 0:t.setPaintProperties(i.layer,i.paint);break;case 1:t.setLayoutProperties(i.layer,i.layout);break;case 3:t.deleteStyleLayer(i.layer);break;case 2:t.setStyleLayer(i.layer,i.index)}}}setStyle(e){this._styleRepository=new M(e.style),this._spriteInfo={},this._glyphInfo={},this._vectorTileLayerMaxBuffers=e.vectorTileLayerMaxBuffers}fetchSprites(e,t,s){const i=[],r=this._spriteInfo;for(const t of e){void 0===r[t.name]&&i.push(t)}return 0===i.length?Promise.resolve():t.invoke("getSprites",i,{signal:s&&s.signal}).then((e=>{for(const t in e){const s=e[t];r[t]=s}}))}getSpriteItems(){return this._spriteInfo}fetchGlyphs(e,t,s,i,r){const n=[];let a=this._glyphInfo[t];return a?s.forEach((e=>{a[e]||n.push(e)})):(a=this._glyphInfo[t]=[],s.forEach((e=>n.push(e)))),0===n.length?Promise.resolve():i.invoke("getGlyphs",{tileID:e,font:t,codePoints:n},r).then((e=>{for(let t=0;t<e.length;t++)e[t]&&(a[t]=e[t])}))}getGlyphItems(e){return this._glyphInfo[e]}}export{se as default};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Accessor.js";import{i as s,o as i,k as r,u as o,b as n}from"../core/lang.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{d as h}from"./defaultUnit.js";import{A as p}from"./AnalysisView3D.js";import m from"../core/Handles.js";import{projectPointToVector as d,projectPointToWGS84ComparableLonLat as c,projectVectorToWGS84ComparableLonLat as u,canProjectWithoutEngine as g,canProjectToWGS84ComparableLonLat as _,projectDirection as y,projectVectorToVector as f}from"../geometry/projection.js";import{a as j,g as L,W as v,S as b}from"./projectionEllipsoid.js";import{b as S,d as w,e as C,g as P,f as M,_ as V,E as D,m as A,n as G,a as x,W as z,s as R,o as U,u as I,w as E,ad as T}from"./mathUtils.js";import{Q as O,m as F,U as W,L as q,G as k,f as B,E as H}from"./Segment.js";import{e as N}from"./earcut.js";import{s as Q,d as $}from"./vec2.js";import{c as J}from"./vec2f64.js";import{c as Z,f as K}from"./vec4f64.js";import X from"../geometry/SpatialReference.js";import{s as Y}from"../geometry/Extent.js";import{geodesicArea as ee}from"../geometry/geometryEngine.js";import te from"../geometry/Polygon.js";import{inverseGeodeticSolver as se}from"../geometry/support/geodesicUtils.js";import{p as ie,i as re,t as oe}from"./mathUtils2.js";import{g as ne}from"./ElevationProvider.js";import{E as ae}from"./Evented.js";import{init as le}from"../core/watchUtils.js";import he from"../geometry/Point.js";import{g as pe,n as me}from"./aaBoundingRect.js";import{E as de,a as ce,c as ue,C as ge}from"./EditGeometryOperations.js";import"../intl.js";import{r as _e,s as ye}from"./reactiveUtils.js";import{c as fe,n as je,m as Le,j as ve,p as be}from"./unitUtils.js";import{x as Se,i as we,t as Ce}from"./mat4.js";import{c as Pe}from"./mat4f64.js";import{m as Me}from"./viewUtils.js";import{O as Ve,L as De}from"./LineVisualElement.js";import{S as Ae,g as Ge,R as xe,A as ze,C as Re,p as Ue,a as Ie,b as Ee,c as Te,P as Oe,D as Fe,h as We,L as qe,Q as ke,a1 as Be,a4 as He,a2 as Ne,a0 as Qe,a3 as $e}from"./StencilUtils.js";import{D as Je,P as Ze}from"./ScreenSpacePass.js";import{s as Ke,m as Xe,O as Ye,g as et,c as tt,i as st,d as it}from"./OrderIndependentTransparency.js";import{d as rt}from"./lineStippleUtils.js";import{o as ot}from"./locale.js";import{f as nt}from"./messages.js";import"./deprecate.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./metadata.js";import"./handleUtils.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./Promise.js";import"../core/Collection.js";import"./shared.js";import"../geometry/Multipoint.js";import"./writer.js";import"../geometry/Geometry.js";import"./JSONSupport.js";import"./reader.js";import"./zmUtils.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../core/accessorSupport/decorators/cast.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../geometry/Polyline.js";import"./extentUtils.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./common.js";import"./jsonMap.js";import"./screenUtils.js";import"../widgets/Attachments.js";import"./number.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../widgets/Widget.js";import"./domUtils.js";import"./uuid.js";import"./projector.js";import"./widgetUtils.js";import"./jsxWidgetSupport.js";import"../widgets/Attachments/AttachmentsViewModel.js";import"../Graphic.js";import"../geometry.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../PopupTemplate.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"./chartMediaInfoUtils.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"./Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils2.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"./Loadable.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"./Thumbnail.js";import"./Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../core/HandleOwner.js";import"../rest/query/support/AttachmentInfo.js";import"../rest/support/AttachmentQuery.js";import"./messageBundle.js";import"./jsxFactory.js";import"./VisualElement.js";import"./vectorStacks.js";import"./quatf64.js";import"./geometryEngineBase.js";import"./hydrated.js";import"./plane.js";import"./sphere.js";import"./ray.js";import"./geometry2dUtils.js";import"./vec4f32.js";import"./lineUtils.js";import"./triangulationUtils.js";import"./deduplicate.js";import"./compilerUtils.js";import"./vec2f32.js";import"./Program.js";import"./Texture.js";import"./FramebufferObject.js";import"./Camera.js";import"./frustum.js";import"./Util2.js";import"./lineSegment.js";import"./InterleavedLayout.js";import"./BufferView.js";import"./types.js";import"./geometryDataUtils.js";import"./triangle.js";import"./vec3f32.js";import"./utils14.js";import"./mat3.js";import"./quat.js";import"./doublePrecisionUtils.js";import"./PhysicallyBasedRendering.glsl.js";import"./Intersector.js";import"./boundedPlane.js";import"./glUtil.js";import"./MemCache.js";import"./floatRGBA.js";import"./Scheduler.js";import"./debugFlags.js";import"./parser.js";import"./_commonjsHelpers.js";import"./dehydratedFeatures.js";import"./byteSizeEstimations.js";import"./quantizationUtils.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./unitConversionUtils.js";import"./lengthUtils.js";function at(e,t,s){const i={distance:null};return se(i,[e[0],e[1]],[t[0],t[1]],s),i.distance}function lt(e,t,s){const i=t[0]-e[0],r=t[1]-e[1],o=s[0]-e[0],n=s[1]-e[1];return.5*Math.abs(i*n-r*o)}function ht(e,t,s,i){const r=ct;return u(e,i,pt)&&u(t,i,mt)&&u(s,i,dt)?(r.setPoint(0,0,pt),r.setPoint(0,1,mt),r.setPoint(0,2,dt),Math.abs(ee(r,"square-meters"))):0}const pt=S(),mt=S(),dt=S(),ct=new te({rings:[[pt,mt,dt]],spatialReference:X.WGS84}),ut=S();class gt{constructor(e,t){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=S(),this.areaCentroidRenderCoords=S(),this.geodesicAreaCentroidRenderCoords=S(),this._length=0,this._centroidRenderCoords=S(),this._planeWorldCoords=Z(),this._worldUp=S(),this._worldTangent=S(),this._frame=[S(),S(),S()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=S(),this._tempV=S(),this._tempVec3=S(),this._tempSphere={center:S(),radius:0},this._sceneView=e,this.unitNormalizer=t}update(e,t,r,o,n,a,l){const h=this.unitNormalizer,p=this._sceneView.renderSpatialReference,m=this.unitNormalizer.spatialReference,u=s(t);if(this._pathVersion===e.version&&this._validMeasurement===o&&!l&&this._hasCursorPoint===u&&this._mode===a)return!1;this._pathVersion=e.version,this._validMeasurement=o,this._hasCursorPoint=u;const y=e.numVertices;this._resize(y);const f=j(r.spatialReference),L=g(r.spatialReference,f)&&_(r.spatialReference),v=this.positionsGeographic,b=this.positionsWorldCoords,S=this.positionsRenderCoords,w=this.positionsSpherical;e.forEachVertexPosition(((e,t)=>{!function(e,t){if(t.hasZ)return;t.z=i(ne(e,t,"ground"),0)}(r.elevationProvider,e),d(e,b[t],m),d(e,S[t],p),L&&(c(e,v[t]),d(e,w[t],f),G(w[t],w[t]))}));const C=this._updatePathLengths(o);if(this.pathLength=this._length>1?new O(h.normalizeDistance(C),"meters"):null,L){const e=this._updateGeodesicPathLengths(o,m);this.geodesicPathLength=this._length>1?new O(e,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,t),this._updateMode(e,a),o?(this._updateArea(r,h,p,m,n),L&&this._updateGeodesicArea(r),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(S()),this.positionsRenderCoords.push(S()),this.positionsProjectedWorldCoords.push(J()),this.positionsFittedRenderCoords.push(S()),this.positionsGeographic.push(S()),this.positionsSpherical.push(S()),this.positionsStereographic.push(J()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorldCoords,s=this.pathSegmentLengths;let i=0;for(let r=0;r<this._length;++r){const o=s[r]=D(t[r],t[(r+1)%this._length]);(r<this._length-1||e)&&(i+=o)}return i}_updateGeodesicPathLengths(e,t){const s=this.positionsGeographic,i=this.geodesicPathSegmentLengths;let r=0;for(let o=0;o<this._length;++o){const n=i[o]=at(s[o],s[(o+1)%this._length],t);(o<this._length-1||e)&&(r+=n)}return r}_updateArea(e,t,s,i,r){const o=e.renderCoordsHelper,n=this.positionsWorldCoords,a=this.positionsRenderCoords,l=this.positionsProjectedWorldCoords,h=this.positionsFittedRenderCoords,p=this._planeWorldCoords,m=this._centroidRenderCoords;F(a,m),o.worldUpAtPosition(m,this._worldUp),o.worldBasisAtPosition(m,0,this._worldTangent),y(m,this._worldUp,s,this._worldUp,i),y(m,this._worldTangent,s,this._worldTangent,i),n.length>2&&function(e,t){if(e.length<3)throw new Error("need at least 3 points to fit a plane");ie(e[0],e[1],e[2],t)}(n,p),this.fittingMode=this._selectFittingMode(p,n,this._worldUp,r);let d=0;if("horizontal"===this.fittingMode){let e=-1/0;a.forEach(((t,s)=>{const i=o.getAltitude(a[s]);i>e&&(e=i,d=s)}))}const c=n[d];let u=p,g=this._worldTangent;"horizontal"===this.fittingMode?u=this._worldUp:"vertical"===this.fittingMode&&(u=this._tempVec3,g=this._worldUp,re(p,this._worldUp,u)),A(this._frame[2],u),re(g,u,this._frame[0]),x(this._frame[1],this._frame[0],this._frame[2]),z(this._frame[1],this._frame[1]);const _=this._tempVec3,j=this._tempU,L=this._tempV;for(let e=0;e<this._length;++e){const t=l[e],r=h[e];R(_,n[e],c),Q(t,w(this._frame[0],_),w(this._frame[1],_)),M(j,this._frame[0],t[0]),M(L,this._frame[1],t[1]),P(_,j,L),P(_,_,c),f(_,i,r,s)}this.perimeterLength=this._length>0?new O(t.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,F(h,this.areaCentroidRenderCoords),f(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,i),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?new O(t.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const t=e.renderCoordsHelper,s=this.positionsSpherical,i=this.positionsStereographic,r=this._tempVec3,o=function(e,t=null,s=!0){const i=(e,t)=>{if(0===t[0]&&0===t[1]&&0===t[2])return!1;for(let s=0;s<e.length;++s)if(w(t,e[s])<-1e-6)return!1;return!0};if(0===e.length)return!1;if(1===e.length)return t&&A(t,e[0]),!0;C(ut,0,0,0);for(let t=0;t<e.length;++t)P(ut,ut,e[t]);if(G(ut,ut),i(e,ut))return t&&A(t,ut),!0;if(!s)return!1;for(let s=0;s<e.length;++s)for(let r=0;r<e.length;++r)if(s!==r&&(x(ut,e[s],e[r]),G(ut,ut),i(e,ut)))return t&&A(t,ut),!0;return!1}(s,r);if(!o)return void(this.geodesicArea=null);const n=this._tempU,a=this._tempV;oe(r,n,a);for(let e=0;e<this._length;++e){const t=w(s[e],n),o=w(s[e],a),l=w(s[e],r);Q(i[e],t/l,o/l)}M(r,r,L(e.spatialReference).radius),t.toRenderCoords(r,j(e.spatialReference),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=o&&0===this.geodesicIntersectingSegments.size?new O(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,t=this.perimeterSegmentLengths;let s=0;for(let i=0;i<this._length;++i){s+=t[i]=$(e[i],e[(i+1)%this._length])}return s}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,t=this.intersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],o=e[(s+1)%this._length],n=e[i],a=e[(i+1)%this._length];Y(r,o,n,a)&&(t.add(s),t.add(i))}}_computeArea(){const e=this.positionsProjectedWorldCoords,t=_t(e,2),s=this.triangleIndices=new Uint32Array(N(t,[],2));let i=0;for(let t=0;t<s.length;t+=3)i+=lt(e[s[t]],e[s[t+1]],e[s[t+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],o=e[(s+1)%this._length],n=e[i],a=e[(i+1)%this._length];Y(r,o,n,a)&&(t.add(s),t.add(i))}}_computeGeodesicArea(){const e=this.positionsGeographic,t=_t(this.positionsStereographic,2),s=this.geodesicTriangleIndices=new Uint32Array(N(t,[],2));let i=0;for(let t=0;t<s.length;t+=3)i+=ht(e[s[t]],e[s[t+1]],e[s[t+2]],X.WGS84);return i}_selectFittingMode(e,t,s,i){const r=t.map((t=>Math.abs(function(e,t){return w(e,t)+e[3]}(e,t)))).reduce(((e,t)=>Math.max(e,t)),0);!function(e,t){const s=t.center;C(s,0,0,0);for(let t=0;t<e.length;++t)P(s,s,e[t]);M(s,s,1/e.length);let i=0;for(let t=0;t<e.length;++t)i=Math.max(i,V(s,e[t]));t.radius=Math.sqrt(i)}(t,this._tempSphere);const o=r/(2*this._tempSphere.radius),n=o<i.maxRelativeErrorCoplanar,a=o<i.maxRelativeErrorAlmostCoplanar;let l="horizontal";if(n)l="oblique";else if(a){l=Math.abs(w(s,e))>Math.cos(U(i.verticalAngleThreshold))?"horizontal":"vertical"}return l}_updateCursorSegmentLength(e,t){const i=e.lastPoint;var r,o,n;!e.isValidPolygon&&s(i)&&s(t)?(this.geodesicCursorSegmentLength=new O(function(e,t){if(!c(e,pt)||!c(t,mt))return 0;const s={distance:null};return se(s,[pt[0],pt[1]],[mt[0],mt[1]]),s.distance}(i,t),"meters"),this.cursorSegmentLength=new O(this.unitNormalizer.normalizeDistance((r=i,o=t,n=this.unitNormalizer.spatialReference,d(r,pt,n)&&d(o,mt,n)?D(pt,mt):0)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,t){if(0===t){this.actualMeasurementMode="euclidean";let t=0;null!=this.geodesicPathLength&&(t+=this.geodesicPathLength.value),!e.isValidPolygon&&s(this.geodesicCursorSegmentLength)&&(t+=this.geodesicCursorSegmentLength.value),t>yt&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=1===t?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=t}}function _t(e,t){const s=new Float64Array(e.length*t);for(let i=0;i<e.length;++i){const r=e[i];for(let e=0;e<t;++e)s[i*t+e]=r[e]}return s}const yt=1e5;let ft=class extends t{constructor(e){super(e),this._handles=new m}initialize(){const e=this.view.spatialReference,t=j(e),s=t===b?v:t,i=!e||g(e,s)?s:e,r=new W(i);this._measurementDataManager=new gt(this.view,r),this._handles.add([this.analysisViewData.path.on("change",(()=>this._update())),this.analysisViewData.watch("cursorPoint",(()=>this._update()),!0),this.analysisViewData.watch("mode",(()=>this._update()),!0)]),this._update()}destroy(){this._handles=r(this._handles)}_update(e=!1){const t=this.analysisViewData;if(this._measurementDataManager.update(t.path,t.cursorPoint,this.view,t.validMeasurement,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},t.mode,e)){const e=this._measurementDataManager.getData();this._set("measurementData",e),t.measurementData=e}}};e([a({constructOnly:!0})],ft.prototype,"view",void 0),e([a({constructOnly:!0})],ft.prototype,"analysis",void 0),e([a({readOnly:!0})],ft.prototype,"measurementData",void 0),e([a({constructOnly:!0})],ft.prototype,"analysisViewData",void 0),ft=e([l("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],ft);let jt=class extends ae.EventedAccessor{constructor(e={}){super(e),this._handles=new m,this._version=0,this._internalGeometryChange=!1,this._extent=pe()}destroy(){this._handles=r(this._handles)}set areaMeasurement(e){this._set("areaMeasurement",e),s(e)&&s(this.view)&&this._initialize(e,this.view)}set view(e){this._set("view",e),s(e)&&s(this.areaMeasurement)&&this._initialize(this.areaMeasurement,e)}get initialized(){return s(this.areaMeasurement)&&s(this.view)}get version(){return this._version}get isValidPolygon(){return this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].isClosed()}get extent(){if(this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].vertices.length>0){const e=pe(this._extent);return this.forEachVertex((t=>{me(e,t.pos)})),e}return null}get spatialReference(){return this.initialized?this.editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this._handles.removeAll(),this._handles.add(le(e,"geometry",(()=>this._updateEditGeometryFromModelGeometry(e,t)),!0)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){this._version++,this._internalGeometryChange||(this._handles.remove("EditGeometry"),s(e.geometry)?this._editGeometryOperations=de.fromGeometry(e.geometry,t.state.viewingMode):this._editGeometryOperations=new de(new ce("polygon",ue(!0,!1,t.spatialReference),t.state.viewingMode)),this._makeDirty(!0),this.emit("change"),this._handles.add(this.editGeometry.on("change",(t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this.editGeometry.geometry:null,this._internalGeometryChange=!1})),"EditGeometry"))}get editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t)})),e}get numVertices(){return this.initialized&&this.editGeometry.components.length>0?this.editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.initialized&&this.editGeometry.components.length>0){const e=this.editGeometry.components[0].getLastVertex();if(s(e))return this.editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.initialized||0===this.editGeometry.components.length||0===this.editGeometry.components[0].vertices.length)return null;const t=this.editGeometry.components[0].vertices[0];let s=t;do{if(s.index===e)return s;s=s.rightEdge.rightVertex}while(s!==t&&null!=s);return null}getVertexPositionAsPoint(e){return this.editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this.editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this.editGeometry.coordinateHelper;this.forEachVertex(((s,i)=>{t.vectorToPoint(s.pos,Lt),e(Lt,i)}))}clear(){s(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(e){if(!this.initialized)return null;if(0===this.editGeometry.components.length){const e=o(this.view);this.editGeometry.components.push(new ge(e.spatialReference,e.state.viewingMode))}const t=this._editGeometryOperations.appendVertex(this.editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.initialized||0===this.editGeometry.components.length)return null;const e=this._editGeometryOperations.closeComponent(this.editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,t=""){let s=!1;if(this.editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(s=!0)}))})),!s)throw new Error(`vertex doesnt exist ${t}`);return s}setVertexPosition(e,t){if(!this.initialized)return null;const s=this._editGeometryOperations.setVertexPosition(e,this.editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),s}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition(((s,i)=>{const r=e.getVertexPositionAsPointFromIndex(i);s.equals(r)||(t=!1)})),!!t}};e([a({value:null})],jt.prototype,"areaMeasurement",null),e([a({value:null})],jt.prototype,"view",null),e([a()],jt.prototype,"isValidPolygon",null),e([a()],jt.prototype,"extent",null),e([a()],jt.prototype,"spatialReference",null),e([a()],jt.prototype,"numVertices",null),jt=e([l("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper")],jt);const Lt=new he;let vt=class extends t{constructor(){super(...arguments),this.measurementData=null,this.unitNormalizer=new W,this.path=new jt,this.lastDraggedVertex=null,this.mode=0}destroy(){this.measurementData=null,this.path=r(this.path)}get validMeasurement(){return this.path.isValidPolygon}};e([a()],vt.prototype,"measurementData",void 0),e([a()],vt.prototype,"validMeasurement",null),e([a()],vt.prototype,"unitNormalizer",void 0),e([a()],vt.prototype,"path",void 0),e([a()],vt.prototype,"lastDraggedVertex",void 0),e([a()],vt.prototype,"cursorPoint",void 0),e([a()],vt.prototype,"mode",void 0),vt=e([l("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementView3DData")],vt);const bt=Object.freeze({__proto__:null,build:function(e){const t=new Ae;return t.extensions.add("GL_OES_standard_derivatives"),t.attributes.add("position","vec3"),t.attributes.add("uv0","vec2"),t.vertex.uniforms.add("proj","mat4").add("view","mat4"),t.varyings.add("vUV","vec2"),e.multipassTerrainEnabled&&t.varyings.add("depth","float"),t.vertex.code.add(Ge`
    void main(void) {
      vUV = uv0;
      ${e.multipassTerrainEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.multipassTerrainEnabled&&(t.fragment.include(xe),t.include(ze,e)),t.fragment.uniforms.add("size","vec2").add("color1","vec4").add("color2","vec4"),t.fragment.include(Re),t.fragment.code.add(Ge`
    void main() {
      ${e.multipassTerrainEnabled?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${e.OITEnabled?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),t}});class St extends Te{initializeProgram(e){const t=St.shader.get(),s=this.configuration,i=t.build({OITEnabled:0===s.transparencyPassType,multipassTerrainEnabled:s.multipassTerrainEnabled,cullAboveGround:s.cullAboveGround});return new Oe(e.rctx,i,Fe)}bindPass(e,t){We(this.program,t.camera.projectionMatrix),this.program.setUniform2fv("size",e.size),this.program.setUniform4fv("color1",e.color1),this.program.setUniform4fv("color2",e.color2),t.multipassTerrainEnabled&&(this.program.setUniform2fv("cameraNearFar",t.camera.nearFar),this.program.setUniform2fv("inverseViewport",t.inverseViewport),qe(this.program,t))}bindDraw(e){ke(this.program,e)}setPipelineState(e){const t=this.configuration,s=3===e,i=2===e;return Xe({blending:t.transparent?s?Ct:Ye(e):null,depthTest:{func:et(e)},depthWrite:s?t.writeDepth&&tt:st(e),colorWrite:it,polygonOffset:s||i?t.polygonOffset&&wt:{factor:-1,units:-25}})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}}St.shader=new Ie(bt,(()=>Promise.resolve().then((()=>bt))));const wt={factor:0,units:-25},Ct=Ke(770,1,771,771);class Pt extends Ee{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.transparencyPassType=3,this.multipassTerrainEnabled=!1,this.cullAboveGround=!1}}e([Ue()],Pt.prototype,"transparent",void 0),e([Ue()],Pt.prototype,"writeDepth",void 0),e([Ue()],Pt.prototype,"polygonOffset",void 0),e([Ue({count:4})],Pt.prototype,"transparencyPassType",void 0),e([Ue()],Pt.prototype,"multipassTerrainEnabled",void 0),e([Ue()],Pt.prototype,"cullAboveGround",void 0);class Mt extends Be{constructor(e){super(e,Dt),this.techniqueConfig=new Pt}dispose(){}getPassParameters(){return this.parameters}getTechniqueConfig(e,t){return this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.transparencyPassType=t?t.transparencyPassType:3,this.techniqueConfig.multipassTerrainEnabled=!!t&&t.multipassTerrainEnabled,this.techniqueConfig.cullAboveGround=!!t&&t.cullAboveGround,this.techniqueConfig}intersect(e,t,s,i,r,o,n){return He(e,t,i,r,o,void 0,n)}requiresSlot(e){let t=2;return this.parameters.transparent&&(t=this.parameters.writeDepth?4:7),e===t||20===e}createGLMaterial(e){return 0===e.output||7===e.output?new Vt(e):null}createBufferWriter(){return new Je(Ze)}}class Vt extends Ne{updateParameters(e){return this.ensureTechnique(St,e)}beginSlot(e){return this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}const Dt={size:[1,1],color1:[.75,.75,.75,1],color2:[.5,.5,.5,1],transparent:!1,writeDepth:!0,polygonOffset:!1,...Qe};class At extends Ve{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=4,this._geometry=null,this._size=[1,1],this._color1=K(1,.5,0,.5),this._color2=K(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this.updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged()}get size(){return this._size}set size(e){this._size=e,this.updateMaterial()}get color1(){return this._color1}set color1(e){I(e,this._color1)||(E(this._color1,e),this.updateMaterial())}get color2(){return this._color2}set color2(e){I(e,this._color2)||(E(this._color2,e),this.updateMaterial())}updateMaterial(){s(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Mt({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:4})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){s(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(n(this._geometry)||n(this._checkerBoardMaterial))return;const t=Gt;Se(t,this.transform);const s=this._geometry,i=[],r=S();s.position.forEach((e=>{R(r,e,t),i.push(r[0],r[1],r[2])}));const o=[];s.uv.forEach((e=>{o.push(e[0],e[1])}));const a=new $e([["position",{size:3,data:i,exclusive:!0}],["uv0",{size:2,data:o,exclusive:!0}]],[["position",s.triangleIndices],["uv0",s.triangleIndices]]);e.addGeometry(a,this._checkerBoardMaterial)}geometryChanged(){this.recreateGeometry()}}const Gt=S();let xt=class extends t{constructor(e){super(e),this._handles=new m,this._params={...zt},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=S(),this._originTransform=Pe(),this._cursorPositionRenderSpace=S(),this.messages=null,this.viewData=Rt,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}get visible(){return this.analysisView.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const e=this.view,t=this._params;this._path=new De({view:e,attached:!0,width:t.pathLineWidth,color:t.pathLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPath=new De({view:e,attached:!0,width:t.pathLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._perimeter=new De({view:e,attached:!0,width:t.perimeterLineWidth,color:t.perimeterLineColor,polygonOffset:!0,renderOccluded:4}),this._intersectedPerimeter=new De({view:e,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:4}),this._projectionLines=new De({view:e,attached:!0,width:t.projectionLineWidth,color:t.projectionLineColor,stipplePattern:rt(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:4}),this._measurementArea=new At({view:e,attached:!0,color1:t.areaColor1,color2:t.areaColor2}),this._areaLabel=new q({view:this.view,attached:!0,fontSize:16}),this._pathLengthLabel=new q({view:e,attached:!0,fontSize:12}),this._cursorSegmentLengthLabel=new q({view:e,attached:!0,fontSize:12}),this._perimeterLengthLabel=new q({view:e,attached:!0,fontSize:12});const s=this.analysisView.analysisViewData;this._handles.add([_e((()=>[s.mode,this.visible,this.analysisView.unit,s.measurementData,s.cursorPoint]),(()=>this._update()),ye),_e((()=>{var t;return null==(t=e.state)?void 0:t.camera}),(()=>this._updateLabels()),ye),ot((async()=>this._updateMessageBundle()))]),this._updateMessageBundle()}destroy(){this._measurementArea=r(this._measurementArea),this._path=r(this._path),this._intersectedPath=r(this._intersectedPath),this._perimeter=r(this._perimeter),this._intersectedPerimeter=r(this._intersectedPerimeter),this._areaLabel=r(this._areaLabel),this._pathLengthLabel=r(this._pathLengthLabel),this._cursorSegmentLengthLabel=r(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=r(this._perimeterLengthLabel),this._handles=r(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const e=this.analysisView.analysisViewData,t=e.measurementData;n(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t,s){const i=t.isValidPolygon,r="geodesic"===e.actualMeasurementMode,o=r?e.geodesicArea:e.area;let n=1;if(o){const t=this._toPreferredAreaUnit(o,this.analysisView.unit);n=T(Math.sqrt(t.value)/Math.sqrt(300)),n*=Math.sqrt(fe(1,t.unit,"square-meters")),n/=e.unitNormalizer.normalizeDistance(1)}const a={validMeasurement:i,path:t,pathVersion:t.version,cursorPoint:s,measurementData:e,mode:e.actualMeasurementMode,positionsGeographic:e.positionsGeographic,positionsRenderCoords:e.positionsRenderCoords,positionsProjected:e.positionsProjectedWorldCoords,positionsFittedRenderCoords:e.positionsFittedRenderCoords,intersectingSegments:r?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:r?e.geodesicTriangleIndices:e.triangleIndices,fittingMode:e.fittingMode,areaCentroid:r?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:t.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:n};this._set("viewData",a)}_updateOrigin(){const e=this.viewData;Me(e.positionsRenderCoords,this._origin),we(this._originTransform),Ce(this._originTransform,this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,s=t.path,i=this.view.renderCoordsHelper.spatialReference,r=t.mode,o=[],n=[],a=[],l=t.validMeasurement?s.numVertices:s.numVertices-1;for(let h=0;h<l;++h){const l=t[e][h],p=t[e][(h+1)%s.numVertices];let m=null;switch(r){case"euclidean":m=new H(l,p);break;case"geodesic":m=new k(l,p,i)}t.intersectingSegments.has(h)?a.push(m):n.push(m),o.push(m)}return{all:o,nonIntersecting:n,intersecting:a}}_updatePathSegments(){const e=this.visible,t=this.viewData,i=this._createSegments("positionsRenderCoords"),r=t.path,o=!r.isValidPolygon,n=t.cursorPoint,a=this.view.renderCoordsHelper,l=a.spatialReference,h=t.mode;if(this._cursorSegment=null,r.numVertices>0&&o&&s(n)){if(a.toRenderCoords(n,this._cursorPositionRenderSpace)){const e=t.positionsRenderCoords[r.numVertices-1],s=this._cursorPositionRenderSpace;let o=null;switch(h){case"euclidean":o=new H(e,s);break;case"geodesic":o=new k(e,s,l)}i.nonIntersecting.push(o),this._cursorSegment=o}}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=e,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=e,this._pathSegments=i.all}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode,t=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsProjected,position:e.positionsFittedRenderCoords,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,s=e.path,i=e.mode;if(s.numVertices>0&&e.validMeasurement&&"euclidean"===i){const i=[];for(let t=0;t<s.numVertices;++t){const s=S();R(s,e.positionsRenderCoords[t],this._origin);const r=S();R(r,e.positionsFittedRenderCoords[t],this._origin),i.push([s,r])}this._projectionLines.geometry=i,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const e=this.viewData,t=e.path;if(!t)return;const i=e.measurementData,r=e.mode,n=!t.isValidPolygon,a=this.visible,l=this._formatAreaLabel(this.messages,"geodesic"===r?i.geodesicArea:i.area,this.analysisView.unit);s(l)?(this._areaLabel.geometry={type:"point",point:e.areaCentroid},this._areaLabel.text=l,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&a):this._areaLabel.visible=!1,this._set("areaLabel",o(l));const h=this._formatLengthLabel(this.messages,"geodesic"===r?i.geodesicPathLength:i.pathLength,this.analysisView.unit);if(s(h)&&e.pathLengthLabelSegmentIndex>=0&&e.pathLengthLabelSegmentIndex<this._pathSegments.length){const i=this._pathSegments[e.pathLengthLabelSegmentIndex],r=s(this._cursorSegment)?this._cursorSegment:Ut;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:i,right:r},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=n&&t.numVertices>0&&a}else this._pathLengthLabel.visible=!1;const p="geodesic"===r?e.measurementData.geodesicCursorSegmentLength:e.measurementData.cursorSegmentLength;if(s(p)){const e=this._formatLengthLabel(this.messages,p,this.analysisView.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=s(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=o(e),this._cursorSegmentLengthLabel.visible=n&&0!==p.value&&a}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const m="geodesic"===e.mode,d=m?i.geodesicPathLength:i.perimeterLength,c=o(null!=d?this._formatLengthLabel(this.messages,d,this.analysisView.unit):null);if(this._set("perimeterLengthLabel",o(c)),e.validMeasurement&&0===e.intersectingSegments.size){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=c,this._perimeterLengthLabel.visible=!0;let t=!0;for(let s=0;s<e.path.numVertices;++s){const i=(e.perimeterLengthLabelSegmentIndex+s)%e.path.numVertices,r=m?this._pathSegments[i]:this._perimeterSegments[i];if(t=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;t=!1}this._perimeterLengthLabel.visible=t&&a}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(e,t){return e.toUnit(this._preferredAreaUnit(e,t))}_preferredAreaUnit(e,t){switch(t){case"metric":return Le(e.value,e.unit);case"imperial":return je(e.value,e.unit);default:return t}}_preferredLengthUnit(e,t){const s=this._deriveLengthUnitFromAreaUnit(t);switch(s){case"metric":return be(e.value,e.unit);case"imperial":return ve(e.value,e.unit);default:return s}}_deriveLengthUnitFromAreaUnit(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(e,t,s){return e&&t&&B(e,t,this._preferredAreaUnit(t,s))}_formatLengthLabel(e,t,s){return e&&t&&B(e,t,this._preferredLengthUnit(t,s))}_updateMessageBundle(){this.loadingMessages=!0,nt("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};e([a()],xt.prototype,"view",void 0),e([a()],xt.prototype,"messages",void 0),e([a()],xt.prototype,"analysis",void 0),e([a()],xt.prototype,"viewData",void 0),e([a()],xt.prototype,"analysisView",void 0),e([a({readOnly:!0})],xt.prototype,"areaLabel",void 0),e([a({readOnly:!0})],xt.prototype,"perimeterLengthLabel",void 0),e([a()],xt.prototype,"loadingMessages",void 0),e([a()],xt.prototype,"visible",null),xt=e([l("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],xt);const zt={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},Rt={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Ut=new H(S(),S());let It=class extends(p(t)){constructor(e){super(e),this.type="area-measurement-view-3d",this.analysisViewData=new vt}initialize(){this.analysisViewData.path.view=this.view,this.analysisViewData.path.areaMeasurement=this.analysis,this.analysisVisualization=new xt({view:this.view,analysis:this.analysis,analysisView:this}),this.analysisController=new ft({view:this.view,analysis:this.analysis,analysisViewData:this.analysisViewData})}destroy(){this.analysisController=r(this.analysisController),this.analysisVisualization=r(this.analysisVisualization),this.analysisViewData=r(this.analysisViewData)}get updating(){var e;return!(null==(e=this.analysisVisualization)||!e.loadingMessages)}get result(){const e=this.analysisViewData.measurementData;return s(e)?"euclidean"===e.actualMeasurementMode?{area:e.area,pathLength:e.perimeterLength,mode:"euclidian"}:{area:e.geodesicArea,pathLength:e.pathLength,mode:"geodesic"}:{area:null,mode:null,pathLength:null}}get unit(){return i(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};e([a()],It.prototype,"type",void 0),e([a()],It.prototype,"analysis",void 0),e([a()],It.prototype,"updating",null),e([a()],It.prototype,"analysisVisualization",void 0),e([a()],It.prototype,"analysisController",void 0),e([a()],It.prototype,"result",null),e([a()],It.prototype,"analysisViewData",void 0),e([a()],It.prototype,"unit",null),e([a(h)],It.prototype,"_defaultUnit",void 0),It=e([l("esri.views.3d.analysis.AreaMeasurement.AreaMeasurementView3D")],It);const Et=It;export{Et as default};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{h as r,u as s,i as o,l as a,clone as n,b as l}from"../core/lang.js";import"./ensureType.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import"../geometry.js";import u from"../core/Collection.js";import d from"../core/Error.js";import{L as c}from"./Logger.js";import{createResolver as h,ignoreAbortErrors as m,throwIfNotAbortError as y,debounce as f,isAbortError as g}from"../core/promiseUtils.js";import{r as _}from"./reactiveUtils.js";import{init as j,whenFalseOnce as v}from"../core/watchUtils.js";import b from"../core/Accessor.js";import{E as w}from"./EffectView.js";import S from"../layers/support/FeatureFilter.js";import{c as R,a as E}from"./drapedUtils.js";import x from"../rest/support/FeatureSet.js";import U from"../rest/support/Query.js";import{l as I}from"./definitions.js";import{L as C}from"./LayerView2D.js";import{e as V,f as F}from"./schemaUtils.js";import{f as O,a as T,i as q,c as k}from"./clusterUtils2.js";import{Q as P}from"./QueueProcessor.js";import{E as L}from"./Promise.js";import{open as D}from"../core/workers/workers.js";import{t as M}from"./util.js";import{a as A}from"./TileInfoView.js";import{T as N}from"./TileKey.js";import{F as H}from"./FeatureLayerView.js";import z from"../views/layers/LayerView.js";import{R as J}from"./RefreshableLayerView.js";import{g as B}from"./capabilities2.js";import Q from"../geometry/Extent.js";import"../PopupTemplate.js";import"./JSONSupport.js";import"./metadata.js";import"./handleUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../config.js";import"./object.js";import"./string.js";import"./reader.js";import"./writer.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../geometry/SpatialReference.js";import"./deprecate.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"./jsonMap.js";import"../geometry/support/jsonUtils.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./number.js";import"./locale.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"./chartMediaInfoUtils.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"./Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"./Evented.js";import"./shared.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"./mathUtils.js";import"./common.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils2.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"./aaBoundingRect.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../kernel.js";import"../request.js";import"./Loadable.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"./Thumbnail.js";import"./Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./parser.js";import"./mat4.js";import"./_commonjsHelpers.js";import"../TimeExtent.js";import"./timeUtils.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"../rest/support/StatisticDefinition.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./Container.js";import"./mat3f32.js";import"./DisplayObject.js";import"./ClipRect.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"./VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"./LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"./sizeVariableUtils.js";import"./visualVariableUtils.js";import"./compilerUtils.js";import"./lengthUtils.js";import"../renderers/support/ClassBreakInfo.js";import"./commonProperties2.js";import"../symbols/support/jsonUtils.js";import"./symbolConversion.js";import"../renderers/DictionaryRenderer.js";import"./LRUCache.js";import"./MemCache.js";import"../renderers/DotDensityRenderer.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import"./diffUtils.js";import"../renderers/support/UniqueValueInfo.js";import"./styleUtils.js";import"../renderers/support/jsonUtils.js";import"./enums.js";import"./Utils13.js";import"./number2.js";import"./Texture.js";import"./MaterialKey.js";import"./visualVariablesUtils2.js";import"./CIMSymbolHelper.js";import"./shapingUtils.js";import"./Rect.js";import"./mat2d.js";import"./mat2df32.js";import"./vec2.js";import"./vec2f32.js";import"./floatRGBA.js";import"./utils5.js";import"./GeometryUtils.js";import"./normalizeUtilsCommon.js";import"./cimSymbolUtils.js";import"./cimAnalyzer.js";import"./callExpressionWithFeature.js";import"./quantizationUtils.js";import"./devEnvironmentUtils.js";import"./MD5.js";import"./Queue.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"./assets.js";import"../intl.js";import"./messages.js";import"./commonProperties.js";import"../support/timeUtils.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"../layers/support/FeatureEffect.js";import"./jsonUtils.js";import"./popupUtils.js";import"./floorFilterUtils.js";import"../core/HandleOwner.js";import"../core/Handles.js";var G;let $=G=class extends t{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer&&this.sourceLayer.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.objectId}clone(){return new G({objectId:this.objectId,...this.cloneProperties()})}};e([i({type:Boolean})],$.prototype,"isAggregate",void 0),e([i({type:Number,json:{read:!0}})],$.prototype,"objectId",void 0),$=G=e([p("esri.AggregateGraphic")],$);const K=$;let W=class extends b{constructor(e){super(e),this._filter=null,this.duration=r("mapview-transitions-duration"),this._excludedEffectView=new w(e),this._includedEffectView=new w(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){var e;return this._filter||(null==(e=s(this.featureEffect))?void 0:e.filter)||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}end(){this._includedEffectView.end(),this._excludedEffectView.end(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),i=s(e),r=s(null==i?void 0:i.includedEffect),o=s(null==i?void 0:i.excludedEffect),a=this._includedEffectView.canTransitionTo(r)&&this._excludedEffectView.canTransitionTo(o);this._includedEffectView.effect=r,this._excludedEffectView.effect=o,this._set("featureEffect",i),this._filter=(null==i?void 0:i.filter)||(null==t?void 0:t.filter)||null,a||this.end()}};e([i()],W.prototype,"_filter",void 0),e([i()],W.prototype,"_excludedEffectView",void 0),e([i()],W.prototype,"_includedEffectView",void 0),e([i()],W.prototype,"duration",void 0),e([i()],W.prototype,"excludedEffects",null),e([i()],W.prototype,"featureEffect",null),e([i()],W.prototype,"filter",null),e([i()],W.prototype,"hasEffects",null),e([i()],W.prototype,"includedEffects",null),e([i({value:0})],W.prototype,"scale",null),e([i()],W.prototype,"transitioning",null),W=e([p("esri.layers.effects.FeatureEffectView")],W);const X=W;function Y(e){return e.some((e=>e.globalId))}function Z(e){return e.filter((e=>!e.error)).map((e=>{var t;return null!=(t=e.objectId)?t:e.globalId}))}function ee(e,t){const i=new Set(e);for(const e of t.values())i.add(e);return i}function te(e,t){const i=new Set(e);for(const e of t.values())i.delete(e);return i}let ie=class extends b{constructor(e){super(e),this._hasGlobalIds=!1}normalizeCtorArgs(e){return this._queueProcessor=new P({concurrency:1,process:e.process}),{}}destroy(){this._queueProcessor.clear()}get updating(){return this._queueProcessor.length>0}push(e){const t=this._queueProcessor,i=t.last();switch(e.type){case"update":case"refresh":if((null==i?void 0:i.type)===e.type)return;t.push(e).finally((()=>this.notifyChange("updating")));break;case"edit":{const r="processed-edit"===(null==i?void 0:i.type)?i:null;r&&t.popLast();const s=this._mergeEdits(r,e);for(const e of s)t.push(e).finally((()=>this.notifyChange("updating")));break}}this.notifyChange("updating")}_mergeEdits(e,t){var i,r;const{addedFeatures:s,deletedFeatures:o,updatedFeatures:a}=t.edits;if(this._hasGlobalIds=this._hasGlobalIds||Y(s)||Y(a)||Y(o),this._hasGlobalIds){return[e,{type:"processed-edit",edits:{addOrModified:[...s,...a],removed:o}}]}const n=new Set(Z(null!=(i=null==e?void 0:e.edits.addOrModified)?i:[])),l=new Set(Z(null!=(r=null==e?void 0:e.edits.removed)?r:[])),p=new Set([...Z(s),...Z(a)]),u=new Set(Z(o));return[{type:"processed-edit",edits:{addOrModified:Array.from(ee(te(n,u),p)).map((e=>({objectId:e}))),removed:Array.from(ee(te(l,p),u)).map((e=>({objectId:e})))}}]}};e([i({readOnly:!0})],ie.prototype,"updating",null),ie=e([p("esri.views.2d.layers.support.FeatureCommandQueue")],ie);const re=ie;let se=class extends L{constructor(e){super(e),this._startupResolver=h(),this.isReady=!1}initialize(){this._controller=new AbortController,this.addResolvingPromise(this._startWorker(this._controller.signal))}destroy(){this._controller.abort(),this._connection&&this._connection.close()}set tileRenderer(e){this.client.tileRenderer=e}get closed(){return this._connection.closed}async startup(e,t,i,r){await this.when();const s=this._controller.signal,o=(a=i.source,Array.isArray(a)?{transferList:i.source,signal:s}:void 0);var a;const n={service:i,config:t,tileInfo:e.tileInfo.toJSON(),tiles:r};await this._connection.invoke("startup",n,o),this._startupResolver.resolve(),this._set("isReady",!0)}async updateTiles(e){return await this._startupResolver.promise,m(this._connection.invoke("updateTiles",e))}async update(e){const t={config:e};return await this._startupResolver.promise,this._connection.invoke("update",t)}async applyUpdate(e){return await this._startupResolver.promise,this._connection.invoke("applyUpdate",e)}async setHighlight(e){return await this._startupResolver.promise,m(this._connection.invoke("controller.setHighlight",e))}async refresh(e){return await this._startupResolver.promise,m(this._connection.invoke("controller.refresh",e))}async querySummaryStatistics(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.querySummaryStatistics",{query:e.toJSON(),params:t},i)}async queryUniqueValues(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryUniqueValues",{query:e.toJSON(),params:t},i)}async queryClassBreaks(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryClassBreaks",{query:e.toJSON(),params:t},i)}async queryHistogram(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryHistogram",{query:e.toJSON(),params:t},i)}async queryFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatures",e.toJSON(),t)}async queryVisibleFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryVisibleFeatures",e.toJSON(),t)}async queryObjectIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryObjectIds",e.toJSON(),t)}async queryFeatureCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatureCount",e.toJSON(),t)}async queryExtent(e,t){return this._connection.invoke("controller.queryExtent",e.toJSON(),t)}async queryLatestObservations(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryLatestObservations",e.toJSON(),t)}async queryStatistics(e){return await this._startupResolver.promise,this._connection.invoke("controller.queryStatistics",e)}async getObjectId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getObjectId",e)}async getDisplayId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getDisplayId",e)}async getFeatures(e){return await this._startupResolver.promise,this._connection.invoke("controller.getFeatures",e)}async getAggregates(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregates")}async getAggregateValueRanges(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregateValueRanges")}async mapValidDisplayIds(e){return await this._startupResolver.promise,this._connection.invoke("controller.mapValidDisplayIds",e)}async onEdits(e){return await this._startupResolver.promise,m(this._connection.invoke("controller.onEdits",e))}async enableEvent(e,t){return await this._startupResolver.promise,m(this._connection.invoke("controller.enableEvent",{name:e,value:t}))}async _startWorker(e){try{this._connection=await D("Pipeline",{client:this.client,strategy:"dedicated",signal:e})}catch(e){y(e)}}};e([i()],se.prototype,"isReady",void 0),e([i()],se.prototype,"client",void 0),e([i()],se.prototype,"tileRenderer",null),se=e([p("esri.views.2d.layers.support.FeatureLayerProxy")],se);const oe=se;class ae{constructor(e){this._tiles=new Map,this.buffer=0,this.acquireTile=e.acquireTile,this.releaseTile=e.releaseTile,this.tileInfoView=e.tileInfoView,this.buffer=e.buffer}destroy(){}clear(){this._tiles.forEach((e=>this._releaseTile(e)))}tileKeys(){const e=[];return this._tiles.forEach(((t,i)=>e.push(i))),e}update(e){const t=this.tileInfoView.getTileCoverage(e.state,this.buffer,"closest"),{spans:i,lodInfo:r}=t,{level:s}=r,o=[],a=[],n=new Set,l=new Set;for(const{row:e,colFrom:t,colTo:a}of i)for(let i=t;i<=a;i++){const t=N.getId(s,e,r.normalizeCol(i),r.getWorldForColumn(i)),a=this._getOrAcquireTile(o,t);n.add(t),a.isReady?a.visible=!0:l.add(a.key)}l.forEach((e=>this._addPlaceholders(n,e))),this._tiles.forEach((e=>{n.has(e.key.id)||(a.push(e.key.id),this._releaseTile(e))})),A.pool.release(t);return{hasMissingTiles:l.size>0,added:o,removed:a}}_getOrAcquireTile(e,t){if(!this._tiles.has(t)){const i=this.acquireTile(new N(t));e.push(t),this._tiles.set(t,i),i.visible=!1}return this._tiles.get(t)}_getTile(e){return this._tiles.get(e)}_releaseTile(e){this._tiles.delete(e.key.id),this.releaseTile(e)}_addPlaceholders(e,t){const i=this._addPlaceholderChildren(e,t);if(!(Math.abs(1-i)<1e-6)){if(!this._addPlaceholderParent(e,t)){this._getTile(t.id).visible=!0}}}_addPlaceholderChildren(e,t){let i=0;return this._tiles.forEach((r=>{i+=this._addPlaceholderChild(e,r,t)})),i}_addPlaceholderChild(e,t,i){if(t.key.level<=i.level||!t.hasData||!i.contains(t.key))return 0;t.visible=!0,e.add(t.key.id);return 1/(1<<2*(t.key.level-i.level))}_addPlaceholderParent(e,t){let i=t.getParentKey(),r=0,s=null;for(;o(i);){if(e.has(i.id))return!0;const t=this._getTile(i.id);if(null!=t&&t.isReady)return t.visible=!0,e.add(t.key.id),!0;null!=t&&t.hasData&&t.patchCount>r&&(r=t.patchCount,s=t),i=i.getParentKey()}return!!s&&(s.visible=!0,e.add(s.key.id),!0)}}function ne(e){return e&&"openPorts"in e}const le=c.getLogger("esri.views.2d.layers.FeatureLayerView2D");let pe=class extends(H(J(C(z)))){constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._commandsQueue=new re({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"refresh":return this._doRefresh(e.dataChanged);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightIds=new Map,this._lastPixelBuffer=0,this._updateHighlight=f((async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys())))),this._uploadsLocked=!1,this._needsClusterSizeUpdate=!1,this.featureEffectView=new X,this._lastDefinitionExpression=null}destroy(){var e,t;a(this._updateClusterSizeTask,(e=>e.remove())),null==(e=this._proxy)||e.destroy(),null==(t=this.tileRenderer)||t.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",(e=>{this._set("_aggregateValueRanges",e.valueRanges)})),_((()=>this.featureEffect),(e=>{this.featureEffectView.featureEffect=e}),{initial:!0,sync:!0})])}async _initProxy(){if("isTable"in this.layer&&this.layer.isTable)throw new d("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});this._proxy&&this._proxy.destroy();const e=this._createClientOptions();return this._set("_proxy",new oe({client:e})),this._proxy.when()}async _initServiceOptions(){this._set("_serviceOptions",await this._createServiceOptions())}get orderByFields(){return"stream"!==this._serviceOptions.type&&this._serviceOptions.orderByFields}get labelsVisible(){const e="subtype-group"===this.layer.type?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some((e=>e.labelingInfo&&e.labelsVisible))}get queryMode(){return this._serviceOptions.type}get renderingConfigHash(){if(!this.layer)return null;const e=this.availableFields,t=this.layer,i=this.view.floors,{definitionExpression:r}=t,s="subtype-group"!==this.layer.type&&this.layer.labelsVisible&&this.layer.labelingInfo,a="renderer"in t&&t.renderer,n="feature"===t.type?t.gdbVersion:void 0,l="feature"===t.type&&t.historicMoment?t.historicMoment.getTime():void 0,{timeExtent:p}=this,u="customParameters"in t?JSON.stringify(t.customParameters):void 0,d="apiKey"in t?t.apiKey:void 0,c="stream"===t.type?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,h=JSON.stringify(this.clips),m=t.featureReduction&&t.featureReduction.toJSON(),y="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),f="sublayers"in this.layer&&this.layer.sublayers.items.reduce(((e,t)=>e+`${t.visible?1:0}.${JSON.stringify(t.renderer)}.${t.labelsVisible}\n.${JSON.stringify(t.labelingInfo)}`),"");return JSON.stringify({orderBy:y,sublayerHash:f,filterHash:o(this.filter)&&this.filter.toJSON(),effectHash:o(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:c,gdbVersion:n,definitionExpression:r,historicMoment:l,availableFields:e,renderer:a,labelingInfo:s,timeExtent:p,floors:i,clipsHash:h,featureReduction:m,customParameters:u,apiKey:d})}async fetchPopupFeatures(e,t){var i;if(o(t)&&0===t.clientGraphics.length)return[];if(!("cluster"===(null==(i=this.layer.featureReduction)?void 0:i.type))){const i=R({renderer:"renderer"in this.layer&&this.layer.renderer,event:o(t)&&t.event}),r=E(e,i,this.view),{features:s}=await this.queryVisibleFeatures(new U({geometry:r,outFields:["*"],returnGeometry:!0}));t=o(t)?t:{};const a=new Set(t.clientGraphics.map((e=>e.getObjectId())));for(const e of s)a.has(e.getObjectId())||t.clientGraphics.push(e)}return super.fetchPopupFeatures(e,t)}highlight(e){var i;let r;return e instanceof t?r=[e.getObjectId()]:"number"==typeof e||"string"==typeof e?r=[e]:Array.isArray(e)&&e.length>0?r="number"==typeof e[0]||"string"==typeof e[0]?e:e.map((e=>null==e?void 0:e.getObjectId())):u.isCollection(e)&&e.length>0&&(r=e.map((e=>null==e?void 0:e.getObjectId())).toArray()),r=null==(i=r)?void 0:i.filter((e=>null!=e)),r&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}async hitTest(e,i){if(!this.tileRenderer)return null;const r=await this.tileRenderer.hitTest(i);if(0===r.length)return null;const{features:s,aggregates:o}=await this._proxy.getFeatures(r);return[...o.map((e=>this._createHittestResult(K.fromJSON(e)))),...s.map((e=>this._createHittestResult(t.fromJSON(e))))]}async queryAggregates(){return(await this._proxy.getAggregates()).map((e=>K.fromJSON(e)))}queryStatistics(){return this._proxy.queryStatistics()}async querySummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),r,i)}async queryUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),r,i)}async queryClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),r,i)}async queryHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),r,i)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then((e=>{const t=x.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}queryVisibleFeatures(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then((e=>{const t=x.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then((e=>({count:e.count,extent:Q.fromJSON(e.extent)})))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:i,removed:r}=this._tileStrategy.update(e);(i.length||r.length)&&this._proxy.updateTiles({added:i,removed:r}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new ae({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add(j(this,"renderingConfigHash",(()=>this._update())),"attach"),"stream"!==this.layer.type&&this.handles.add(this.layer.on("edits",(e=>this._edit(e))),"attach")}detach(){this.container.removeAllChildren(),this.handles.remove("attach"),this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){var e;const t="renderer"in this.layer&&null!=this.layer.renderer,i=this._commandsQueue.updating,s=null!=this._updatingRequiredFieldsPromise,o=!this._proxy||!this._proxy.isReady,a=this._pipelineIsUpdating,n=null===this.tileRenderer||(null==(e=this.tileRenderer)?void 0:e.updating),l=t&&(i||s||o||a||n);return r("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${l}\n  -> hasRenderer ${t}\n  -> hasPendingCommand ${i}\n  -> updatingRequiredFields ${s}\n  -> updatingProxy ${o}\n  -> updatingPipeline ${a}\n  -> updatingTileRenderer ${n}\n`),l}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){var t;const i="path"in e,a="editingInfo"in this.layer&&(null==(t=this.layer.editingInfo)?void 0:t.lastEditDate),n=!!this.layer.refreshInterval,l=!a&&n;if(i&&("feature"===this.layer.type||"subtype-group"===this.layer.type)&&"point"===this.layer.geometryType&&this.layer.capabilities.query.supportsPagination&&!this.layer.capabilities.operations.supportsEditing&&!l&&r("featurelayer-snapshot-enabled"))try{const e=await this.layer.queryFeatureCount();if(e<=r("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:e};const t=r("featurelayer-snapshot-point-max-threshold"),i=r("featurelayer-snapshot-point-coverage"),a=this.view.extent,n=s(this.layer.fullExtent),l=null==n?void 0:n.clone().intersection(a),p=o(l)?l.width*l.height:0,u=(null==n?void 0:n.width)*(null==n?void 0:n.height),d=0===u?0:p/u;if(e<=t&&d>=i)return{mode:"snapshot",featureCount:e}}catch(e){le.warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:e})}return{mode:"on-demand"}}async _createServiceOptions(){var e;const t=this.layer;if("stream"===t.type)return null;const{capabilities:i,objectIdField:r}=t,s=t.fields.map((e=>e.toJSON())),a=o(t.fullExtent)&&t.fullExtent.toJSON(),l=M(t.geometryType),p=t.timeInfo&&t.timeInfo.toJSON()||null,u=t.spatialReference?t.spatialReference.toJSON():null,d="feature"===t.type?t.globalIdField:null;let c;"ogc-feature"===t.type?c=t.source.getFeatureDefinition():ne(t.source)?c=await t.source.openPorts():t.parsedUrl&&(c=n(t.parsedUrl),"dynamicDataSource"in t&&t.dynamicDataSource&&(c.query={layer:JSON.stringify({source:t.dynamicDataSource})}));const h="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,m=null!=(e="subtypeField"in this.layer&&this.layer.subtypeField)?e:null,{mode:y,featureCount:f}=await this._detectQueryMode(c);let g=this.layer.objectIdField;if("feature"===this.layer.type&&o(this.layer.orderBy)&&this.layer.orderBy.length){const e=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;e&&(g=e)}return{type:y,timeReferenceUnknownClient:h,subtypeField:m,featureCount:f,globalIdField:d,maxRecordCount:i.query.maxRecordCount,tileMaxRecordCount:i.query.tileMaxRecordCount,capabilities:i,fields:s,fullExtent:a,geometryType:l,objectIdField:r,source:c,timeInfo:p,spatialReference:u,orderByFields:g}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=U.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){if(this._validateEdit(e))return this._commandsQueue.push({type:"edit",edits:e})}async doRefresh(e){return this._commandsQueue.push({type:"refresh",dataChanged:e})}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some((e=>-1===e.objectId||!e.objectId)),r=t&&this.availableFields.includes(t);return i&&!r?(le.error(new d("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:e,filter:t}=this;await this._updateRequiredFields();const{renderer:i}=this._getEffectiveRenderer();this._set("_effectiveRenderer",i);const r=this._createSchemaConfig(),s=M(this.layer.geometryType),o=await V(i,s,this.view.resourceManager,this.layer.fields,this.layer.spatialReference,this.layer.featureReduction),a=this._createConfiguration(r,t,e.filter),n=this._lastDefinitionExpression!==a.definitionExpression;this._lastDefinitionExpression=a.definitionExpression,this._lastPixelBuffer=0===o?0:Math.max(o,this._lastPixelBuffer),a.schema.source.pixelBuffer=this._lastPixelBuffer;const l=this._createTileRendererHash(i);if("snapshot"===this._serviceOptions.type&&(a.schema.source.featureCount=this._serviceOptions.featureCount),l!==this._tileRendererHash){await this._initTileRenderer(i);const e=this._serviceOptions;this.tileRenderer.onConfigUpdate(i);const t=this.layer;"stream"!==t.type&&ne(t.source)&&(e.source=await t.source.openPorts()),"stream"===t.type&&await this._initServiceOptions();const r={added:this._tileStrategy.tileKeys(),removed:[]};await this._proxy.startup(this.view.featuresTilingScheme,a,e,r),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(i)}else{"snapshot"===this._serviceOptions.type&&n&&(a.schema.source.featureCount=await this.layer.queryFeatureCount());const e=await this._proxy.update(a);(e.mesh||e.targets.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(e)}catch(e){g(e)||le.error(e)}(e.mesh||e.targets.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(i),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=l,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch(e){}}async _doEdit(e){try{await this._proxy.onEdits(e)}catch(e){g(e),0}}async _doRefresh(e){this._lockGPUUploads();try{await this._proxy.refresh(e)}catch(e){g(e),0}this._unlockGPUUploads()}_updateClusterSizeVariable(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)}_createUpdateClusterSizeTask(e,t){return this.watch("_aggregateValueRanges",(async i=>{this._updateClusterEffectiveRendererSizeVariable(e,t,i),this._needsClusterSizeUpdate=!0,this._uploadsLocked||this._updateClusterSizeVariable()}))}async _updateClusterEffectiveRendererSizeVariable(e,t,i){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const r=O(e.visualVariables);if(o(r)&&"cluster_count"===r.field){const s=e.visualVariables.indexOf(r);e.visualVariables[s]=T(t,i);const o=e.clone();o.dynamicClusterSize=!0,this._set("_effectiveRenderer",o)}}}_getEffectiveRenderer(){const e="renderer"in this.layer&&this.layer.renderer,t=this.layer.featureReduction;if(o(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),t&&"cluster"===t.type&&q(e)){const i=t,r=[],s=k(r,e,i,this._aggregateValueRanges);return a(this._updateClusterSizeTask,(e=>e.remove())),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(s,i),{renderer:s,aggregateFields:r,featureReduction:t}}return{renderer:e,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",(()=>{this.requestUpdate()})),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e){const t=await async function(e,t){if(!e)return null;switch(e.type){case"class-breaks":case"simple":case"unique-value":case"dot-density":case"dictionary":return new((await import("./SymbolTileRenderer.js")).default)(t);case"heatmap":return new((await import("./HeatmapTileRenderer.js")).default)(t)}}(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=t,this._set("tileRenderer",t),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(e),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return`${"heatmap"===e.type?"heatmap":"symbol"}.${"dot-density"===e.type}`}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=o(e)?e.timeExtent:null,i=o(this.timeExtent)&&o(t)?this.timeExtent.intersection(t):this.timeExtent||t;let r=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const t=o(e)&&e.where;r=this._addFloorFilterClause(t)}if(!this._visibilityOverrides.size&&!i&&!s)return o(e)?e.toJSON():null;(e=o(e)&&e.clone()||new S).timeExtent=i,r&&(e.where=r);const a=e.toJSON();return a.hiddenIds=Array.from(this._visibilityOverrides),a}_addFloorFilterClause(e){const t=this.layer;let i=e||"";if("floorInfo"in t&&t.floorInfo){var r;let e=this.view.floors;if(!e||!e.length)return i;null!=(r=t.floorInfo.viewAllLevelIds)&&r.length&&(e=t.floorInfo.viewAllLevelIds);const s=e.filter((e=>""!==e)).map((e=>"'"+e+"'"));s.push("''");const a=t.floorInfo.floorField;let n="("+a+" IN ({ids}) OR "+a+" IS NULL)";if(n=n.replace("{ids}",s.join(", ")),o(i)&&i.includes(a)){let e=new RegExp("AND \\("+a+".*NULL\\)","g");i=i.replace(e,""),e=new RegExp("\\("+a+".*NULL\\)","g"),i=i.replace(e,""),i=i.replace(/\s+/g," ").trim()}i=""!==i?"("+i+") AND "+n:n}return""!==i?i:null}_createConfiguration(e,t,i){const r="feature"===this.layer.type&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s="feature"===this.layer.type?this.layer.gdbVersion:void 0,a=new Array(I),n=this._injectOverrides(t);a[0]=n,a[1]=o(i)?i.toJSON():null;const p=F(e);if(l(p))return null;const u=B();return{definitionExpression:this.layer.definitionExpression,availableFields:this.availableFields,gdbVersion:s,historicMoment:r,devicePixelRatio:window.devicePixelRatio||1,filters:a,schema:p,supportsTextureFloat:u.supportsTextureFloat,maxTextureSize:u.maxTextureSize}}_hasRequiredSupport(e){var t;return!("renderer"in e&&"dot-density"===(null==(t=e.renderer)?void 0:t.type)&&!B().supportsTextureFloat)||(le.error(new d("webgl-missing-extension","Missing WebGL extension OES_Texture_Float which is required for DotDensity")),!1)}_onceTilesUpdated(){return this.requestUpdate(),v(this,"_pipelineIsUpdating",!1)}_lockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())}_unlockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_createSchemaConfig(){const e="feature"===this.layer.type?this.layer.historicMoment:null,t="feature"===this.layer.type?this.layer.gdbVersion:null;return{renderer:"renderer"in this.layer&&this.layer.renderer,spatialReference:this.layer.spatialReference,timeExtent:this.layer.timeExtent,definitionExpression:this.layer.definitionExpression,featureReduction:this.layer.featureReduction,fields:this.layer.fields,geometryType:this.layer.geometryType,historicMoment:e,labelsVisible:"labelsVisible"in this.layer&&this.layer.labelsVisible,labelingInfo:"labelingInfo"in this.layer&&this.layer.labelingInfo,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:t,pixelBuffer:0,orderBy:"orderBy"in this.layer&&this.layer.orderBy?this.layer.orderBy:null,customParameters:{..."customParameters"in this.layer?this.layer.customParameters:void 0,token:"apiKey"in this.layer?this.layer.apiKey:void 0}}}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch((e=>{g(e)||le.error(e)}))}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;0===e?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight().catch((e=>{g(e)||le.error(e)}))}_setLayersForFeature(e){const t=this.layer;e.layer=t,e.sourceLayer=t}_createHittestResult(e){return this._setLayersForFeature(e),o(e.geometry)&&(e.geometry.spatialReference=this.view.spatialReference),e}};e([i()],pe.prototype,"_serviceOptions",void 0),e([i()],pe.prototype,"_proxy",void 0),e([i()],pe.prototype,"_pipelineIsUpdating",void 0),e([i()],pe.prototype,"_effectiveRenderer",void 0),e([i()],pe.prototype,"_aggregateValueRanges",void 0),e([i()],pe.prototype,"_commandsQueue",void 0),e([i()],pe.prototype,"featureEffectView",void 0),e([i()],pe.prototype,"labelsVisible",null),e([i({readOnly:!0})],pe.prototype,"queryMode",null),e([i()],pe.prototype,"renderingConfigHash",null),e([i()],pe.prototype,"tileRenderer",void 0),e([i()],pe.prototype,"updating",void 0),pe=e([p("esri.views.2d.layers.FeatureLayerView2D")],pe);const ue=pe;export{ue as default};

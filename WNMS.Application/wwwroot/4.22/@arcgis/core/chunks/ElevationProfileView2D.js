/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import t from"../core/Handles.js";import{z as i,r as e,b as s,i as o,k as r}from"../core/lang.js";import{r as p,s as a}from"./reactiveUtils.js";import{E as n}from"../widgets/ElevationProfile/ElevationProfileLine.js";import{H as h}from"./HoveredPoints.js";import{createTask as m,throwIfAborted as l}from"../core/promiseUtils.js";import{h as c}from"./layerViewUtils.js";import"./tslib.es6.js";import"../core/Accessor.js";import"./deprecate.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import"./metadata.js";import"./handleUtils.js";import"./ArrayPool.js";import"../core/accessorSupport/decorators/subclass.js";import"../core/Error.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/Collection.js";import"./Evented.js";import"./shared.js";import"../Color.js";import"./colorUtils.js";import"./mathUtils.js";import"./common.js";import"./uuid.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../geometry/Geometry.js";import"./JSONSupport.js";import"../geometry/SpatialReference.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"./vec4f64.js";import"./unitUtils.js";import"./jsonMap.js";import"./projectionEllipsoid.js";import"./AnchorElementViewModel.js";import"../core/watchUtils.js";class j{constructor(t){this._params=t,this._highlightTask=null,this._highlightHandle=null}destroy(){this.remove()}remove(){this._highlightTask=i(this._highlightTask),this._highlightHandle=e(this._highlightHandle)}update(t){if(this.remove(),s(t)||!function(t){return o(t.geometry)&&"polyline"===t.geometry.type}(t))return;const i=t.layer;this._highlightTask=m((async e=>{const s=await this._params.view.whenLayerView(i);l(e),c(s)&&(this._highlightHandle=s.highlight(t))}))}}class d{constructor(i,e){this._handles=new t,this._inputRepresentation=new j({view:i}),this._hoveredPoints=new h({view:i}),this._handles.add([p((()=>e.viewModel.hoveredPoints),(t=>this._hoveredPoints.update(t)),a),p((()=>{const{state:t,highlightEnabled:i,viewModel:s}=e;return{input:s.input,state:t,highlightEnabled:i}}),(t=>this._updateInputRepresentation(t)),a)])}destroy(){this._handles=r(this._handles),this._inputRepresentation=r(this._inputRepresentation),this._hoveredPoints=r(this._hoveredPoints)}_updateInputRepresentation({input:t,state:i,highlightEnabled:e}){i===n.Selected&&e?this._inputRepresentation.update(t):this._inputRepresentation.remove()}}export{d as ElevationProfileView2D};

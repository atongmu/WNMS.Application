/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Accessor.js";import{k as i,b as s,o as r,i as o}from"../core/lang.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{d as l}from"./defaultUnit.js";import{A as p}from"./AnalysisView3D.js";import m from"../core/Handles.js";import{b as d,E as c,o as h,r as u,i as g,e as y,n as v,s as _,a as j,j as b,ae as w,f,g as S,ad as L}from"./mathUtils.js";import{U as P,Q as C,L as E,G as z,E as D,f as M,a as O,b as V,c as A,d as x,e as U,s as T,g as R}from"./Segment.js";import{r as G,s as I}from"./reactiveUtils.js";import{whenOnce as F}from"../core/watchUtils.js";import{geodesicLength as k}from"../geometry/geometryEngine.js";import W from"../geometry/Polyline.js";import{canProjectWithoutEngine as H,projectPointToVector as q,projectPointToWGS84ComparableLonLat as B}from"../geometry/projection.js";import{a as Q,g as N,S as J,W as Z}from"./projectionEllipsoid.js";import{isSupported as $,geodesicLengths as K,inverseGeodeticSolver as X}from"../geometry/support/geodesicUtils.js";import{g as Y}from"./ElevationProvider.js";import"../intl.js";import{d as ee,f as te}from"./screenUtils.js";import{j as ie,c as se}from"./unitUtils.js";import{j as re}from"./vec2.js";import{f as oe}from"./vec4f32.js";import{O as ae,L as ne}from"./LineVisualElement.js";import{c as le}from"./mat4f64.js";import{c as pe}from"./vec4f64.js";import{b as me}from"./vectorStacks.js";import{G as de}from"./ColorMaterial.js";import{n as ce}from"./InterleavedLayout.js";import{S as he,g as ue,p as ge,a as ye,b as ve,c as _e,P as je,D as be,h as we,Q as fe,a1 as Se,a2 as Le,a0 as Pe}from"./StencilUtils.js";import{m as Ce,e as Ee,O as ze,c as De,d as Me}from"./OrderIndependentTransparency.js";import{R as Oe}from"./RightAngleQuadVisualElement.js";import{d as Ve}from"./lineStippleUtils.js";import{o as Ae}from"./locale.js";import{f as xe}from"./messages.js";import"./deprecate.js";import"./Logger.js";import"../config.js";import"./object.js";import"./string.js";import"./metadata.js";import"./handleUtils.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"../core/promiseUtils.js";import"../core/Error.js";import"./Promise.js";import"../core/Collection.js";import"./Evented.js";import"./shared.js";import"./common.js";import"../widgets/Attachments.js";import"./number.js";import"./jsonMap.js";import"../core/accessorSupport/decorators/aliasOf.js";import"../core/accessorSupport/decorators/cast.js";import"../widgets/Widget.js";import"./domUtils.js";import"./uuid.js";import"./projector.js";import"./widgetUtils.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./jsxWidgetSupport.js";import"../widgets/Attachments/AttachmentsViewModel.js";import"../Graphic.js";import"../geometry.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"./JSONSupport.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"./Ellipsoid.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../PopupTemplate.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"./chartMediaInfoUtils.js";import"./MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../support/actions/ActionBase.js";import"./Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../Color.js";import"./colorUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils2.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"./aaBoundingRect.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"./Loadable.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalGroup.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"./Thumbnail.js";import"./Symbol3DVerticalOffset.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../core/HandleOwner.js";import"../rest/query/support/AttachmentInfo.js";import"../rest/support/AttachmentQuery.js";import"./messageBundle.js";import"./jsxFactory.js";import"./viewUtils.js";import"./VisualElement.js";import"./mathUtils2.js";import"./geometryEngineBase.js";import"./hydrated.js";import"./mat4.js";import"./pe.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./ScreenSpacePass.js";import"./vec2f64.js";import"./dehydratedFeatures.js";import"./byteSizeEstimations.js";import"./quantizationUtils.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./sphere.js";import"./ray.js";import"./Util2.js";import"./utils14.js";import"./mat3.js";import"./quatf64.js";import"./quat.js";import"./vec3f32.js";import"./doublePrecisionUtils.js";import"./frustum.js";import"./plane.js";import"./lineUtils.js";import"./triangulationUtils.js";import"./earcut.js";import"./deduplicate.js";import"./compilerUtils.js";import"./vec2f32.js";import"./Program.js";import"./Texture.js";import"./FramebufferObject.js";import"./Camera.js";import"./lineSegment.js";import"./geometryDataUtils.js";import"./triangle.js";import"./PhysicallyBasedRendering.glsl.js";import"./Intersector.js";import"./boundedPlane.js";import"./glUtil.js";import"./MemCache.js";import"./floatRGBA.js";import"./Scheduler.js";import"./debugFlags.js";import"./VertexColor.glsl.js";import"./BufferView.js";import"./types.js";import"./parser.js";import"./_commonjsHelpers.js";import"./unitConversionUtils.js";import"./lengthUtils.js";let Ue=class extends t{constructor(e){super(e),this._unitNormalizer=new P,this._handles=new m,this._tempStartPosition=d(),this._tempEndPosition=d(),this._tempCornerPosition=d()}initialize(){this._handles.add(F(this.view,"ready",(()=>this._initialize()),!0))}destroy(){this._handles=i(this._handles)}_initialize(){const e=this.view.spatialReference,t=Q(e),i=t===J?Z:t;this._sphericalPCPF=i;const s=H(e,i);this._unitNormalizer.spatialReference=s?i:e,this._handles.add([G((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyElevationAlignment(t)}),I),G((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyElevationAlignment(t)}),I),G((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e}),I)])}_applyElevationAlignment(e){if(s(e)||e.hasZ)return e;const t=e.clone();return t.z=r(Y(this.view.elevationProvider,t),0),t}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.viewData;if(s(e)||s(t))return null;const i=this._euclideanDistances(e,t),r=this._exactGeodesicDistanceAndAngle(e,t,i.horizontal.value);let o=null;switch(this.viewData.measurementMode){case 0:{var a;o="euclidean";const e=this.viewData.unit,t=(null==(a=i.horizontal)?void 0:a.value)>1e5;("degrees"===e||"degrees-minutes-seconds"===e||t)&&(o="geodesic");break}case 1:o="euclidean";break;case 2:o="geodesic"}return{distance:"euclidean"===o?i.direct:r.distance,mode:o,directDistance:i.direct,horizontalDistance:i.horizontal,verticalDistance:i.vertical,geodesicDistance:r.distance,geodesicAngle:r.angle}}_euclideanDistances(e,t){const i=e.clone();i.z=t.z;const s=this._tempStartPosition,r=this._tempEndPosition,o=this._tempCornerPosition,a=this.view.spatialReference,n=this._sphericalPCPF,l=H(a,n)?n:a;q(e,s,l),q(t,r,l),q(i,o,l);const p=c(s,r),m=c(o,r),d=Math.abs(t.z-e.z),h=e=>this._unitNormalizer.normalizeDistance(e),u=h(p),g=h(m),y=h(d);return{direct:new C(u,"meters"),horizontal:new C(g,"meters"),vertical:new C(y,"meters")}}_exactGeodesicDistanceAndAngle(e,t,i){const s=e.spatialReference,r=new W({spatialReference:s});r.addPath([e,t]);const o=s.isGeographic&&$(s)?K([r],"meters")[0]:s.isWebMercator?k(r,"meters"):void 0,{distance:a,angle:n}=o?{distance:o,angle:this._fallbackGeodesicAngle(o,s)}:this._fallbackGeodesicDistance(e,t,i);return{distance:new C(a,"meters"),angle:new C(n,"degrees")}}_fallbackGeodesicAngle(e,t){return e/N(t).metersPerDegree}_fallbackGeodesicDistance(e,t,i){if(B(e,Te)){B(t,Re);const e=h(Te[0]),i=h(Te[1]),s=h(Re[0]),r=h(Re[1]),o=Math.abs(s-e),a=g(Math.sin(i)*Math.sin(r)+Math.cos(i)*Math.cos(r)*Math.cos(o)),n=u(a),l={distance:0};return X(l,[Te[0],Te[1]],[Re[0],Re[1]]),{distance:l.distance,angle:n}}const s=e.spatialReference,r=i;return{distance:r,angle:this._fallbackGeodesicAngle(r,s)}}};e([a()],Ue.prototype,"view",void 0),e([a()],Ue.prototype,"analysis",void 0),e([a()],Ue.prototype,"viewData",void 0),e([a()],Ue.prototype,"_computedResult",null),Ue=e([n("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],Ue);const Te=d(),Re=d();const Ge=Object.freeze({__proto__:null,build:function(){const e=new he;e.vertex.uniforms.add("proj","mat4").add("view","mat4").add("width","float"),e.attributes.add("position","vec3"),e.attributes.add("normal","vec3"),e.attributes.add("uv0","vec2"),e.attributes.add("auxpos1","float"),e.varyings.add("vtc","vec2"),e.varyings.add("vlength","float"),e.varyings.add("vradius","float"),e.vertex.code.add(ue`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),e.fragment.uniforms.add("outlineSize","float").add("outlineColor","vec4").add("stripeLength","float").add("stripeEvenColor","vec4").add("stripeOddColor","vec4");const t=1/Math.sqrt(2);return e.fragment.code.add(ue`
    const float INV_SQRT2 = ${ue.float(t)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      gl_FragColor = color;
    }
  `),e}});class Ie extends _e{constructor(e,t,i){super(e,t,i)}initializeProgram(e){const t=Ie.shader.get().build();return new je(e.rctx,t,be)}bindPass(e,t){we(this.program,t.camera.projectionMatrix),this.program.setUniform1f("width",e.width),this.program.setUniform1f("outlineSize",e.outlineSize),this.program.setUniform4fv("outlineColor",e.outlineColor),this.program.setUniform1f("stripeLength",e.stripeLength),this.program.setUniform4fv("stripeEvenColor",e.stripeEvenColor),this.program.setUniform4fv("stripeOddColor",e.stripeOddColor)}bindDraw(e){fe(this.program,e),this.program.rebindTextures()}setPipelineState(e){const t=3===e,i=this.configuration;return Ce({blending:i.transparent?t?Ee:ze(e):null,polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:513},depthWrite:De,colorWrite:Me})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return 5}}Ie.shader=new ye(Ge,(()=>Promise.resolve().then((()=>Ge))));class Fe extends ve{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=3}}e([ge()],Fe.prototype,"polygonOffsetEnabled",void 0),e([ge()],Fe.prototype,"transparent",void 0),e([ge({count:4})],Fe.prototype,"transparencyPassType",void 0);class ke extends Se{constructor(e){super(e,He),this.techniqueConfig=new Fe}getTechniqueConfig(e,t){var i;return this.techniqueConfig.polygonOffsetEnabled=this.parameters.polygonOffset,this.techniqueConfig.transparent=this.parameters.stripeEvenColor[3]<1||this.parameters.stripeOddColor[3]<1||this.parameters.outlineColor[3]<1,this.techniqueConfig.transparencyPassType=null!=(i=null==t?void 0:t.transparencyPassType)?i:3,this.techniqueConfig}dispose(){}getPassParameters(){return this.parameters}intersect(){}requiresSlot(e){return 2===e}createGLMaterial(e){return 0===e.output?new We(e):null}createBufferWriter(){return new $e}}class We extends Le{updateParameters(e){return this.ensureTechnique(Ie,e)}beginSlot(e){return this.updateParameters(e)}bind(e,t){t.bindPass(this._material.getPassParameters(),e)}}const He={width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1,...Pe},qe=ce().vec3f("position").vec3f("normal").vec2f("uv0").f32("auxpos1"),Be=d(),Qe=d(),Ne=d(),Je=d(),Ze=d();class $e{constructor(){this.vertexBufferLayout=qe}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return 2*(e.indices.get("position").length/2+1)}write(e,t,i,s){const r=t.vertexAttributes.get("position").data,o=t.vertexAttributes.get("normal").data,a=r.length/3,n=t&&t.indices&&t.indices.get("position");n&&n.length!==2*(a-1)&&console.warn("MeasurementArrowMaterial does not support indices");const l=Be,p=Qe,m=Ne,d=Je,h=Ze,u=e.transformation,g=e.invTranspTransformation,w=i.position,f=i.normal,S=i.uv0;let L=0;for(let e=0;e<a;++e){const t=3*e;if(y(l,r[t],r[t+1],r[t+2]),e<a-1){const t=3*(e+1);y(p,r[t],r[t+1],r[t+2]),y(h,o[t],o[t+1],o[t+2]),v(h,h),_(m,p,l),v(m,m),j(d,h,m),v(d,d)}const i=c(l,p);u&&g&&(b(l,l,u),b(p,p,u),b(d,d,g));const n=s+2*e,P=n+1;w.setVec(n,l),w.setVec(P,l),f.setVec(n,d),f.setVec(P,d),S.set(n,0,L),S.set(n,1,-1),S.set(P,0,L),S.set(P,1,1),e<a-1&&(L+=i)}const P=i.auxpos1;for(let e=0;e<2*a;++e)P.set(s+e,L)}}class Ke extends ae{constructor(e){super(e),this._parameters=Xe,this._handles=null,this._origin=d(),this._originTransform=le(),this._arrowCenter=d(),this._renderOccluded=4,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._opacity=1,this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:e}))}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(e){this._stripeLength=e,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(e){if(this._stripesEnabled=e,this.attached){const e=this.opacity,{arrowStripeEvenColor:t,arrowStripeOddColor:i}=this._parameters,s=w(Ye,this._stripesEnabled?t:i,e);this._arrowMaterial.setParameters({stripeEvenColor:s})}}get opacity(){return this._opacity}set opacity(e){e!==this._opacity&&(this._opacity=e,this._updateArrowOpacity())}createExternalResources(){const{arrowStripeEvenColor:e,arrowStripeOddColor:t,arrowOutlineColor:i}=this._parameters,s=this._stripesEnabled?e:t;this._arrowMaterial=new ke({outlineColor:i,stripeEvenColor:s,stripeOddColor:t,renderOccluded:this.renderOccluded,polygonOffset:!0}),this._handles=new m,this._handles.add(this.view.state.watch("camera",(()=>{this.viewChanged()})))}destroyExternalResources(){this._arrowMaterial=null,this._handles.destroy(),this._handles=null}forEachExternalMaterial(e){e(this._arrowMaterial)}createGeometries(e){if(s(this._geometry)||s(this._geometry.startRenderSpace)||s(this._geometry.endRenderSpace))return;const t=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);e.addGeometry(t,this._arrowMaterial,this._originTransform),this.viewChanged()}_createArrowGeometry(e,t,i,s){const r=this.view.renderCoordsHelper,o=[],a=[],n=(e,t)=>{const s=me.get();_(s,e,i),o.push(s),a.push(t)};if("euclidean"===s.type){s.eval(.5,this._arrowCenter);const i=me.get();r.worldUpAtPosition(this._arrowCenter,i),n(e,i),n(t,i)}else{s.eval(.5,this._arrowCenter);const e=this._parameters.arrowSubdivisions+1&-2;for(let t=0;t<e;++t){const i=t/(e-1),o=me.get(),a=me.get();s.eval(i,o),r.worldUpAtPosition(o,a),n(o,a)}}return de.createPolylineGeometry(o,a)}geometryChanged(){this.recreateGeometry()}viewChanged(){if(this.view.ready&&this.attached&&o(this._geometry)){const e=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._parameters.arrowWidth*e})}}_updateArrowOpacity(){const e=this.opacity,{arrowStripeEvenColor:t,arrowStripeOddColor:i,arrowOutlineColor:s}=this._parameters,r=w(Ye,this._stripesEnabled?t:i,e),o=w(et,s,e),a=w(tt,i,e);this._arrowMaterial.setParameters({stripeEvenColor:r,outlineColor:o,stripeOddColor:a})}}const Xe={arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128},Ye=pe(),et=pe(),tt=pe();let it=class extends t{constructor(e){super(e),this._params={...rt},this._handles=new m,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=d(),this._endPosition=d(),this._cornerPosition=d(),this._startPositionAtSeaLevel=d(),this._endPositionAtSeaLevel=d(),this._state=0,this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=0,this.triangleCollapseRatioThreshold=.03}get ready(){return 1===this._state}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(s(e)||s(t)||e.equals(t))return 0;const i=this.analysisView.result;if(s(i))return 1;if("geodesic"===i.mode)return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?3:1;const{verticalDistance:r,horizontalDistance:o}=i,a=r.value,n=o.value;return Math.min(a/n,n/a)<this.triangleCollapseRatioThreshold?1:2}get actualVisualizedMeasurement(){if(s(this.analysisView.result))switch(this.analysisView.measurementMode){case 0:case 1:default:return"euclidean";case 2:return"geodesic"}return this.analysisView.result.mode}get allowVisualElementsOrientationChange(){return s(this._triangleOrientationOverride)}set allowVisualElementsOrientationChange(e){s(this._triangleOrientationOverride)!==e&&(s(this._triangleOrientationOverride)?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){const e="geodesic"===this.actualVisualizedMeasurement;return{direct:this._segmentLabel,horizontal:e?this._segmentLabel:this._horizontalLabel,vertical:this._verticalLabel}}get testData(){var e;return{labels:this.labels,stripeLength:null==(e=this._segmentVisualElement)?void 0:e.stripeLength}}initialize(){this._handles.add(F(this.view,"ready",(()=>this._initialize()),!0))}_initialize(){switch(this._state){case 1:throw new Error("invalid state");case 2:return}const e=this._params,t={attached:!0,view:this.view};this._segmentVisualElement=new Ke({...t,geometry:null,renderOccluded:4}),this._triangleVisualElement=new ne({...t,width:e.triangleLineWidth,color:e.triangleColor,renderOccluded:4}),this._rightAngleQuad=new Oe({...t,color:st,renderOccluded:4});const i={...t,polygonOffset:!0,renderOccluded:4};this._projectedGeodesicLine=new ne({...i,width:e.geodesicProjectionLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:Ve(e.guideStippleLengthPixels)}),this._geodesicStartHint=new ne({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:Ve(e.guideStippleLengthPixels)}),this._geodesicEndHint=new ne({...i,width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:Ve(e.guideStippleLengthPixels)}),this._segmentLabel=new E({...t,fontSize:e.direcLabelFontSize}),this._verticalLabel=new E({...t,fontSize:e.verticalLabelFontSize}),this._horizontalLabel=new E({...t,fontSize:e.horizontalLabelFontSize}),this._handles.add([G((()=>{const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView,i=this.view;return{view:i,camera:i.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}}),(e=>this._updateGeometryAndViewMode(e)),I),G((()=>({visible:this.visible,viewMode:this.viewMode})),(e=>this._updateVisualElementVisibility(e)),I),G((()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement})),(e=>this._updateLabelText(e)),I),G((()=>({visible:this.visible,viewMode:this.viewMode,state:this._state})),(e=>this._updateLabelVisibility(e)),I),G((()=>this._measurementArrowStripeLength),(e=>this._updateSegmentStripeLength(e)),I),Ae((async()=>this._updateMessageBundle()))]),this._state=1,this._updateMessageBundle()}destroy(){2!==this._state&&(this._handles=i(this._handles),this._segmentVisualElement=i(this._segmentVisualElement),this._triangleVisualElement=i(this._triangleVisualElement),this._rightAngleQuad=i(this._rightAngleQuad),this._projectedGeodesicLine=i(this._projectedGeodesicLine),this._geodesicStartHint=i(this._geodesicStartHint),this._geodesicEndHint=i(this._geodesicEndHint),this._segmentLabel=i(this._segmentLabel),this._verticalLabel=i(this._verticalLabel),this._horizontalLabel=i(this._horizontalLabel),this.set("view",null),this._state=2)}async whenReady(){await F(this,"ready")}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case 0:break;case 1:this._segmentVisualElement.visible=!0;break;case 2:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case 3:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:r,elevationAlignedEndPoint:o,orientation:a,visualizedMeasurement:n,stripeLength:l}){const p=e.renderCoordsHelper;if(s(r)||s(o)||r.equals(o))return;let m=this._startPosition,d=this._endPosition;p.toRenderCoords(r,m),p.toRenderCoords(o,d);const c=1===a?1:-1,h=c*(p.getAltitude(d)-p.getAltitude(m));h<0&&(m=this._endPosition,d=this._startPosition);const u="geodesic"===n?new z(this._startPosition,this._endPosition,p.spatialReference):new D(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=u,this._updateSegmentStripeLength(l),i){case 1:this._updateSegment(u,a);break;case 2:this._updateSegmentAndTriangle({view:e,camera:t,segment:u,orientation:a,startPosition:m,endPosition:d,deltaSign:c,altitudeDelta:h});break;case 3:this._updateSegmentAndProjection({view:e,orientation:a,startPosition:m,endPosition:d})}}_updateSegment(e,t){this._segmentLabel.anchor=1===t?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:r,endPosition:o,deltaSign:a,altitudeDelta:n}){const l=this._cornerPosition;e.worldUpAtPosition(r,l),f(l,l,a*Math.abs(n)),S(l,l,r),this._triangleVisualElement.geometry=[[[r[0],r[1],r[2]],[l[0],l[1],l[2]],[o[0],o[1],o[2]]]],this._rightAngleQuad.geometry={previous:r,center:l,next:o};const p=new D(r,l),m=new D(l,o),d=function(e,t,i,s,r){const o=at,a=nt;r.projectToRenderScreen(i,o),r.projectToRenderScreen(t,a);const n={segment:"bottom",horizontal:"top",vertical:o[0]<a[0]?"left":"right"};{const s=lt,o=pt;if(T(e,i,s,r),T(e,t,o,r),re(s,o)>=ot){const e=Math.sign(s[1])===Math.sign(o[1]);n.segment=e?R(n.vertical):n.vertical}else{const e=mt;T(i,t,e,r),re(e,o)>=ot&&(n.segment=Math.sign(e[0])===Math.sign(o[0])?R(n.horizontal):n.horizontal)}}if(2===s){const e=e=>"top"===e?"bottom":"top";n.segment=e(n.segment),n.horizontal=e(n.horizontal),n.vertical=e(n.vertical)}return n}(r,o,l,s,t);this._segmentLabel.anchor=d.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:p,sampleLocation:"center"},this._verticalLabel.anchor=d.vertical,this._horizontalLabel.geometry={type:"segment",segment:m,sampleLocation:"center"},this._horizontalLabel.anchor=d.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const r=new z(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(r),this._geodesicStartHint.setGeometryFromSegment(new D(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new D(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:r,sampleLocation:"center"},this._segmentLabel.anchor=1===t?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){o(e)?(this._segmentLabel.text="euclidean"===t?e.euclideanDistance:e.geodesicDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({state:e,visible:t,viewMode:i}){if(1!==e)return;const s=this._segmentLabel,r=this._horizontalLabel,o=this._verticalLabel;if(s.visible=!1,r.visible=!1,o.visible=!1,t)switch(i){case 1:case 3:s.visible=!0;break;case 2:s.visible=!0,r.visible=!0,o.visible=!0}}get _labelsText(){if(1!==this._state)return null;const e=this.messages,t=this.analysisView.result;if(s(t)||s(e))return null;const{directDistance:i,horizontalDistance:r,verticalDistance:o,geodesicDistance:a,geodesicAngle:n}=t,l=this.analysisView.unit,p=e=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...e});switch(l){case"metric":return p({euclideanDistance:i&&x(e,i),geodesicDistance:a&&x(e,a),horizontalDistance:r&&x(e,r),verticalDistance:o&&U(e,o)});case"imperial":return p({euclideanDistance:i&&V(e,i),geodesicDistance:a&&V(e,a),horizontalDistance:r&&V(e,r),verticalDistance:o&&A(e,o)});case"degrees":{const t=n&&M(e,n,"degrees");return p({euclideanDistance:t,geodesicDistance:t,horizontalDistance:t})}case"degrees-minutes-seconds":return p({horizontalDistance:n&&O(n)});default:return p({euclideanDistance:i&&M(e,i,l),geodesicDistance:a&&M(e,a,l),horizontalDistance:r&&M(e,r,l),verticalDistance:o&&M(e,o,l)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;o(e)?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(o(this._triangleOrientationOverride))return this._triangleOrientationOverride;const e=this.visualElementOrientation;return 0===e?this.view.state.camera.aboveGround?1:2:e}_requiresGeodesicGuideAt(e){const t=this.view;if(null==t||!t.state)return!1;const i=t.state.camera,s=t.renderCoordsHelper,r=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/r>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(s(e))return null;let i=null;const r=e.directDistance;switch(t){case"metric":i=r&&r.toUnit("meters");break;case"imperial":i=r&&r.toUnit(ie(r.value,r.unit));break;case"degrees":case"degrees-minutes-seconds":{const t=e.geodesicAngle;i=t&&t.toUnit("degrees");break}default:i=r&&r.toUnit(t)}if(s(i))return null;return L(i.value/30)*("degrees"===i.unit?N(this.view.spatialReference).metersPerDegree:se(1,i.unit,"meters"))}_updateMessageBundle(){this.loadingMessages=!0,xe("esri/core/t9n/Units").then((e=>{this.messages=e})).finally((()=>{this.loadingMessages=!1}))}};e([a()],it.prototype,"_state",void 0),e([a()],it.prototype,"_triangleOrientationOverride",void 0),e([a()],it.prototype,"messages",void 0),e([a()],it.prototype,"view",void 0),e([a()],it.prototype,"analysis",void 0),e([a()],it.prototype,"analysisView",void 0),e([a()],it.prototype,"ready",null),e([a()],it.prototype,"loadingMessages",void 0),e([a()],it.prototype,"visible",null),e([a()],it.prototype,"viewMode",null),e([a()],it.prototype,"actualVisualizedMeasurement",null),e([a()],it.prototype,"visualElementOrientation",void 0),e([a()],it.prototype,"triangleCollapseRatioThreshold",void 0),e([a()],it.prototype,"allowVisualElementsOrientationChange",null),e([a()],it.prototype,"labels",null),e([a()],it.prototype,"testData",null),e([a()],it.prototype,"_labelsText",null),e([a()],it.prototype,"_actualVisualElementsOrientation",null),e([a()],it.prototype,"_measurementArrowStripeLength",null),it=e([n("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],it);const st=oe(1,.5,0,.75),rt={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:st,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:st,guideLineWidth:2,guideLineColor:st,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},ot=Math.cos(h(12)),at=ee(),nt=ee(),lt=te(),pt=te(),mt=te();let dt=class extends(p(t)){constructor(e){super(e),this.type="direct-line-measurement-view-3d",this.result=null,this.measurementMode=0,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const e=this.view,t=this.analysis;this._analysisVisualization=new it({view:e,analysis:t,analysisView:this}),this._analysisController=new Ue({view:e,analysis:t,viewData:this})}destroy(){this._analysisController=i(this._analysisController),this._analysisVisualization=i(this._analysisVisualization)}whenReady(){return this._analysisVisualization.whenReady()}get updating(){var e;return!(null==(e=this._analysisVisualization)||!e.loadingMessages)}get viewMode(){return this._analysisVisualization.viewMode}get visualizedMeasurement(){return this.measurementMode}set visualizedMeasurement(e){this.measurementMode=e}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(e){this._analysisVisualization.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisVisualization.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisVisualization.triangleCollapseRatioThreshold=e}get directLabelText(){return this._analysisVisualization.labels.direct.text}get horizontalLabelText(){return this._analysisVisualization.labels.horizontal.text}get verticalLabelText(){return this._analysisVisualization.labels.vertical.text}get testData(){var e;return this.destroyed?{labels:null,stripeLength:null,visualization:null,controller:null}:{...null==(e=this._analysisVisualization)?void 0:e.testData,visualization:this._analysisVisualization,controller:this._analysisController}}get unit(){return r(this.analysis.unit,this._defaultUnit)}};e([a()],dt.prototype,"updating",null),e([a()],dt.prototype,"type",void 0),e([a()],dt.prototype,"analysis",void 0),e([a()],dt.prototype,"result",void 0),e([a()],dt.prototype,"measurementMode",void 0),e([a()],dt.prototype,"elevationAlignedStartPoint",void 0),e([a()],dt.prototype,"elevationAlignedEndPoint",void 0),e([a({readOnly:!0})],dt.prototype,"viewMode",null),e([a()],dt.prototype,"visualizedMeasurement",null),e([a({readOnly:!0})],dt.prototype,"actualVisualizedMeasurement",null),e([a()],dt.prototype,"visualElementOrientation",null),e([a()],dt.prototype,"allowVisualElementsOrientationChange",null),e([a()],dt.prototype,"triangleCollapseRatioThreshold",null),e([a({readOnly:!0})],dt.prototype,"directLabelText",null),e([a({readOnly:!0})],dt.prototype,"horizontalLabelText",null),e([a({readOnly:!0})],dt.prototype,"verticalLabelText",null),e([a()],dt.prototype,"testData",null),e([a()],dt.prototype,"_analysisVisualization",void 0),e([a()],dt.prototype,"_analysisController",void 0),e([a()],dt.prototype,"unit",null),e([a(l)],dt.prototype,"_defaultUnit",void 0),dt=e([n("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementView3D")],dt);const ct=dt;export{ct as default};

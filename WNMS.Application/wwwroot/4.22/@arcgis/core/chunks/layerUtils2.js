/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Error.js";import{u as a,t as r,i}from"../core/lang.js";import{L as s}from"./Logger.js";import"./ensureType.js";import{property as n}from"../core/accessorSupport/decorators/property.js";import{subclass as o}from"../core/accessorSupport/decorators/subclass.js";import{a as l,c as u,b as c}from"./generateRendererUtils.js";import{g as m,m as p,s as d,u as h,h as y,a as f,c as g,b as w}from"./statsWorker.js";import{open as F}from"../core/workers/workers.js";import{g as v,i as S,c as x,a as _}from"./utils7.js";import"../geometry.js";import{throwIfAborted as z,timeout as q,eachAlways as V}from"../core/promiseUtils.js";import{whenFalseOnce as E}from"../core/watchUtils.js";import{t as L,q as T}from"./quantizationUtils.js";import{n as b,g as C}from"../geometry/SpatialReference.js";import{i as M}from"./arcgisLayerUrl.js";import{k}from"./fieldType.js";import{isStringField as j,isNumericField as Q,isDateField as I}from"../layers/support/fieldUtils.js";import{a as O}from"./JSONSupport.js";import N,{Q as P}from"../rest/support/Query.js";import R from"../rest/support/StatisticDefinition.js";import{n as A,g as B,a as D}from"./predominanceUtils.js";import{L as G}from"./Loadable.js";import{c as J,a as U}from"./heatmapUtils.js";import{g as $,p as W,i as H,c as Z,a as Y,r as X,s as K}from"./utils8.js";import ee from"../request.js";import{D as te}from"./DataLayerSource.js";import{fromJSON as ae}from"../renderers/support/jsonUtils.js";import re from"../tasks/QueryTask.js";import ie from"../tasks/Task.js";import se from"../geometry/Point.js";import ne from"../Graphic.js";import oe from"../rest/support/FeatureSet.js";class le{async open(e){this.connection=await F("statsWorker",{strategy:"distributed",signal:e})}destroy(){var e;null==(e=this.connection)||e.close()}static getInstance(){return le.instance||(le.instance=new le),le.instance}async summaryStatistics(e,a){if(!this.connection)throw new t("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:e,features:a})}async uniqueValues(e,a){if(!this.connection)throw new t("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:e,features:a})}async classBreaks(e,a){if(!this.connection)throw new t("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:e,features:a})}async histogram(e,a){if(!this.connection)throw new t("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:e,features:a})}}let ue=class extends O{constructor(){super(...arguments),this.classificationDefinition=null,this.where=null}};e([n({type:l,json:{read:{source:"classificationDef"},write:{target:"classificationDef"}}})],ue.prototype,"classificationDefinition",void 0),e([n({type:String,json:{write:!0}})],ue.prototype,"where",void 0),ue=e([o("esri.rest.support.GenerateRendererParameters")],ue);const ce=ue;let me=class extends l{constructor(){super(...arguments),this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null,this.type="unique-value-definition"}get uniqueValueFields(){const e=[];return this.attributeField&&e.push(this.attributeField),this.attributeField2&&e.push(this.attributeField2),this.attributeField3&&e.push(this.attributeField3),e}};e([n()],me.prototype,"attributeField",void 0),e([n()],me.prototype,"attributeField2",void 0),e([n()],me.prototype,"attributeField3",void 0),e([n({json:{write:!0}})],me.prototype,"fieldDelimiter",void 0),e([n({json:{write:!0}})],me.prototype,"uniqueValueFields",null),e([n()],me.prototype,"type",void 0),me=e([o("esri.rest.support.UniqueValueDefinition")],me);const pe=me;let de=class extends G{constructor(e){super(e)}};e([n({constructOnly:!0})],de.prototype,"layer",void 0),e([n()],de.prototype,"geometryType",void 0),e([n()],de.prototype,"objectIdField",void 0),e([n()],de.prototype,"supportsSQLExpression",void 0),e([n()],de.prototype,"hasQueryEngine",void 0),e([n()],de.prototype,"minScale",void 0),e([n()],de.prototype,"maxScale",void 0),e([n()],de.prototype,"fullExtent",void 0),de=e([o("esri.smartMapping.support.adapters.LayerAdapter")],de);const he=de,ye=/_value$/i,fe=Math.LOG10E;function ge(e){return e.map((e=>e.toJSON()))}async function we(e,t,a){const r=[];if(t)for(const i of t){const t=e.getField(i);"availableFields"in a&&-1===a.availableFields.indexOf(t.name)&&r.push(t.name)}return r}function Fe(e,t){const a=e&&e.features,r=a&&a[0]&&a[0].attributes,i={};for(const e in r)i[e.replace(ye,"").toLowerCase()]=r[e];return null!=i.totalcount&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&null!=i.min&&null==i.stddev&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach((e=>{null!=i[e]&&(i[e]=Math.ceil(i[e]))})),i.min===i.max&&null!=i.min&&(i.avg=i.min,i.stddev=i.variance=0)),i}function ve(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:s}=e,n=S(s,t);let o=t;return"percent-of-total"===a?o=`((${n?x(t):t} / ${i}) * 100)`:"log"===a?o=`(log(${t}) * ${fe})`:"field"===a?o=`(${n?x(t):t} / ${r})`:"natural-log"===a?o=`(log(${n?x(t):t}))`:"square-root"===a&&(o=`(power(${n?x(t):t}, 0.5))`),o}function Se(e,t){let a;if(t=t.toLowerCase(),e)for(const r in e)if(r.toLowerCase()!==t){a=e[r];break}return a}function xe(e,t){let a;if(t=t.toLowerCase(),e)for(const r in e)if(r.toLowerCase()===t){a=e[r];break}return a}function _e(e,t,a,r,i){const s={},n="countOFExpr";e&&e.features&&e.features.forEach((e=>{const t=e.attributes,a=Se(t,n),r=xe(t,n);0!==a&&(s[a]=r)}));const o=[];return $(t,a,r).forEach(((e,t)=>{const a=(t+1).toString();o.push({minValue:e[0],maxValue:e[1],count:s.hasOwnProperty(a)?s[a]:0})})),{bins:o,minValue:t,maxValue:a,normalizationTotal:i}}function ze(e,t,a,r,i,s){const n=e&&e.features,o="countOF"+(a||"Expr"),l={};let u=!1;if(n.forEach((e=>{const t=e.attributes,r=xe(t,o);let i=a?xe(t,a):Se(t,o);null===i&&0===r&&(u=!0),(null==i||"string"==typeof i&&""===i.trim())&&(i=null),null==l[i]?l[i]={count:r,data:i}:l[i].count=l[i].count+r})),a&&u){const e=a+" is NULL";return t.queryFeatureCount({whereClause:e,view:r,signal:s}).then((e=>(e=e||0,l.null.count=l.null.count+e,qe(l,i)))).catch((()=>(z(s),qe(l,i))))}return Promise.resolve(qe(l,i))}function qe(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}function Ve(e,t){return v(e,new Date(0),t,"milliseconds").sqlExpression}function Ee(e){var t;return{viewingMode:"2d"===e.type?"map":e.viewingMode,scale:e.scale,spatialReference:null==(t=e.spatialReference)?void 0:t.toJSON()}}function Le(e,t){const a=e.map((e=>e.value)),r=t.filter((e=>-1===a.indexOf(e)));for(const t of r)e.push({value:t,count:0});e.sort(((e,a)=>t.indexOf(e.value)-t.indexOf(a.value)));for(const t of e)t.value===A&&(t.value=null);return{predominantCategoryInfos:e}}let Te=class extends ie{constructor(e){super(e),this._field=null,this.checkValueRange=null,this.gdbVersion=null,this.source=null}get parsedUrl(){const e=this._parseUrl(this.url);return e.path+="/generateRenderer",e}execute(e,t){const{classificationDefinition:a}=e,r={...e.toJSON(),f:"json"};if("esri.rest.support.ClassBreaksDefinition"===a.declaredClass?this._field=a.classificationField:this._field=a.attributeField,this.source){var i;const e={source:null==(i=this.source)?void 0:i.toJSON()};r.layer=JSON.stringify(e)}this.gdbVersion&&(r.gdbVersion=this.gdbVersion),r.classificationDef&&(r.classificationDef=JSON.stringify(r.classificationDef));let s={query:r};return(this.requestOptions||t)&&(s={...this.requestOptions,...t,...s}),ee(this.parsedUrl.path,s).then((e=>this._handleExecuteResponse(e)))}_handleExecuteResponse(e){const t=e&&e.data;if(!t)return;if(!this.checkValueRange){const e=this._processRendererJSON(t);return Promise.resolve(e)}const a=new re({url:this.url}),r=new R({statisticType:"min",onStatisticField:this._field}),i=new R({statisticType:"max",onStatisticField:this._field}),s=new N({outStatistics:[r,i]});return a.execute(s).then((e=>{const a=e.features[0].attributes;let r=null,i=null;for(const e in a)0===e.toLowerCase().indexOf("min")?r=a[e]:i=a[e];return this._processRendererJSON(t,r,i)}))}_processRendererJSON(e,t,a){if("classBreaks"===e.type){const r=ae(e);return{classBreaks:r.classBreakInfos.map(((e,i)=>(0===i&&null!=t&&(e.minValue=t),i===r.classBreakInfos.length-1&&null!=a&&(e.maxValue=a),{minValue:e.minValue,maxValue:e.maxValue,label:e.label}))),normalizationTotal:r.normalizationTotal}}return{uniqueValues:e.uniqueValueInfos.map(((r,i)=>(0===i&&null!=t&&(r.value=t),i===e.uniqueValueInfos.length-1&&null!=a&&(r.value=a),{count:r.count,value:r.value,label:r.label})))}}};e([n()],Te.prototype,"checkValueRange",void 0),e([n()],Te.prototype,"gdbVersion",void 0),e([n({type:te})],Te.prototype,"source",void 0),e([n({readOnly:!0})],Te.prototype,"parsedUrl",null),Te=e([o("esri.tasks.GenerateRendererTask")],Te);const be=Te,Ce=s.getLogger("esri.smartMapping.support.adapters.FeatureLayerAdapter");let Me=class extends he{constructor(e){super(e)}destroy(){var e;this._hasLocalSource=null,null==(e=this.workerClient)||e.destroy()}_isStatsSupportedOnService(){const e=this.layer;return!e.get("capabilities.query.supportsStatistics")||"multipatch"===this.geometryType&&!M(e.url)&&e.version<10.5?Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support statistics query")):Promise.resolve()}async _waitForLayerViewUpdate(e){if(!e)throw new t("feature-layer-adapter:insufficient-data","layerView is required to fetch the features");const a=new AbortController,r=E(e,"updating",a.signal);await q(r,5e3,a).catch((e=>{throw Ce.warn("LayerView is taking too long to update. Aborting fetch from layerView."),e}))}async _fetchFeaturesFromMemory(e,t,a,r){const i=this.layer,s="json"===r;if(this._hasLocalSource){const e=await i.queryFeatures(t);return s?ge(e.features):e.features}if(await this._waitForLayerViewUpdate(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:r}=await e.queryFeaturesJSON(t,{signal:a});return r}const n=await e.queryFeatures(t,{signal:a});return s?ge(n.features):n.features}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then((e=>e.features))}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(ge)}_fetchFeaturesForStats(e,t){return _({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then((a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t)))}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:5,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:"field"===t?a:void 0,minValue:e.minValue,maxValue:e.maxValue,signal:e.signal}).then((e=>{let t,a,r;if(e.classBreakInfos.some((e=>(e.hasAvg&&(t=e),!!t))),t){const e=t.maxValue-t.minValue;a=t.minValue+e/2,r=4*e}const i={min:e.minValue,max:e.maxValue,avg:a,stddev:r};return W(i)}))}_getSummaryStatsQuery(e,t){const{field:a,normalizationType:r,normalizationField:i,normalizationTotal:s,minValue:n,maxValue:o}=e,l=this.supportsSQLExpression&&t?Ve(this,a):e.sqlExpression,u=ve({field:a,normalizationType:r,normalizationField:i,normalizationTotal:s,layer:this}),c=l||u,d=c?f(c,n,o):null,h=m({field:a,normalizationField:i,normalizationType:r}),y=p(e.sqlWhere,h),g=p(y,d),w=H({normalizationField:i,normalizationType:r,sqlExpression:l,supportsSQLExpression:this.supportsSQLExpression,minValue:n,maxValue:o}),F=j(this.getField(a)),v=K.filter((e=>"nullcount"===e?w:!F||"count"===e)),S=this.layer.createQuery();return S.where=p(S.where,g),S.sqlFormat=l?"standard":null,S.outStatistics=v.map((e=>{const t=new R;let a=null,r=null,i=`${e}_value`;return"variance"===e?(a="var",r=c):"nullcount"===e?(a="count",r=this.layer.objectIdField,i="totalcount_value"):"median"===e?(a="percentile-continuous",r=c,t.statisticParameters={value:.5}):(a=e,r=c),t.statisticType=a,t.onStatisticField=r,t.outStatisticFieldName=i,t})),S}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),"percent-of-total"===e.normalizationType&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType));const a=this._getSummaryStatsQuery(e,t),r=Fe(await this.layer.queryFeatures(a,{signal:e.signal}),t);return W(r)}async _summaryStatsFromClientQuery(e,t){const a=this._getSummaryStatsQuery(e,t),r=Fe(await this.layer.queryFeatures(a,{signal:e.signal}),t);return W(r)}async _getNormalizationTotalFromMemory(e,a,r){const{featuresJSON:i,graphics:s,layerView:n,query:o}=a,l=(!i&&!s&&n&&"querySummaryStatistics"in n?await n.querySummaryStatistics(o,{field:e},{signal:r}):i?await this.workerClient.summaryStatistics({field:e},i):await d({attribute:{field:e},features:s})).sum;if(null==l)throw new t("feature-layer-adapter:invalid","invalid normalizationTotal");return l}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:s,features:n,signal:o}=e,l={field:r,valueExpression:i,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue};i&&a&&n&&(l.fieldType=null!=t&&t.type?k.toJSON(t.type):null,l.viewInfoParams=Ee(a));const{featuresJSON:u,graphics:c,layerView:m,query:p}=await this._processStatsFromMemoryParams(e);return"percent-of-total"===s&&null==e.normalizationTotal&&(l.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:u,graphics:c,layerView:m,query:p},o)),!u&&!c&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(p,l,{signal:o}):u?this.workerClient.summaryStatistics(l,u):d({attribute:l,features:c})}async _processStatsFromMemoryParams(e){const a=e.features;if(null!=a&&a.length){return a.length&&"declaredClass"in a[0]&&"esri.Graphic"===a[0].declaredClass?{graphics:a}:{featuresJSON:a}}const{view:r,field:i,normalizationField:s,valueExpression:n,signal:o}=e;let l=null,u=null,c=null,m=null;if(r)try{l=await r.whenLayerView(this.layer),u="querySummaryStatistics"in l&&"function"==typeof l.querySummaryStatistics}catch{u=!1}if(u)try{await this._waitForLayerViewUpdate(l);const e=await _({field:i,normalizationField:s,valueExpression:n});(await we(this,e,l)).length?u=!1:(c=this.layer.createQuery(),c.outFields=e,c.returnGeometry=!1),l.suspended&&(u=!1)}catch{u=!1}var p;if(!u&&(m=await this._fetchFeaturesForStats({field:i,valueExpression:n,normalizationField:s,view:r,signal:o},"json"),null==(p=m)||!p.length))throw new t("feature-layer-adapter:insufficient-data","No features are available to calculate statistics");return{layerView:l,query:c,featuresJSON:m}}_uvFromGenRenderer(e,t){const a=e.field,r=new pe;r.attributeField=a;const i=new ce;return i.classificationDefinition=r,this.generateRenderer(i,e.signal).then((e=>{const t={},r=this.getField(a);return e.uniqueValues.forEach((e=>{let a=e.value;null!=a&&""!==a&&("string"!=typeof a||""!==a.trim()&&"<null>"!==a.toLowerCase())||(a=null),null==t[a]?t[a]={count:e.count,data:Q(r)&&a?Number(a):a}:t[a].count=t[a].count+e.count})),{count:t}})).then((a=>Z(a,t,e.returnAllCodedValues)))}_getUVQuery(e){const t=e.field,a=e.sqlExpression,r="countOF"+(t||"Expr"),i=new R;i.statisticType="count",i.onStatisticField=a?"1":t,i.outStatisticFieldName=r;const s=this.layer.createQuery();return s.where=p(s.where,e.sqlWhere),s.sqlFormat=a?"standard":null,s.outStatistics=[i],s.groupByFieldsForStatistics=[t||a],s}_uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(this._getUVQuery(e),{signal:e.signal}))).then((t=>ze(t,this,e.field,e.view,null,e.signal))).then((a=>Z(a,t,e.returnAllCodedValues)))}async _uvFromClientQuery(e,t){const{signal:a}=e,r=this._getUVQuery(e),i=await this.layer.queryFeatures(r,{signal:a}),s=await ze(i,this,e.field,e.view,null,a);return Z(s,t,e.returnAllCodedValues)}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:s,signal:n}=e,{featuresJSON:o,graphics:l,layerView:u,query:c}=await this._processStatsFromMemoryParams(e),m={field:r,valueExpression:i,domain:t,returnAllCodedValues:s};return i&&a&&o&&(m.viewInfoParams=Ee(a)),!o&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(c,m,{signal:n}):o?this.workerClient.uniqueValues(m,o):h({attribute:m,features:l})}_calcBinsSQL(e,t,a){const r=[],i=t.length;return t.forEach(((t,s)=>{const[n,o]=t;let l=null;l=0!==s||a?s!==i-1||a?p(`${e} >= ${n}`,`${e} ${s===i-1?" <= ":" < "} ${o}`):`${e} >= ${n}`:`${e} < ${o}`,r.push("WHEN ("+l+") THEN "+(s+1))})),["CASE",r.join(" "),"ELSE 0","END"].join(" ")}_getNormalizationTotal(e,t,a){return e&&"percent-of-total"===t?this.summaryStatistics({field:e,signal:a}).then((e=>e.sum)):Promise.resolve(null)}_getQueryParamsForExpr(e,t){const a=e.valueExpression||e.sqlExpression,r=e.signal;if(!a){const{field:a,normalizationType:i,normalizationField:s}=e,n=a?this.getField(a):null,o=I(n),l={field:a,normalizationType:i,normalizationField:s,normalizationTotal:t,layer:this};return{sqlExpression:o?Ve(this,a):ve(l),sqlWhere:o?null:e.sqlWhere||m({field:a,normalizationType:i,normalizationField:s}),signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,signal:r}}_getDataRange(e,t,a){return null!=t&&null!=a?Promise.resolve({min:t,max:a}):this.summaryStatistics(e).then((e=>({min:e.min,max:e.max})))}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.signal).then((t=>{const a=this._getQueryParamsForExpr(e,t);return this._getDataRange(a,e.minValue,e.maxValue).then((r=>{const{min:i,max:s}=r,n=e.numBins||10,o=$(i,s,n),l=this._calcBinsSQL(a.sqlExpression,o,null!=e.minValue&&null!=e.maxValue),u=new R({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),c=this.layer.createQuery();return c.where=p(c.where,a.sqlWhere),c.sqlFormat="standard",c.outStatistics=[u],c.groupByFieldsForStatistics=[l],c.orderByFields=[l],this._isStatsSupportedOnService().then((()=>this.layer.queryFeatures(c,{signal:a.signal}))).then((e=>_e(e,i,s,n,t)))}))}))}_histogramForField(e){let a=null;return a=null!=e.minValue&&null!=e.maxValue?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics(e).then((e=>{if(!e.count)throw new t("feature-layer-adapter:insufficient-data","Either the layer has no features or none of the features have data for the field");return{min:e.min,max:e.max}})),a.then((t=>this._getBins({min:t.min,max:t.max},e.field,e.numBins,e.view,e.signal)))}_getBins(e,t,a=10,r,i){const{min:s,max:n,normTotal:o,excludeZerosExpr:l}=e,u=e.intervals||$(s,n,a),c=e.sqlExpr||t;return this._queryBins(u,c,l,r,i).then((e=>({bins:e.map(((e,t)=>({minValue:u[t][0],maxValue:u[t][1],count:e.value}))),minValue:s,maxValue:n,normalizationTotal:o})))}_queryBins(e,t,a,r,i){const s=[],n=e.length;for(let r=0;r<n;r++){const i=p(a,p(t+" >= "+e[r][0],null!==e[r][1]?t+(r===n-1?" <= ":" < ")+e[r][1]:""));s.push(i)}return V(s.map((e=>this.queryFeatureCount({whereClause:e,view:r,signal:i}))))}_binParamsFromGenRend(e,t){const{field:a,normalizationType:r,normalizationField:i,signal:s}=e,n=m({field:a,normalizationType:r,normalizationField:i}),o=new ce({classificationDefinition:Y({field:a,normalizationType:r,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numBins||10}),where:p(n,t)});return this.generateRenderer(o,s).then((e=>{const{normalizationTotal:t,classBreaks:s}=e;return function(e){const t=[],a=e.classBreaks,r=a[0].minValue,i=a[a.length-1].maxValue;a.forEach((e=>{t.push([e.minValue,e.maxValue])}));const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:r,max:i,intervals:t,sqlExpr:ve(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}({field:a,normalizationType:r,normalizationField:i,normalizationTotal:t,classBreaks:s,where:n,layer:this})}))}async _histogramFromMemory(e){const{view:t,field:a,signal:r}=e,{featuresJSON:i,graphics:s,layerView:n,query:o}=await this._processStatsFromMemoryParams(e),l={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&i&&(l.viewInfoParams=Ee(t)),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(l.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:i,graphics:s,layerView:n,query:o},r)),!i&&!s&&n&&"queryHistogram"in n?n.queryHistogram(o,l,{signal:r}):i?this.workerClient.histogram(l,i):y({attribute:l,features:s})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,signal:s}=e,n=m({field:t,normalizationType:a,normalizationField:r}),o=ve({field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:this}),l=f(o,e.minValue,e.maxValue),u=Y({field:t,normalizationType:a,normalizationField:r,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||5}),c=new ce;return c.classificationDefinition=u,c.where=p(n,l),this.generateRenderer(c,s).then((t=>X(t,e.classificationMethod)))}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,r=e.numClasses||5,i=[],s=(a-t)/r;for(let e=0;e<r;e++){const a=t+e*s;i.push({minValue:a,maxValue:a+s})}i[r-1].maxValue=a;const n={classBreaks:i,normalizationTotal:e.normalizationTotal},o=X(n,e.classificationMethod);return Promise.resolve(o)}async _classBreaksFromMemory(e){const{view:t,field:a,signal:r}=e,{featuresJSON:i,graphics:s,layerView:n,query:o}=await this._processStatsFromMemoryParams(e),l={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&i&&(l.viewInfoParams=Ee(t)),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(l.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:i,graphics:s,layerView:n,query:o},r)),!i&&!s&&n&&"queryClassBreaks"in n?n.queryClassBreaks(o,l,{signal:r}):i?this.workerClient.classBreaks(l,i):g({attribute:l,features:s})}async _heatmapStatsFromMemory(e,a){const{blurRadius:r,field:i,view:s,signal:n}=e,{resolution:o,size:l}=s.state,u=new P({extent:s.extent,tolerance:o}),c=this._quantizeFeatures(e.features||await this._fetchFeaturesForStats({field:i,view:s,returnGeometry:!0,signal:n}),u,s);if(!c||!c.length)return{count:0,min:null,max:null,avg:null,stddev:null};const m=function(e,t=10,a,r,i,s){const n=new Float64Array(i*s),o=J(t),l=Math.round(3*t);let u=Number.POSITIVE_INFINITY,c=Number.NEGATIVE_INFINITY,m=0,p=0,d=0,h=0;const y=U(r,a);for(const{geometry:t,attributes:a}of e){const e=t.x-l,r=t.y-l,f=Math.max(0,e),g=Math.max(0,r),w=Math.min(s,t.y+l),F=Math.min(i,t.x+l),v=+y(a);for(let t=g;t<w;t++){const a=o[t-r];for(let r=f;r<F;r++){const s=o[r-e],l=t*i+r,y=n[l];m=n[l]+=a*s*v;const f=m-y;p+=f,d+=f*f,m<u&&(u=m),m>c&&(c=m),h++}}}if(!h)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const f=(c-u)/2;return{mean:p/h,stdDev:Math.sqrt((d-p*p/h)/h),min:u,max:c,mid:f,count:h}}(c,r,a,i,l[0],l[1]);if(m)return{count:m.count,min:m.min,max:m.max,avg:m.mean,stddev:m.stdDev};throw new t("feature-layer-adapter:invalid","unable to calculate heatmap statistics")}_quantizeFeatures(e,t,r){const i=L(t),{spatialReference:s,size:n}=r,o=b(s)?C(s):null,l=o?Math.round((o.valid[1]-o.valid[0])/i.scale[0]):null;return e.map((e=>{const t=new se(a(e.geometry));return T(i,t,t,t.hasZ,t.hasM),e.geometry=o?this._wrapPoint(t,l,n[0]):t,e}))}_wrapPoint(e,t,a){return e.x<0?e.x+=t:e.x>a&&(e.x-=t),e}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}summaryStatistics(e){const{field:a,normalizationType:r,sqlExpression:i,view:s,features:n}=e,o=a?this.getField(a):null,l=I(o),u=e.valueExpression||i,c=u&&!i,m=this._hasLocalSource||n,p=s&&"3d"===s.type;if(m||c)return c||n||p?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,l);if(!this.supportsSQLExpression&&(l||u||"natural-log"===r||"square-root"===r))return Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries"));return(r&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,l)).catch((()=>(z(e.signal),this._summaryStatsFromMemory(e,o))))}uniqueValues(e){const{field:t,valueExpression:a,sqlExpression:r,signal:i}=e,s=(t?this.getField(t):null)&&this.getFieldDomain(t),n=a&&(!r||!this.supportsSQLExpression),o=this._hasLocalSource||e.features||n,l=e.view,u=l&&"3d"===l.type;return o?n||e.features||u?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s):this._uvFromServiceQuery(e,s).catch((t=>(z(i),e.field?this._uvFromGenRenderer(e,s):t))).catch((()=>(z(i),n||e.features||u?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s))))}histogram(e){const{field:a,normalizationType:r,normalizationField:i,classificationMethod:s,view:n,signal:o}=e,l=a?this.getField(a):null,u=I(l),c=e.valueExpression||e.sqlExpression,m=c&&!e.sqlExpression,p=this._hasLocalSource||e.features||m,d=this.supportsSQLExpression,h=!s||"equal-interval"===s,y=e.minValue,g=e.maxValue,w=null!=y&&null!=g,F=e.numBins||10;return p?this._histogramFromMemory(e):(c||d)&&h?d||!c&&"natural-log"!==r&&"square-root"!==r?this._histogramForExpr(e):Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries")):u&&h?Promise.reject(new t("feature-layer-adapter:not-supported","Normalization and date field are not allowed when layer does not support standardized SQL expression for queries")):r||!h?this._binParamsFromGenRend(e).then((s=>{if(!w)return this._getBins(s,a,F,n,o);if(y>s.max||g<s.min)throw new t("histogram:insufficient-data","Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(h)return this._getBins({min:y,max:g,sqlExpr:s.sqlExpr,excludeZerosExpr:s.excludeZerosExpr},a,F,n,o);{const t=ve({field:a,normalizationType:r,normalizationField:i,normalizationTotal:s.normTotal,layer:this}),l=f(t,y,g);return this._binParamsFromGenRend(e,l).then((e=>this._getBins(e,a,F,n,o)))}})):this._histogramForField(e)}classBreaks(e){const t=!1!==e.analyzeData,a=this._hasLocalSource||e.features||e.valueExpression;if(t&&a)return this._classBreaksFromMemory(e);return(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch((()=>(z(e.signal),this._classBreaksFromMemory(e))))}queryFeatureCount(e){if(this._hasLocalSource)return Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support count query"));const a=this.layer,r=a.createQuery();return r.where=p(r.where,e.whereClause),a.queryFeatureCount(r,{signal:e.signal})}generateRenderer(e,a){const r=this.layer;if(this._hasLocalSource||r.version<10.1)return Promise.reject(new t("feature-layer-adapter:not-supported","Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)"));const i=new be({url:r.parsedUrl.path,source:r.dynamicDataSource,gdbVersion:r.gdbVersion}),s=r.createQuery();return e.where=p(e.where,s.where),i.execute(e,{signal:a})}heatmapStatistics(e){const{field:t,fieldOffset:a,signal:r}=e;return(t&&null==a?this.summaryStatistics({field:t,signal:r}):Promise.resolve(null)).then((t=>{let r=a||0;if(t){const{count:e,min:a,max:i}=t;e?a===i&&0===a?r=1:i<=0?r="abs":a<0&&(r=-1.01*a):r=1}return this._heatmapStatsFromMemory(e,r).then((e=>({...e,summaryStatistics:t,fieldOffset:r})))}))}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new t("feature-layer-adapter:not-supported","Layer does not support advanced SQL expressions and standardized queries");const{fields:a,view:r,signal:i}=e,s=B(a),n=D(a);return Le((r&&this._hasLocalSource?await this._uvFromMemory({valueExpression:s,view:r,signal:i}):await this._uvFromServiceQuery({sqlExpression:n.expression,valueExpression:s,signal:i})).uniqueValueInfos,a)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:s,returnGeometry:n,signal:o}=e,l=this.layer.createQuery(),u="json"===t;l.outSpatialReference=e.spatialReference||a&&a.spatialReference,l.returnGeometry=!!n,l.outFields=s;let c=[],m=!1;if(a)try{const e=await a.whenLayerView(this.layer);if(m=!(await we(this,s,e)).length,m&&(c=await this._fetchFeaturesFromMemory(e,l,o,t),c.length&&i>0&&i<=c.length))return r(c,i,1)}catch(e){z(o)}try{if(this._hasLocalSource)return m?c:u?this._fetchFeaturesJSONFromService(l,o):this._fetchFeaturesFromService(l,o);const t=await this.queryFeatureCount({view:a,signal:o}),s=this.layer.capabilities.query.maxRecordCount;let n=-1===i?t:i;if(n=s&&n>s?s:n,t<=c.length||c.length>=s)return c;const p=a.extent.width/a.width/a.scale*4e5;if(l.maxAllowableOffset=e.resolution||p,t<=n)return u?this._fetchFeaturesJSONFromService(l,o):this._fetchFeaturesFromService(l,o);if(t<=2e4){const e=await this.layer.queryObjectIds();return l.objectIds=r(e,n,1),u?this._fetchFeaturesJSONFromService(l,o):this._fetchFeaturesFromService(l,o)}return this.layer.get("capabilities.query.supportsPagination")&&(l.num=Math.min(n,2e4)),u?this._fetchFeaturesJSONFromService(l,o):this._fetchFeaturesFromService(l,o)}catch(e){return z(o),c}}load(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.get("capabilities.query.supportsSqlExpression"),this._hasLocalSource=!t.url&&!!t.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=le.getInstance(),await this.workerClient.open(a(a(e).signal))}));return this.addResolvingPromise(t),Promise.resolve(this)}};e([n({constructOnly:!0})],Me.prototype,"layer",void 0),Me=e([o("esri.smartMapping.support.adapters.FeatureLayerAdapter")],Me);const ke=Me;function je(e){return"esri.rest.support.ClassBreaksDefinition"===e.declaredClass}function Qe(e){return"esri.rest.support.UniqueValueDefinition"===e.declaredClass}let Ie=class extends ke{constructor(e){super(e)}async _createGenerateRendererResult(e,a,r,i,s){const n=null==e?void 0:e.features;if(!(null==n?void 0:n.length))throw new t("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const o=ge(n);let l=null;if("percent-of-total"===i){if(l=(await this.workerClient.summaryStatistics({field:a},o)).sum,null==l)throw new t("csv-layer-adapter:invalid","invalid normalizationTotal")}if(je(s)){const e=(await w({field:a,normalizationType:i,normalizationField:r,normalizationTotal:l},o)).filter((e=>Number.isFinite(e)));return u({definition:s,values:e,normalizationTotal:l})}if(Qe(s)){const e=(await w({field:a},o)).filter((e=>null!=e&&"string"==typeof e&&""!==e.trim()));return c(e)}}generateRenderer(e,t){const a=e.classificationDefinition;let r=null,i=null,s=null;je(a)?(r=a.classificationField,i=a.normalizationField,s=a.normalizationType):Qe(a)&&(r=a.attributeField);const n=this.layer;return _({field:r,normalizationField:i}).then((o=>{const l=n.createQuery();return l.returnGeometry=!1,l.outFields=o,l.where=p(l.where,e.where),n.queryFeatures(l,{signal:t}).then((e=>this._createGenerateRendererResult(e,r,i,s,a)))}))}load(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=le.getInstance(),await this.workerClient.open(a(a(e).signal))}));return this.addResolvingPromise(t),Promise.resolve(this)}};Ie=e([o("esri.smartMapping.support.adapters.CSVLayerAdapter")],Ie);const Oe=Ie;let Ne=class extends ke{constructor(e){super(e)}async _waitForLayerViewUpdate(e){if(!e)throw new t("ogc-feature-layer-adapter:insufficient-data","layerView is required to fetch the features");await E(e,"updating")}async _summaryStatsFromClientQuery(e,a){const{signal:r,view:i}=e;if(!i)throw new t("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const s=this._getSummaryStatsQuery(e,a),n=await i.whenLayerView(this.layer);await E(n,"updating");const o=Fe(await n.queryFeatures(s,{signal:r}),a);return W(o)}async _uvFromClientQuery(e,a){const{signal:r,view:i}=e;if(!i)throw new t("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const s=this._getUVQuery(e),n=await i.whenLayerView(this.layer);await E(n,"updating");const o=await n.queryFeatures(s,{signal:r}),l=await ze(o,this,e.field,e.view,null,r);return Z(l,a,e.returnAllCodedValues)}summaryStatistics(e){const{field:a,valueExpression:r,sqlExpression:i,features:s,view:n}=e,o=a?this.getField(a):null,l=I(o),u=!!r,c="3d"===(null==n?void 0:n.type);if(i&&!this.supportsSQLExpression)throw new t("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return u||s||c?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,l)}uniqueValues(e){const{field:a,valueExpression:r,sqlExpression:i,features:s,view:n}=e,o=(a?this.getField(a):null)&&this.getFieldDomain(a),l=!!r,u="3d"===(null==n?void 0:n.type);if(i&&!this.supportsSQLExpression)throw new t("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return l||s||u?this._uvFromMemory(e,o):this._uvFromClientQuery(e,o)}histogram(e){const{features:a,valueExpression:r,normalizationType:i,sqlExpression:s}=e,n=a||!!r;if(s&&!this.supportsSQLExpression)throw new t("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return n||i?this._histogramFromMemory(e):this._histogramForField(e)}classBreaks(e){return!1!==e.analyzeData?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:a,view:r,signal:i}=e;if(!r)throw new t("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const s=this.layer.createQuery();s.where=p(s.where,a);const n=await r.whenLayerView(this.layer);return await E(n,"updating"),n.queryFeatureCount(s,{signal:i})}generateRenderer(e,a){throw new t("ogc-feature-layer-adapter:not-supported","OGCFeatureLayer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:r}=e,i=B(t);return Le((await this._uvFromMemory({valueExpression:i,view:a,signal:r})).uniqueValueInfos,t)}async getSampleFeatures(e,a){const{view:i,sampleSize:s,requiredFields:n,returnGeometry:o,signal:l}=e,u=this.layer.createQuery();if(u.outSpatialReference=e.spatialReference||i&&i.spatialReference,u.returnGeometry=!!o,u.outFields=n,!i)throw new t("ogc-feature-layer-adapter:not-supported","view is required to get sample features for OGCFeatureLayer");const c=await i.whenLayerView(this.layer);if((await we(this,n,c)).length)throw new t("ogc-feature-layer-adapter:not-supported","Required fields need to be passed in the outFields for OGCFeatureLayer");const m=await this._fetchFeaturesFromMemory(c,u,l,a);return r(m,s>0&&s<=m.length?s:m.length,1)}load(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.get("capabilities.query.supportsSqlExpression"),this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=le.getInstance(),await this.workerClient.open(a(a(e).signal))}));return this.addResolvingPromise(t),Promise.resolve(this)}};Ne=e([o("esri.smartMapping.support.adapters.OGCFeatureLayerAdapter")],Ne);const Pe=Ne;let Re=class extends he{constructor(e){super(e)}destroy(){var e;this._featureLayerAdapter=null,null==(e=this.workerClient)||e.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!a.length)return e;const r=this.layer.objectIdField,i=e.clone(),s=t.filter((e=>{const t=this.layer.getField(e);return-1===a.indexOf(t.name)})),n=s.some((e=>this.layer.getField(e).name===r));return i.outFields=n?s:[...s,r],i}async _fetchFeaturesFromMemory(e,a,r){if(!e)throw new t("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),s=new AbortController,n=E(i,"updating",s.signal);await q(n,5e3,s);const o=await we(this,r,i),l=this._updateQuery(a,r,o),u=(await i.queryFeatures(l)).features;return o.length?i.whenGraphicAttributes(u,o):u}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(ge)}_fetchFeaturesForStats(e,t){return _({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then((a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t)))}async _processStatsFromMemoryParams(e){const a=e.features;if(null!=a&&a.length){return a.length&&"declaredClass"in a[0]&&"esri.Graphic"===a[0].declaredClass?{graphics:a}:{featuresJSON:a}}const{view:r,field:i,normalizationField:s,valueExpression:n,signal:o}=e,l=await this._fetchFeaturesForStats({field:i,valueExpression:n,normalizationField:s,view:r,signal:o});if(null==l||!l.length)throw new t("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:l}}_generateFeatureSetForCachedHistogram(e,t=e.minimum,a=e.maximum,r){const i=[];for(let e=0;e<r;e++)i[e]=0;const s=e.counts.length,n=e.minimum,o=e.maximum;for(let l=0;l<s;l++){const u=(l+.5)/s,c=((1-u)*n+u*o-t)/(a-t)*r;c>=0&&c<=r&&(i[c===r?r-1:Math.floor(c)]+=e.counts[l])}const l=[];i.forEach(((e,t)=>{const a=new ne({attributes:{}});a.attributes.EXPR_1=t+1,a.attributes.countOFExpr=e,l.push(a)}));const u=new oe;return u.features=l,u}_getCachedStatistics(e,a){const r=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):r.queryCachedStatistics(a&&a.name,{signal:e.signal}).then((e=>{const t=e.stats,{min:a,max:r,totalValuesCount:i}=t;let{avg:s,stddev:n,sum:o,variance:l,count:u}=t;return 0===a&&0===r||(s=0===s?null:s,o=0===o?null:o,n=0===n?null:n,l=0===l?null:l,u=0===u?null:u),null==u&&(null!=o&&null!=s?u=Math.round(o/s):null!=i&&(u=i)),{avg:s,count:u,max:r,min:a,stddev:n,sum:o,variance:l}}))}async _getNormalizationTotal(e,a,r){const i=(a?await this.workerClient.summaryStatistics({field:e},a):await d({attribute:{field:e},features:r})).sum;if(null==i)throw new t("scene-layer-adapter:invalid","invalid normalizationTotal");return i}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:r,normalizationField:i,valueExpression:s}=e,{featuresJSON:n,graphics:o}=await this._processStatsFromMemoryParams(e),l={field:r,valueExpression:s,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue};return e.valueExpression&&a&&n&&(l.fieldType=null!=t&&t.type?k.toJSON(t.type):null,l.viewInfoParams=Ee(a)),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(l.normalizationTotal=await this._getNormalizationTotal(r,n,o)),n?this.workerClient.summaryStatistics(l,n):d({attribute:l,features:o})}_getCachedStatisticsForUniqueValues(e,a){const r=this.layer,i=a&&a.name,s=a&&this.getFieldDomain(e.field);return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):r.queryCachedStatistics(i,{signal:e.signal}).then((t=>{const s=t.stats;if(!s.mostFrequentValues)return Promise.reject();const n=t.labels&&t.labels.labels,o={},l=[],u="countOF"+i;s.mostFrequentValues.forEach((e=>{const t=new ne({attributes:{}});t.attributes[i]=a&&a.name!==r.objectIdField&&(Q(a)||I(a))?Number(e.value):e.value,t.attributes[u]=e.count,l.push(t)})),n&&n.forEach((e=>{o[e.value]=e.label}));const c=new oe;return c.features=l,ze(c,this,e.field,e.view,o,e.signal)})).then((t=>Z(t,s,e.returnAllCodedValues)))}async _getUniqueValuesFromMemory(e,t){const a=t&&this.getFieldDomain(e.field),{view:r,field:i,valueExpression:s,returnAllCodedValues:n}=e,o={field:i,valueExpression:s,domain:a,returnAllCodedValues:n},{featuresJSON:l,graphics:u}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&r&&l&&(o.viewInfoParams=Ee(r)),l?this.workerClient.uniqueValues(o,l):h({attribute:o,features:u})}_getCachedStatisticsForHistogram(e,a){const r=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new t("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):r.queryCachedStatistics(a&&a.name,{signal:e.signal}).then((t=>{const a=t.stats,{minValue:r,maxValue:i}=e,s=null!=r?r:a.min,n=null!=i?i:a.max,o=e.numBins||10;return _e(this._generateFeatureSetForCachedHistogram(a.histogram,s,n,o),s,n,o)}))}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:r,valueExpression:i}=e,{featuresJSON:s,graphics:n}=await this._processStatsFromMemoryParams(e),o={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(o.viewInfoParams=Ee(t)),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(o.normalizationTotal=await this._getNormalizationTotal(a,s,n)),s?this.workerClient.classBreaks(o,s):g({attribute:o,features:n})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:r,graphics:i}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&r&&(s.viewInfoParams=Ee(t)),"percent-of-total"===e.normalizationType&&null==e.normalizationTotal&&(s.normalizationTotal=await this._getNormalizationTotal(a,r,i)),r?this.workerClient.histogram(s,r):y({attribute:s,features:i})}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}summaryStatistics(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.summaryStatistics(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatistics(e,t).catch((()=>(z(e.signal),this._getSummaryStatisticsFromMemory(e,t)))):this._getSummaryStatisticsFromMemory(e,t)}uniqueValues(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.uniqueValues(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatisticsForUniqueValues(e,t).catch((()=>(z(e.signal),this._getUniqueValuesFromMemory(e,t)))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.histogram(e):this._hasCachedStatistics(t&&t.name)?this._getCachedStatisticsForHistogram(e,t).catch((()=>(z(e.signal),this._getHistogramFromMemory(e)))):this._getHistogramFromMemory(e)}classBreaks(e){const a=this.getField(e.field);return this._featureLayerAdapter?this._featureLayerAdapter.classBreaks(e):this._hasCachedStatistics(a&&a.name)?Promise.reject(new t("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,a){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,a):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new t("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:s,returnGeometry:n,signal:o}=e,l="json"===t,u=this.layer.createQuery();u.outFields=s,u.returnGeometry=!!n,u.where=null,u.num=i;let c=[];try{if(c=l?await this._fetchFeaturesJSONFromMemory(a,u,s):await this._fetchFeaturesFromMemory(a,u,s),c.length&&i>0&&i<=c.length)return r(c,i,1)}catch(e){z(o)}let m=null;if(this._featureLayerAdapter){const a={...e};delete a.view,m=await this._featureLayerAdapter.getSampleFeatures(a,t)}return m&&m.length?m:r(c,c.length,1)}load(e){const t=this.layer.load(e).then((async t=>{this.workerClient=le.getInstance(),await this.workerClient.open(a(a(e).signal));const r=t.associatedLayer;if(this.geometryType=t.geometryType,i(r)){this._featureLayerAdapter=new ke({layer:r});return this._featureLayerAdapter.load(e).then((()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent}))}this.objectIdField=t.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=t.fullExtent}));return this.addResolvingPromise(t),Promise.resolve(this)}};e([n({constructOnly:!0})],Re.prototype,"layer",void 0),Re=e([o("esri.smartMapping.support.adapters.SceneLayerAdapter")],Re);const Ae=Re;let Be=class extends Ae{constructor(e){super(e)}getField(e=""){return this.layer.fieldsIndex.get(e)}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then((()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1}));return this.addResolvingPromise(t),Promise.resolve(this)}};Be=e([o("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],Be);const De={0:{adapter:Oe,type:"csv",label:"CSVLayer"},2:{adapter:ke,type:"feature",label:"FeatureLayer"},3:{adapter:Pe,type:"ogc-feature",label:"OGCFeatureLayer"},1:{adapter:ke,type:"geojson",label:"GeoJSONLayer"},4:{adapter:Ae,type:"scene",label:"SceneLayer"},5:{adapter:Be,type:"point-cloud",label:"PointCloudLayer"},6:{adapter:ke,type:"wfs",label:"WFSLayer"}},Ge=[0,2,3,1,4,5,6],Je=[0,2,3,4,1,6];function Ue(e){return e.map((e=>De[e].label))}function $e(e,t=Ge){if(e instanceof he)return e;let a=null;return t.some((t=>{const r=e.type===De[t].type;if(r){const r=De[t].adapter;a=new r({layer:e})}return r})),a}export{$e as c,Ge as d,Je as f,Ue as g};

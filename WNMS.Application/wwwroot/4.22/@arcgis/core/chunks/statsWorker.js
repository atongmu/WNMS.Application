/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import e from"../core/Error.js";import{i as a}from"../core/lang.js";import i from"../geometry/SpatialReference.js";import{isNumericField as n,numericTypes as t}from"../layers/support/fieldUtils.js";import{b as o,i as l,d as s,e as r,p as u,f,c as m,h as d,r as c,j as p}from"./utils8.js";import{l as y}from"./arcadeOnDemand.js";let v=null;async function z(e,a){if(!a)return[];const n=e.field,t=e.valueExpression,l=e.normalizationType,s=e.normalizationField,r=e.normalizationTotal,u=[],f=e.viewInfoParams;let m=null,d=null;if(t){if(!v){const{arcadeUtils:e}=await y();v=e}m=v.createFunction(t),d=f&&v.getViewInfo({viewingMode:f.viewingMode,scale:f.scale,spatialReference:new i(f.spatialReference)})}return a.forEach((e=>{const a=e.attributes;let i;if(t){const a=v.createExecContext(e,d);i=v.executeFunction(m,a)}else a&&(i=a[n]);if(l&&isFinite(i)){const e=a&&parseFloat(a[s]);i=o(i,l,e,r)}u.push(i)})),u}function T(e){const a=e.field,i=e.normalizationType,n=e.normalizationField;let t;return"field"===i?t="(NOT "+n+" = 0)":"log"!==i&&"natural-log"!==i&&"square-root"!==i||(t=`(${a} > 0)`),t}function h(a,i){return new e(a,i)}function F(e,a,i){const n=null!=a?e+" >= "+a:"",t=null!=i?e+" <= "+i:"";let o="";return o=n&&t?I(n,t):n||t,o?"("+o+")":""}function x(e,a,i,n){let t=null;return a?a.name!==e.objectIdField&&-1!==n.indexOf(a.type)||(t=h(i,"'field' should be one of these types: "+n.join(","))):t=h(i,"'field' is not defined in the layer schema"),t}function w(e,a,i){let o;return a?a.name!==e.objectIdField&&n(a)||(o=h(i,"'field' should be one of these numeric types: "+t.join(","))):o=h(i,"'field' is not defined in the layer schema"),o}function I(e,i){let n=a(e)?e:"";return a(i)&&i&&(n=n?"("+n+") AND ("+i+")":i),n}function V(e,a,i){const n=function(e){const a=e.layer;return e.fields.filter((e=>!a.getField(e)))}({layer:e,fields:a});if(n.length)return h(i,"Unknown fields: "+n.join(", ")+". You can only use fields defined in the layer schema");const t=function(e){const a=e.layer;return e.fields.filter((e=>{const i=a.getFieldUsageInfo(e);return!i||!i.supportsStatistics}))}({layer:e,fields:a});return t.length?h(i,"Unsupported fields: "+t.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}async function g(e){const{attribute:a,features:i}=e,{normalizationType:n,normalizationField:t,minValue:o,maxValue:f,fieldType:m}=a,d=await z({field:a.field,valueExpression:a.valueExpression,normalizationType:n,normalizationField:t,normalizationTotal:a.normalizationTotal,viewInfoParams:a.viewInfoParams},i),c=l({normalizationType:n,normalizationField:t,minValue:o,maxValue:f}),p={value:.5,fieldType:m},y="esriFieldTypeString"===m?s({values:d,supportsNullCount:c,percentileParams:p}):r({values:d,minValue:o,maxValue:f,useSampleStdDev:!n,supportsNullCount:c,percentileParams:p});return u(y,"esriFieldTypeDate"===m)}async function b(e){const{attribute:a,features:i}=e,n=await z({field:a.field,valueExpression:a.valueExpression,viewInfoParams:a.viewInfoParams},i),t=f(n);return m(t,a.domain,a.returnAllCodedValues)}async function j(e){const{attribute:a,features:i}=e,{field:n,normalizationType:t,normalizationField:o,normalizationTotal:l,classificationMethod:s}=a,r=await z({field:n,valueExpression:a.valueExpression,normalizationType:t,normalizationField:o,normalizationTotal:l,viewInfoParams:a.viewInfoParams},i),u=d(r,{field:n,normalizationType:t,normalizationField:o,normalizationTotal:l,classificationMethod:s,standardDeviationInterval:a.standardDeviationInterval,numClasses:a.numClasses,minValue:a.minValue,maxValue:a.maxValue});return c(u,s)}async function E(e){const{attribute:a,features:i}=e,{field:n,normalizationType:t,normalizationField:o,normalizationTotal:l,classificationMethod:s}=a,r=await z({field:n,valueExpression:a.valueExpression,normalizationType:t,normalizationField:o,normalizationTotal:l,viewInfoParams:a.viewInfoParams},i);return p(r,{field:n,normalizationType:t,normalizationField:o,normalizationTotal:l,classificationMethod:s,standardDeviationInterval:a.standardDeviationInterval,numBins:a.numBins,minValue:a.minValue,maxValue:a.maxValue})}const P=Object.freeze({__proto__:null,summaryStatistics:g,uniqueValues:b,classBreaks:j,histogram:E});export{F as a,z as b,j as c,w as d,x as e,P as f,T as g,E as h,I as m,g as s,b as u,V as v};

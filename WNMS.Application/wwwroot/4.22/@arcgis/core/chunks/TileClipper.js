/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{g as t}from"./assets.js";import{h as i}from"../core/lang.js";import{k as s}from"./definitions.js";import{b as h}from"./GeometryUtils2.js";class n{constructor(t,i){this.x=t,this.y=i}clone(){return new n(this.x,this.y)}equals(t,i){return t===this.x&&i===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,i){this.x=t,this.y=i}normalize(){const t=this.x,i=this.y,s=Math.sqrt(t*t+i*i);this.x/=s,this.y/=s}rightPerpendicular(){const t=this.x;this.x=this.y,this.y=-t}move(t,i){this.x+=t,this.y+=i}assign(t){this.x=t.x,this.y=t.y}assignAdd(t,i){this.x=t.x+i.x,this.y=t.y+i.y}assignSub(t,i){this.x=t.x-i.x,this.y=t.y-i.y}rotate(t,i){const s=this.x,h=this.y;this.x=s*t-h*i,this.y=s*i+h*t}scale(t){this.x*=t,this.y*=t}length(){const t=this.x,i=this.y;return Math.sqrt(t*t+i*i)}static distance(t,i){const s=i.x-t.x,h=i.y-t.y;return Math.sqrt(s*s+h*h)}static add(t,i){return new n(t.x+i.x,t.y+i.y)}static sub(t,i){return new n(t.x-i.x,t.y-i.y)}}let e=null,l=null;async function x(){return e||(e=async function(){const s=i("esri-csp-restrictions")?await import("./libtess-asm.js").then((t=>t.l)):await import("./libtess.js").then((t=>t.l));l=await s.load({locateFile:()=>t("esri/core/libs/libtess/libtess.wasm")})}()),e}function a(t,i){const s=Math.max(t.length,128e3);return l.triangulate(t,i,s)}class y{constructor(t,i,s){this.ratio=t,this.x=i,this.y=s}}class r{constructor(t,i,h,n=8,e=8){this.lines=[],this.starts=[],this.validateTessellation=!0,this.pixelRatio=n,this.pixelMargin=e,this.tileSize=s*n,this.dz=t,this.yPos=i,this.xPos=h}setPixelMargin(t){t!==this.pixelMargin&&(this.pixelMargin=t,this.setExtent(this._extent))}setExtent(t){this._extent=t,this.finalRatio=this.tileSize/t*(1<<this.dz);let i=this.pixelRatio*this.pixelMargin;i/=this.finalRatio;const s=t>>this.dz;i>s&&(i=s),this.margin=i,this.xmin=s*this.xPos-i,this.ymin=s*this.yPos-i,this.xmax=this.xmin+s+2*i,this.ymax=this.ymin+s+2*i}reset(t){this.type=t,this.lines=[],this.starts=[],this.line=null,this.start=0}moveTo(t,i){this._pushLine(),this._prevIsIn=this._isIn(t,i),this._moveTo(t,i,this._prevIsIn),this._prevPt=new n(t,i),this._firstPt=new n(t,i),this._dist=0}lineTo(t,i){const s=this._isIn(t,i),h=new n(t,i),e=n.distance(this._prevPt,h);let l,x,a,r,o,m,u,p;if(s)this._prevIsIn?this._lineTo(t,i,!0):(l=this._prevPt,x=h,a=this._intersect(x,l),this.start=this._dist+e*(1-this._r),this._lineTo(a.x,a.y,!0),this._lineTo(x.x,x.y,!0));else if(this._prevIsIn)x=this._prevPt,l=h,a=this._intersect(x,l),this._lineTo(a.x,a.y,!0),this._lineTo(l.x,l.y,!1);else{const t=this._prevPt,i=h;if(t.x<=this.xmin&&i.x<=this.xmin||t.x>=this.xmax&&i.x>=this.xmax||t.y<=this.ymin&&i.y<=this.ymin||t.y>=this.ymax&&i.y>=this.ymax)this._lineTo(i.x,i.y,!1);else{const s=[];if((t.x<this.xmin&&i.x>this.xmin||t.x>this.xmin&&i.x<this.xmin)&&(r=(this.xmin-t.x)/(i.x-t.x),p=t.y+r*(i.y-t.y),p<=this.ymin?m=!1:p>=this.ymax?m=!0:s.push(new y(r,this.xmin,p))),(t.x<this.xmax&&i.x>this.xmax||t.x>this.xmax&&i.x<this.xmax)&&(r=(this.xmax-t.x)/(i.x-t.x),p=t.y+r*(i.y-t.y),p<=this.ymin?m=!1:p>=this.ymax?m=!0:s.push(new y(r,this.xmax,p))),(t.y<this.ymin&&i.y>this.ymin||t.y>this.ymin&&i.y<this.ymin)&&(r=(this.ymin-t.y)/(i.y-t.y),u=t.x+r*(i.x-t.x),u<=this.xmin?o=!1:u>=this.xmax?o=!0:s.push(new y(r,u,this.ymin))),(t.y<this.ymax&&i.y>this.ymax||t.y>this.ymax&&i.y<this.ymax)&&(r=(this.ymax-t.y)/(i.y-t.y),u=t.x+r*(i.x-t.x),u<=this.xmin?o=!1:u>=this.xmax?o=!0:s.push(new y(r,u,this.ymax))),0===s.length)o?m?this._lineTo(this.xmax,this.ymax,!0):this._lineTo(this.xmax,this.ymin,!0):m?this._lineTo(this.xmin,this.ymax,!0):this._lineTo(this.xmin,this.ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this.start=this._dist+e*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this.start=this._dist+e*s[0].ratio;for(let t=0;t<s.length;t++)this._lineTo(s[t].x,s[t].y,!0)}this._lineTo(i.x,i.y,!1)}}this._dist+=e,this._prevIsIn=s,this._prevPt=h}close(){if(this.line.length>2){const t=this._firstPt,i=this._prevPt;t.x===i.x&&t.y===i.y||this.lineTo(t.x,t.y);const s=this.line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(t=!0){return this._pushLine(),0===this.lines.length?null:(3===this.type&&t&&m.simplify(this.tileSize,this.margin*this.finalRatio,this.lines),this.lines)}resultWithStarts(){if(2!==this.type)throw new Error("Only valid for lines");this._pushLine();const t=this.lines,i=t.length;if(0===i)return null;const s=[];for(let h=0;h<i;h++)s.push({line:t[h],start:this.starts[h]||0});return s}_isIn(t,i){return t>=this.xmin&&t<=this.xmax&&i>=this.ymin&&i<=this.ymax}_intersect(t,i){let s,h,e;if(i.x>=this.xmin&&i.x<=this.xmax)h=i.y<=this.ymin?this.ymin:this.ymax,e=(h-t.y)/(i.y-t.y),s=t.x+e*(i.x-t.x);else if(i.y>=this.ymin&&i.y<=this.ymax)s=i.x<=this.xmin?this.xmin:this.xmax,e=(s-t.x)/(i.x-t.x),h=t.y+e*(i.y-t.y);else{h=i.y<=this.ymin?this.ymin:this.ymax,s=i.x<=this.xmin?this.xmin:this.xmax;const n=(s-t.x)/(i.x-t.x),l=(h-t.y)/(i.y-t.y);n<l?(e=n,h=t.y+n*(i.y-t.y)):(e=l,s=t.x+l*(i.x-t.x))}return this._r=e,new n(s,h)}_pushLine(){this.line&&(1===this.type?this.line.length>0&&(this.lines.push(this.line),this.starts.push(this.start)):2===this.type?this.line.length>1&&(this.lines.push(this.line),this.starts.push(this.start)):3===this.type&&this.line.length>3&&(this.lines.push(this.line),this.starts.push(this.start))),this.line=[],this.start=0}_moveTo(t,i,s){3!==this.type?s&&(t=Math.round((t-(this.xmin+this.margin))*this.finalRatio),i=Math.round((i-(this.ymin+this.margin))*this.finalRatio),this.line.push(new n(t,i))):(s||(t<this.xmin&&(t=this.xmin),t>this.xmax&&(t=this.xmax),i<this.ymin&&(i=this.ymin),i>this.ymax&&(i=this.ymax)),t=Math.round((t-(this.xmin+this.margin))*this.finalRatio),i=Math.round((i-(this.ymin+this.margin))*this.finalRatio),this.line.push(new n(t,i)),this._is_h=!1,this._is_v=!1)}_lineTo(t,i,s){let h,e;if(3!==this.type)if(s){if(t=Math.round((t-(this.xmin+this.margin))*this.finalRatio),i=Math.round((i-(this.ymin+this.margin))*this.finalRatio),this.line.length>0&&(h=this.line[this.line.length-1],h.equals(t,i)))return;this.line.push(new n(t,i))}else this.line&&this.line.length>0&&this._pushLine();else if(s||(t<this.xmin&&(t=this.xmin),t>this.xmax&&(t=this.xmax),i<this.ymin&&(i=this.ymin),i>this.ymax&&(i=this.ymax)),t=Math.round((t-(this.xmin+this.margin))*this.finalRatio),i=Math.round((i-(this.ymin+this.margin))*this.finalRatio),this.line&&this.line.length>0){h=this.line[this.line.length-1];const s=h.x===t,l=h.y===i;if(s&&l)return;this._is_h&&s||this._is_v&&l?(h.x=t,h.y=i,e=this.line[this.line.length-2],e.x===t&&e.y===i?(this.line.pop(),this.line.length<=1?(this._is_h=!1,this._is_v=!1):(e=this.line[this.line.length-2],this._is_h=e.x===t,this._is_v=e.y===i)):(this._is_h=e.x===t,this._is_v=e.y===i)):(this.line.push(new n(t,i)),this._is_h=s,this._is_v=l)}else this.line.push(new n(t,i))}}class o{setExtent(t){this._ratio=4096===t?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this.lines=[],this.line=null}moveTo(t,i){this.line&&this.lines.push(this.line),this.line=[];const s=this._ratio;this.line.push(new n(t*s,i*s))}lineTo(t,i){const s=this._ratio;this.line.push(new n(t*s,i*s))}close(){const t=this.line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this.line&&this.lines.push(this.line),0===this.lines.length?null:this.lines}}class m{static simplify(t,i,s){if(!s)return;const h=-i,n=t+i,e=-i,l=t+i,x=[],a=[],y=s.length;for(let t=0;t<y;++t){const i=s[t];if(!i||i.length<2)continue;let y,r=i[0];const o=i.length;for(let s=1;s<o;++s)y=i[s],r.x===y.x&&(r.x<=h&&(r.y>y.y?(x.push(t),x.push(s),x.push(0),x.push(-1)):(a.push(t),a.push(s),a.push(0),a.push(-1))),r.x>=n&&(r.y<y.y?(x.push(t),x.push(s),x.push(1),x.push(-1)):(a.push(t),a.push(s),a.push(1),a.push(-1)))),r.y===y.y&&(r.y<=e&&(r.x<y.x?(x.push(t),x.push(s),x.push(2),x.push(-1)):(a.push(t),a.push(s),a.push(2),a.push(-1))),r.y>=l&&(r.x>y.x?(x.push(t),x.push(s),x.push(3),x.push(-1)):(a.push(t),a.push(s),a.push(3),a.push(-1)))),r=y}if(0===x.length||0===a.length)return;m.fillParent(s,a,x),m.fillParent(s,x,a);const r=[];m.calcDeltas(r,a,x),m.calcDeltas(r,x,a),m.addDeltas(r,s)}static fillParent(t,i,s){const n=s.length,e=i.length;for(let l=0;l<e;l+=4){const e=i[l],x=i[l+1],a=i[l+2],y=t[e][x-1],r=t[e][x];let o=8092,m=-1;for(let i=0;i<n;i+=4){if(s[i+2]!==a)continue;const n=s[i],e=s[i+1],l=t[n][e-1],x=t[n][e];switch(a){case 0:case 1:if(h(y.y,l.y,x.y)&&h(r.y,l.y,x.y)){const t=Math.abs(x.y-l.y);t<o&&(o=t,m=i)}break;case 2:case 3:if(h(y.x,l.x,x.x)&&h(r.x,l.x,x.x)){const t=Math.abs(x.x-l.x);t<o&&(o=t,m=i)}}}i[l+3]=m}}static calcDeltas(t,i,s){const h=i.length;for(let n=0;n<h;n+=4){const h=[],e=m.calcDelta(n,i,s,h);t.push(i[n]),t.push(i[n+1]),t.push(i[n+2]),t.push(e)}}static calcDelta(t,i,s,h){const n=i[t+3];if(-1===n)return 0;const e=h.length;return e>1&&h[e-2]===n?0:(h.push(n),m.calcDelta(n,s,i,h)+1)}static addDeltas(t,i){const s=t.length;let h=0;for(let i=0;i<s;i+=4){const s=t[i+3];s>h&&(h=s)}for(let n=0;n<s;n+=4){const s=i[t[n]],e=t[n+1],l=h-t[n+3];switch(t[n+2]){case 0:s[e-1].x-=l,s[e].x-=l,1===e&&(s[s.length-1].x-=l),e===s.length-1&&(s[0].x-=l);break;case 1:s[e-1].x+=l,s[e].x+=l,1===e&&(s[s.length-1].x+=l),e===s.length-1&&(s[0].x+=l);break;case 2:s[e-1].y-=l,s[e].y-=l,1===e&&(s[s.length-1].y-=l),e===s.length-1&&(s[0].y-=l);break;case 3:s[e-1].y+=l,s[e].y+=l,1===e&&(s[s.length-1].y+=l),e===s.length-1&&(s[0].y+=l)}}}}export{n as P,o as S,r as T,x as l,a as t};

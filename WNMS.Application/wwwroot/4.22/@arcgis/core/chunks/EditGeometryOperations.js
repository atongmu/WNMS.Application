/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{E as e}from"./Evented.js";import{i as t,e as i,b as s,u as r,g as n}from"../core/lang.js";import o from"../geometry/Polygon.js";import h from"../geometry/Polyline.js";import{m as a,d as c,c as d,g as l,h as p,j as u,r as g,p as f}from"./vec2.js";import{c as m,f as x,b as y}from"./vec2f64.js";import{k as v,b as V,h as _,E,U as w,m as T,V as D,w as P,L as R,d as z,W as b,a as M,n as Z,g as G,f as C,X as O,o as X}from"./mathUtils.js";import{c as k,f as S,b as N}from"./vec4f64.js";import A from"../geometry/Point.js";import{g as I}from"../geometry/SpatialReference.js";import{c as B,e as j,s as Y,a as H,g as q,n as L}from"./plane.js";import{a as U,p as F}from"./sphere.js";import{i as W}from"./geometry2dUtils.js";class J{constructor(e){this.spatialReference=e}createVector(){return this.tag(m())}pointToVector(e){return this.tag(x(e.x,e.y))}arrayToVector(e){return this.tag(x(e[0],e[1]))}vectorToArray(e){return[e[0],e[1]]}pointToArray(e){return[e.x,e.y]}vectorToPoint(e,t=new A){return t.x=e[0],t.y=e[1],t.z=void 0,t.m=void 0,t.spatialReference=this.spatialReference,t}arrayToPoint(e,t=new A){return t.x=e[0],t.y=e[1],t.z=void 0,t.m=void 0,t.spatialReference=this.spatialReference,t}vectorToDehydratedPoint(e,t={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"}){return t.x=e[0],t.y=e[1],t.z=void 0,t.m=void 0,t.hasZ=!1,t.hasM=!1,t.spatialReference=this.spatialReference,t}lerp(e,t,i,s){return a(s,e,t,i)}addDelta(e,t,i){e[0]+=t,e[1]+=i}distance(e,t){return c(e,t)}getZ(e,t){return t}hasZ(){return!1}getM(e,t){return t}hasM(){return!1}clone(e){return this.tag(y(e))}copy(e,t){return d(t,e)}fromXYZ(e){return this.tag(x(e[0],e[1]))}toXYZ(e,t=0){return v(e[0],e[1],t)}tag(e){return e}}class K{constructor(e,t){this.valueType=e,this.spatialReference=t}createVector(){return this.tag(V())}pointToVector(e){return this.tag(v(e.x,e.y,0===this.valueType?e.z:e.m))}arrayToVector(e){return this.tag(v(e[0],e[1],e[2]||0))}vectorToArray(e){return[e[0],e[1],e[2]]}pointToArray(e){return 0===this.valueType?[e.x,e.y,e.z]:[e.x,e.y,e.m]}vectorToPoint(e,t=new A){return t.x=e[0],t.y=e[1],t.z=0===this.valueType?e[2]:void 0,t.m=1===this.valueType?e[2]:void 0,t.spatialReference=this.spatialReference,t}arrayToPoint(e,t=new A){return t.x=e[0],t.y=e[1],t.z=0===this.valueType?e[2]:void 0,t.m=1===this.valueType?e[2]:void 0,t.spatialReference=this.spatialReference,t}vectorToDehydratedPoint(e,t={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"}){const i=0===this.valueType,s=1===this.valueType;return t.x=e[0],t.y=e[1],t.z=i?e[2]:void 0,t.m=s?e[2]:void 0,t.hasZ=i,t.hasM=s,t.spatialReference=this.spatialReference,t}lerp(e,t,i,s){return _(s,e,t,i)}addDelta(e,t,i,s){e[0]+=t,e[1]+=i,0===this.valueType&&(e[2]+=s)}distance(e,t){return 0===this.valueType?E(e,t):c(e,t)}getZ(e,t){return 0===this.valueType?e[2]:t}hasZ(){return 0===this.valueType}getM(e,t){return 1===this.valueType?e[2]:t}hasM(){return 1===this.valueType}clone(e){return this.tag(w(e))}copy(e,t){return T(t,e)}fromXYZ(e,t=0,i=0){return this.tag(v(e[0],e[1],0===this.valueType?e.length>2?e[2]:t:i))}toXYZ(e,t=0){return this.tag(v(e[0],e[1],0===this.valueType?e[2]:t))}tag(e){return e}}class Q{constructor(e){this.spatialReference=e}createVector(){return this.tag(k())}pointToVector(e){return this.tag(S(e.x,e.y,e.z,e.m))}arrayToVector(e){return this.tag(S(e[0],e[1],e[2]||0,e[3]||0))}vectorToArray(e){return[e[0],e[1],e[2],e[3]]}pointToArray(e){return[e.x,e.y,e.z,e.m]}vectorToPoint(e,t=new A){return t.x=e[0],t.y=e[1],t.z=e[2],t.m=e[3],t.spatialReference=this.spatialReference,t}arrayToPoint(e,t=new A){return t.x=e[0],t.y=e[1],t.z=e[2],t.m=e[3],t.spatialReference=this.spatialReference,t}vectorToDehydratedPoint(e,t={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"}){return t.x=e[0],t.y=e[1],t.z=e[2],t.m=e[3],t.hasZ=!0,t.hasM=!0,t.spatialReference=this.spatialReference,t}lerp(e,t,i,s){return D(s,e,t,i)}addDelta(e,t,i,s){e[0]+=t,e[1]+=i,e[2]+=s}distance(e,t){return E(e,t)}getZ(e){return e[2]}hasZ(){return!0}getM(e){return e[3]}hasM(){return!0}clone(e){return this.tag(N(e))}copy(e,t){return P(t,e)}fromXYZ(e,t=0,i=0){return this.tag(S(e[0],e[1],e.length>2?e[2]:t,i))}toXYZ(e){return v(e[0],e[1],e[2])}tag(e){return e}}function $(e,t,i){return e&&t?new Q(i):t?new K(1,i):e?new K(0,i):new J(i)}class ee{constructor(e){this.component=e,this.leftEdge=null,this.rightEdge=null,this.type="vertex",this.index=null}get pos(){return this._pos}set pos(e){this._pos=e,this.component.unnormalizeVertexPositions()}}class te{constructor(e,t,i){this.component=e,this.leftVertex=t,this.rightVertex=i,this.type="edge",t.rightEdge=this,i.leftEdge=this}}class ie{constructor(e,t){this.spatialReference=e,this.viewingMode=t,this.vertices=[],this.edges=[]}unnormalizeVertexPositions(){this.vertices.length<=1||function(e,t){if(!t.supported)return;let i=1/0,s=-1/0;const r=t.upperBoundX-t.lowerBoundX;e.forEach((e=>{let n=e.pos[0];for(;n<t.lowerBoundX;)n+=r;for(;n>t.upperBoundX;)n-=r;i=Math.min(i,n),s=Math.max(s,n),e.pos[0]=n}));const n=s-i;r-n<n&&e.forEach((e=>{e.pos[0]<0&&(e.pos[0]+=r)}))}(this.vertices,function(e,t){const i=I(e);return 1===t&&i?{supported:!0,lowerBoundX:i.valid[0],upperBoundX:i.valid[1]}:{supported:!1,lowerBoundX:null,upperBoundX:null}}(this.spatialReference,this.viewingMode))}updateVertexIndex(e,t){if(0===this.vertices.length)return;const i=this.vertices[0];let s=null,r=e,n=t;do{s=r,s.index=n++,r=s.rightEdge?s.rightEdge.rightVertex:null}while(null!=r&&r!==i);s.leftEdge&&s!==this.vertices[this.vertices.length-1]&&this.swapVertices(this.vertices.indexOf(s),this.vertices.length-1)}getFirstVertex(){return 0===this.vertices.length?null:this.vertices[0]}getLastVertex(){return 0===this.vertices.length?null:this.vertices[this.vertices.length-1]}isClosed(){return this.vertices.length>2&&null!==this.vertices[0].leftEdge}swapVertices(e,t){const i=this.vertices[e];this.vertices[e]=this.vertices[t],this.vertices[t]=i}iterateVertices(e){if(0===this.vertices.length)return;const i=this.vertices[0];let s=i;do{e(s,s.index),s=t(s.rightEdge)?s.rightEdge.rightVertex:null}while(s!==i&&null!=s)}}class se extends e{constructor(e,t,i){super(),this.type=e,this.coordinateHelper=t,this.viewingMode=i,this._geometry=null,this.dirty=!0,this.components=[]}get geometry(){if(this.dirty){switch(this.type){case"point":this._geometry=this.toPoint();break;case"polyline":this._geometry=this.toPolyline();break;case"polygon":this._geometry=this.toPolygon()}this.dirty=!1}return this._geometry}get spatialReference(){return this.coordinateHelper.spatialReference}notifyChanges(e){this.dirty=!0,this.emit("change",e)}toPoint(){return 0===this.components.length||0===this.components[0].vertices.length?null:this.coordinateHelper.vectorToPoint(this.components[0].vertices[0].pos)}toPolyline(){const e=[],t=this.coordinateHelper.vectorToArray;return this.components.forEach(((i,s)=>{const r=[];let n=i.vertices.find((e=>null==e.leftEdge));const o=n;do{r.push(t(n.pos)),n=n.rightEdge?n.rightEdge.rightVertex:null}while(n&&n!==o);e.push(r)})),new h({paths:e,spatialReference:this.spatialReference,hasZ:this.coordinateHelper.hasZ(),hasM:this.coordinateHelper.hasM()})}toPolygon(){const e=[],i=this.coordinateHelper.vectorToArray;return this.components.forEach(((s,r)=>{const n=[],o=s.vertices[0];let h=o;const a=h;do{n.push(i(h.pos)),h=t(h.rightEdge)?h.rightEdge.rightVertex:null}while(h&&h!==a);s.isClosed()&&n.push(i(o.pos)),e.push(n)})),new o({rings:e,spatialReference:this.spatialReference,hasZ:this.coordinateHelper.hasZ(),hasM:this.coordinateHelper.hasM()})}static fromGeometry(e,t){const s=e.spatialReference,r=$(e.hasZ,e.hasM,s),n=new se(e.type,r,t);switch(e.type){case"polygon":{const o=e.rings;for(let e=0;e<o.length;++e){const h=o[e],a=new ie(s,t),c=h.length>2&&i(h[0],h[h.length-1]),d=c?h.length-1:h.length;for(let e=0;e<d;++e){const t=r.arrayToVector(h[e]),i=new ee(a);a.vertices.push(i),i.pos=t,i.index=e}const l=a.vertices.length-1;for(let e=0;e<l;++e){const t=a.vertices[e],i=a.vertices[e+1],s=new te(a,t,i);a.edges.push(s)}if(c){const e=new te(a,a.vertices[a.vertices.length-1],a.vertices[0]);a.edges.push(e)}n.components.push(a)}break}case"polyline":for(const i of e.paths){const e=new ie(s,t),o=i.length;for(let t=0;t<o;++t){const s=r.arrayToVector(i[t]),n=new ee(e);e.vertices.push(n),n.pos=s,n.index=t}const h=e.vertices.length-1;for(let t=0;t<h;++t){const i=e.vertices[t],s=e.vertices[t+1],r=new te(e,i,s);e.edges.push(r)}n.components.push(e)}break;case"point":{const i=new ie(s,t),o=new ee(i);o.index=0,o.pos=r.pointToVector(e),i.vertices.push(o),n.components.push(i);break}}return n}}class re{constructor(e,t,i){this.editGeometry=e,this.component=t,this.pos=i,this.addedVertex=null,this.originalEdge=null,this.left=null,this.right=null}apply(){let e="redo";s(this.addedVertex)&&(e="apply",this.addedVertex=new ee(this.component));const i=this.component.getLastVertex();if(s(i))this.component.vertices.push(this.addedVertex),this.addedVertex.pos=this.pos,this.addedVertex.index=0;else{let e=null;i.rightEdge&&(this.originalEdge=i.rightEdge,e=this.originalEdge.rightVertex,this.component.edges.splice(this.component.edges.indexOf(this.originalEdge),1)),this.component.vertices.push(this.addedVertex),this.addedVertex.pos=this.pos,s(this.left)&&(this.left=new te(this.component,i,this.addedVertex)),this.component.edges.push(this.left),i.rightEdge=this.left,t(this.originalEdge)&&t(e)&&(s(this.right)&&(this.right=new te(this.component,this.addedVertex,e)),this.component.edges.push(this.right),e.leftEdge=this.right),this.component.updateVertexIndex(this.addedVertex,i.index+1)}this.editGeometry.notifyChanges({operation:e,addedVertices:[this.addedVertex]})}undo(){if(s(this.addedVertex))return null;this.component.vertices.splice(this.component.vertices.indexOf(this.addedVertex),1),t(this.left)&&(this.component.edges.splice(this.component.edges.indexOf(this.left),1),this.left.leftVertex.rightEdge=null),t(this.right)&&(this.component.edges.splice(this.component.edges.indexOf(this.right),1),this.right.rightVertex.leftEdge=null),t(this.originalEdge)&&(this.component.edges.push(this.originalEdge),this.originalEdge.leftVertex.rightEdge=this.originalEdge,this.originalEdge.rightVertex.leftEdge=this.originalEdge),t(this.left)?this.component.updateVertexIndex(this.left.leftVertex,this.left.leftVertex.index):this.component.updateVertexIndex(this.addedVertex,0),this.editGeometry.notifyChanges({operation:"undo",removedVertices:[this.addedVertex]})}accumulate(){return!1}}class ne{constructor(e,t,i){this.editGeometry=e,this.vertices=t,this.operation=i,this.undone=!1}apply(){this.vertices.forEach((e=>this.operation.apply(e))),this.editGeometry.components.forEach((e=>e.unnormalizeVertexPositions())),this.editGeometry.notifyChanges({operation:this.undone?"redo":"apply",updatedVertices:this.vertices})}undo(){this.vertices.forEach((e=>this.operation.undo(e))),this.editGeometry.notifyChanges({operation:"undo",updatedVertices:this.vertices}),this.undone=!0}canAccumulate(e){if(this.undone||e.vertices.length!==this.vertices.length)return!1;for(let t=0;t<e.vertices.length;++t)if(e.vertices[t]!==this.vertices[t])return!1;return this.operation.canAccumulate(e.operation)}accumulate(e){return!!(e instanceof ne&&this.canAccumulate(e))&&(this.vertices.forEach((t=>this.operation.accumulate(t,e.operation))),this.operation.accumulateParams(e.operation),this.editGeometry.components.forEach((e=>e.unnormalizeVertexPositions())),this.editGeometry.notifyChanges({operation:"apply",updatedVertices:this.vertices}),!0)}}class oe{constructor(e,t,i=0){this.editGeometry=e,this.vertices=t,this.minNumberOfVertices=i,this.removedVertices=null}apply(){let e="redo";null==this.removedVertices?(this.removedVertices=[],this.vertices.forEach((e=>{const i=this._removeVertex(e);t(i)&&this.removedVertices.push(i)})),e="apply"):this.removedVertices.forEach((e=>{this._removeVertex(e.removedVertex)})),this.editGeometry.notifyChanges({operation:e,removedVertices:this.vertices})}undo(){this.removedVertices.forEach((e=>{this._undoRemoveVertex(e)})),this.editGeometry.notifyChanges({operation:"undo",addedVertices:this.vertices})}accumulate(){return!1}_removeVertex(e){const t=e.component;if(t.vertices.length<=this.minNumberOfVertices)return null;const i={removedVertex:e,createdEdge:null},s=e.leftEdge,r=e.rightEdge;return t.vertices.splice(t.vertices.indexOf(e),1),s&&(t.edges.splice(t.edges.indexOf(s),1),s.leftVertex.rightEdge=null),r&&(t.edges.splice(t.edges.indexOf(r),1),r.rightVertex.leftEdge=null),0===e.index&&r&&this.vertices.length>0&&t.swapVertices(t.vertices.indexOf(r.rightVertex),0),s&&r&&(i.createdEdge=new te(t,s.leftVertex,r.rightVertex),t.edges.push(i.createdEdge)),r&&t.updateVertexIndex(r.rightVertex,r.rightVertex.index-1),i}_undoRemoveVertex(e){const t=e.removedVertex,i=e.removedVertex.component,s=t.leftEdge,r=t.rightEdge;e.createdEdge&&i.edges.splice(i.edges.indexOf(e.createdEdge),1),i.vertices.push(t),s&&(i.edges.push(s),s.leftVertex.rightEdge=s),r&&(i.edges.push(r),r.rightVertex.leftEdge=r),i.updateVertexIndex(t,t.index)}}class he{constructor(e,t,i){this.editGeometry=e,this.edge=t,this.t=i,this.createdVertex=null,this.left=null,this.right=null}apply(){let e="redo";const t=this.edge,i=t.component,r=t.leftVertex,n=t.rightVertex;i.edges.splice(i.edges.indexOf(t),1),s(this.createdVertex)&&(e="apply",this.createdVertex=new ee(t.component)),i.vertices.push(this.createdVertex),this.createdVertex.pos=this.editGeometry.coordinateHelper.lerp(t.leftVertex.pos,t.rightVertex.pos,this.t,this.editGeometry.coordinateHelper.createVector()),s(this.left)&&(this.left=new te(i,r,this.createdVertex)),this.left.leftVertex.leftEdge?i.edges.push(this.left):i.edges.unshift(this.left),r.rightEdge=this.left,s(this.right)&&(this.right=new te(i,this.createdVertex,n)),i.edges.push(this.right),n.leftEdge=this.right,i.updateVertexIndex(this.createdVertex,r.index+1),this.editGeometry.notifyChanges({operation:e,addedVertices:[this.createdVertex]})}undo(){if(s(this.createdVertex)||s(this.left)||s(this.right))return null;const e=this.edge,t=e.component,i=this.createdVertex.leftEdge,r=this.createdVertex.rightEdge,n=i.leftVertex,o=r.rightVertex;t.vertices.splice(t.vertices.indexOf(this.createdVertex),1),t.edges.splice(t.edges.indexOf(this.left),1),t.edges.splice(t.edges.indexOf(this.right),1),this.edge.leftVertex.leftEdge?t.edges.push(this.edge):t.edges.unshift(this.edge),n.rightEdge=e,o.leftEdge=e,t.updateVertexIndex(n,n.index),this.editGeometry.notifyChanges({operation:"undo",removedVertices:[this.createdVertex]})}accumulate(){return!1}}class ae{constructor(e,t,i){this.editGeometry=e,this.vertex=t,this.pos=i}apply(){const e=s(this.originalPosition);e&&(this.originalPosition=this.vertex.pos),this._apply(e?"apply":"redo")}undo(){this.vertex.pos=r(this.originalPosition),this.editGeometry.notifyChanges({operation:"undo",updatedVertices:[this.vertex]})}accumulate(e){return e instanceof ae&&e.vertex===this.vertex&&(this.pos=e.pos,this._apply("apply"),!0)}_apply(e){this.vertex.pos=this.pos,this.editGeometry.components.forEach((e=>e.unnormalizeVertexPositions())),this.editGeometry.notifyChanges({operation:e,updatedVertices:[this.vertex]})}}class ce{constructor(e,t){this.editGeometry=e,this.component=t,this.createdEdge=null}apply(){let e="redo";if(s(this.createdEdge)){e="apply";const t=this.component.getFirstVertex(),i=this.component.getLastVertex();if(this.component.isClosed()||this.component.vertices.length<3||s(t)||s(i))return;this.createdEdge=new te(this.component,i,t)}this.createdEdge.leftVertex.rightEdge=this.createdEdge,this.createdEdge.rightVertex.leftEdge=this.createdEdge,this.component.edges.push(this.createdEdge),this.editGeometry.notifyChanges({operation:e})}undo(){s(this.createdEdge)||(n(this.component.edges,this.createdEdge),this.createdEdge.leftVertex.rightEdge=null,this.createdEdge.rightVertex.leftEdge=null,this.editGeometry.notifyChanges({operation:"undo"}))}accumulate(){return!1}}class de{constructor(e,t,i,s){this.helper=e,this.dx=t,this.dy=i,this.dz=s}move(e,t,i,s){this.helper.addDelta(e.pos,t,i,s)}apply(e){this.move(e,this.dx,this.dy,this.dz)}undo(e){this.move(e,-this.dx,-this.dy,-this.dz)}canAccumulate(e){return e instanceof de}accumulate(e,t){this.move(e,t.dx,t.dy,t.dz)}accumulateParams(e){this.dx+=e.dx,this.dy+=e.dy,this.dz+=e.dz}}class le{constructor(e,t,i,s=0,r=0){this.helper=e,this.planeType=t,this.edge=i,this.distance=s,this._plane=B(),this._offsetPlane=B(),this._minDistance=-1/0,this._maxDistance=1/0,0===r&&this._initialize()}get plane(){return this._plane}get requiresSplitEdgeLeft(){return!this._left.isOriginalDirection}get requiresSplitEdgeRight(){return!this._right.isOriginalDirection}get edgeDirection(){return this._edgeDirection}_initialize(){this._initializeNeighbors(),this._initializePlane(),this._initializeDistanceConstraints()}_initializeNeighbors(){var e,t,i,s;const r=this._toXYZ(this.edge.leftVertex.pos),n=this._toXYZ(null==(e=this.edge.leftVertex.leftEdge)||null==(t=e.leftVertex)?void 0:t.pos),o=this._toXYZ(this.edge.rightVertex.pos),h=this._toXYZ(null==(i=this.edge.rightVertex.rightEdge)||null==(s=i.rightVertex)?void 0:s.pos);this._edgeDirection=R(V(),r,o),this._left=this._computeNeighbor(r,n,this._edgeDirection),this._right=this._computeNeighbor(o,h,this._edgeDirection)}_toXYZ(e){return t(e)?this.helper.toXYZ(e):null}_computeNeighbor(e,t,i){if(s(t))return{start:e,end:t,direction:v(-i[1],i[0],0),isOriginalDirection:!0};const r=R(V(),e,t),n=!this._passesBisectingAngleThreshold(r,i);return{start:e,end:t,direction:n?this._bisectVectorsPerpendicular(i,r):r,isOriginalDirection:!n}}_passesBisectingAngleThreshold(e,t){const i=Math.abs(U(t,e));return i>=pe&&i<=Math.PI-pe}_bisectVectorsPerpendicular(e,t){const i=z(e,t)<0?e:b(V(),e),s=Math.abs(z(i,t));if(!(s<.001||s>.999))return this._bisectDirection(i,t);const r=M(V(),i,[0,0,1]);return Z(r,r)}_bisectDirection(e,t){const i=G(V(),e,t);return Z(i,i)}_initializePlane(){const e=this._computeNormalDirection(this._left),t=this._computeNormalDirection(this._right);z(e,t)<0&&b(t,t),j(this._left.start,this._bisectDirection(e,t),this._plane)}_computeNormalDirection(e){const t=M(V(),e.direction,this._edgeDirection);Z(t,t);const i=M(V(),this._edgeDirection,t);return 1===this.planeType&&(i[2]=0),Z(i,i)}_initializeDistanceConstraints(){t(this._left.end)&&!this.requiresSplitEdgeLeft&&this._updateDistanceConstraint(Y(this._plane,this._left.end)),t(this._right.end)&&!this.requiresSplitEdgeRight&&this._updateDistanceConstraint(Y(this._plane,this._right.end)),this._updateIntersectDistanceConstraint(this._plane)}_updateDistanceConstraint(e){e<=0&&(this._minDistance=Math.max(this._minDistance,e)),e>=0&&(this._maxDistance=Math.min(this._maxDistance,e))}_updateIntersectDistanceConstraint(e){const t=L(e),i=this._edgeDirection,s=G(V(),this._left.start,this._left.direction),r=G(V(),this._right.start,this._right.direction),n=this._pointInBasis2D(m(),t,i,this._left.start),o=this._pointInBasis2D(m(),t,i,s),h=this._pointInBasis2D(m(),t,i,this._right.start),a=this._pointInBasis2D(m(),t,i,r),[c]=W({start:o,end:n,type:1},{start:a,end:h,type:1});if(!c)return;const d=l(m(),n,o);p(d,d);const g=l(m(),c,o),f=u(d,g),x=G(V(),s,C(V(),this._left.direction,-f)),y=Y(e,x);this._updateDistanceConstraint(y)}_pointInBasis2D(e,t,i,s){return e[0]=F(t,s),e[1]=F(i,s),e}_offset(e,i){Number.isFinite(this._minDistance)&&(i=Math.max(this._minDistance,i)),Number.isFinite(this._maxDistance)&&(i=Math.min(this._maxDistance,i)),H(this._plane,this._offsetPlane),this._offsetPlane[3]-=i;const s=(e,i,s)=>t(i)&&q(this._offsetPlane,e,G(V(),e,i),s),r=V();(e===this.edge.leftVertex?s(this._left.start,this._left.direction,r):s(this._right.start,this._right.direction,r))&&this.helper.copy(this.helper.fromXYZ(r,void 0,this.helper.getM(e.pos)),e.pos)}signedDistanceToPoint(e){return Y(this.plane,this.helper.toXYZ(this.helper.pointToVector(e)))}apply(e){this._offset(e,this.distance)}undo(e){this._offset(e,0)}canAccumulate(e){return e instanceof le&&this.edge.leftVertex.index===e.edge.leftVertex.index&&this.edge.rightVertex.index===e.edge.rightVertex.index&&this.edge.component===e.edge.component&&this._maybeEqualsVec3(this._left.direction,e._left.direction)&&this._maybeEqualsVec3(this._right.direction,e._right.direction)&&O(L(this._plane),L(e._plane))}accumulate(e,t){const i=this._plane[3]-t._plane[3]+t.distance;this._offset(e,i)}accumulateParams(e){const t=e.distance-e._plane[3];this.distance=t+this._plane[3]}clone(){const e=new le(this.helper,this.planeType,this.edge,this.distance,1);return H(this._plane,e._plane),H(this._offsetPlane,e._offsetPlane),e._maxDistance=this._maxDistance,e._minDistance=this._minDistance,e._left=this._cloneNeighbor(this._left),e._right=this._cloneNeighbor(this._right),e._edgeDirection=T(V(),this._edgeDirection),e}_maybeEqualsVec3(e,i){return s(e)&&s(i)||t(e)&&t(i)&&O(e,i)}_cloneNeighbor({start:e,end:i,direction:s,isOriginalDirection:r}){return{start:T(V(),e),end:t(i)?T(V(),i):null,direction:T(V(),s),isOriginalDirection:r}}}const pe=X(15);class ue{constructor(e,t,i=0){this.origin=e,this.angle=t,this.accumulationType=i}rotate(e,t){g(e.pos,e.pos,this.origin,t)}apply(e){this.rotate(e,this.angle)}undo(e){this.rotate(e,-this.angle)}canAccumulate(e){return e instanceof ue&&i(this.origin,e.origin)}accumulate(e,t){const i=1===t.accumulationType;this.rotate(e,i?t.angle-this.angle:t.angle)}accumulateParams(e){const t=1===e.accumulationType;this.angle=t?e.angle:this.angle+e.angle}}class ge{constructor(e,t,i,s,r=0){this.origin=e,this.axis1=t,this.factor1=i,this.factor2=s,this.accumulationType=r,this.axis2=x(t[1],-t[0])}scale(e,t,i){f(e.pos,e.pos,this.origin,this.axis1,t),f(e.pos,e.pos,this.origin,this.axis2,i)}apply(e){this.scale(e,this.factor1,this.factor2)}undo(e){this.scale(e,1/this.factor1,1/this.factor2)}canAccumulate(e){return e instanceof ge&&i(this.origin,e.origin)&&i(this.axis1,e.axis1)}accumulate(e,t){1===t.accumulationType?this.scale(e,t.factor1/this.factor1,t.factor2/this.factor2):this.scale(e,t.factor1,t.factor2)}accumulateParams(e){const t=1===e.accumulationType;this.factor1=t?e.factor1:this.factor1*e.factor1,this.factor2=t?e.factor2:this.factor2*e.factor2}}class fe{constructor(){this.operations=[],this.closed=!1}close(){this.closed=!0}apply(){for(const e of this.operations)e.apply()}undo(){for(let e=this.operations.length-1;e>=0;e--)this.operations[e].undo()}accumulate(e){if(this.closed)return!1;const t=this.operations.length?this.operations[this.operations.length-1]:null;return t&&t.accumulate(e)||(this.operations.push(e),e.apply()),!0}}class me extends e{constructor(e){super(),this.data=e,this.undoStack=[],this.redoStack=[],this.listener=this.data.on("change",(e=>{e.addedVertices&&this.emit("vertex-add",{type:"vertex-add",vertices:e.addedVertices,operation:e.operation}),e.removedVertices&&this.emit("vertex-remove",{type:"vertex-remove",vertices:e.removedVertices,operation:e.operation}),e.updatedVertices&&this.emit("vertex-update",{type:"vertex-update",vertices:e.updatedVertices,operation:e.operation})}))}destroy(){this.listener.remove()}splitEdge(e,t){return this.apply(new he(this.data,e,t))}updateVertices(e,t,i=1){return this.apply(new ne(this.data,e,t),i)}moveVertices(e,t,i,s,r=1){return this.updateVertices(e,new de(this.data.coordinateHelper,t,i,s),r)}scaleVertices(e,t,i,s,r,n=1,o=0){return this.updateVertices(e,new ge(t,i,s,r,o),n)}rotateVertices(e,t,i,s=1,r=0){return this.updateVertices(e,new ue(t,i,r),s)}removeVertices(e){return this.apply(new oe(this.data,e,this._minNumVerticesPerType))}appendVertex(e){return 0===this.data.components.length?null:this.apply(new re(this.data,this.data.components[0],e))}setVertexPosition(e,t){return this.apply(new ae(this.data,e,t))}offsetEdge(e,t,i,s=1){return this.updateVertices([t.leftVertex,t.rightVertex],new le(this.data.coordinateHelper,e,t,i),s)}closeComponent(e){return this.data.components.includes(e)?this.apply(new ce(this.data,e)):null}canRemoveVertex(){return this.data.components[0].vertices.length>this._minNumVerticesPerType}createUndoGroup(){const e=new fe;return this.apply(e),{remove:()=>e.close()}}undo(){if(this.undoStack.length>0){const e=this.undoStack.pop();return e.undo(),this.redoStack.push(e),e}return null}redo(){if(this.redoStack.length>0){const e=this.redoStack.pop();return e.apply(),this.undoStack.push(e),e}return null}get canUndo(){return this.undoStack.length>0}get canRedo(){return this.redoStack.length>0}get lastOperation(){return this.undoStack.length>0?this.undoStack[this.undoStack.length-1]:null}get _minNumVerticesPerType(){switch(this.data.type){case"point":return 1;case"polyline":return 2;case"polygon":return 3;default:return 0}}apply(e,t=1){return 0!==t&&!s(this.lastOperation)&&this.lastOperation.accumulate(e)||(e.apply(),this.undoStack.push(e),this.redoStack=[]),e}static fromGeometry(e,t){return new me(se.fromGeometry(e,t))}}export{ie as C,me as E,de as M,le as O,ue as R,ge as S,ne as U,se as a,$ as c};

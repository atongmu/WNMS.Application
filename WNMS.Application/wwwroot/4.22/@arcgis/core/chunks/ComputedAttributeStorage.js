/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{b as t,i as e,h as s,Y as r,Q as i,l as n,u as a}from"../core/lang.js";import{n as o,m as h,o as u,a as c,w as d,u as l}from"./featureConversionUtils.js";import{h as _}from"./OptimizedFeature.js";import{F as p,S as g}from"./FeatureSetReader.js";import f from"../core/Error.js";import{L as m}from"./Logger.js";import{c as y}from"./mathUtils.js";import{createResolver as x,isAbortError as b}from"../core/promiseUtils.js";import{d as I}from"./diffUtils.js";import z from"../layers/support/FieldsIndex.js";import{l as S,H as T,A,N as F,m as C}from"./definitions.js";import{D as w,a as D,g as M,b as k,c as E,d as U,e as R,f as B,h as j,j as v}from"./visualVariablesUtils.js";import{g as O}from"./Utils13.js";class G extends p{constructor(t,e,s){super(t),this._featureIndex=-1,this._dateFields=new Set,this._geometryType=s,this._features=e}static fromFeatures(t,e,s){const r=o([],t,e,!1,!1,s);for(let e=0;e<r.length;e++)r[e].displayId=t[e].displayId;return G.fromOptimizedFeatures(r,e)}static fromFeatureSet(t,e){const s=h(t,e);return G.fromOptimizedFeatureSet(s)}static fromOptimizedFeatureSet(t){const{features:e,geometryType:s}=t,r=G.fromOptimizedFeatures(e,s);r._exceededTransferLimit=t.exceededTransferLimit,r._transform=t.transform;for(const e of t.fields)"esriFieldTypeDate"===e.type&&r._dateFields.add(e.name);return r}static fromOptimizedFeatures(t,e,s){const r=p.createInstance(),i=new G(r,t,e);return i._transform=s,i}get _current(){return this._features[this._featureIndex]}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}removeIds(t){const e=new Set(t);this._features=this._features.filter((t=>!e.has(t.objectId)))}append(t){for(const e of t)this._features.push(e)}getSize(){return this._features.length}getCursor(){return this.copy()}getQuantizationTransform(){return this._transform}getAttributeHash(){let t="";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getIndex(){return this._featureIndex}setIndex(t){this._featureIndex=t}getObjectId(){return this._current.objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){this._current.displayId=t}getGroupId(){return this._current.groupId}setGroupId(t){this._current.groupId=t}copy(){const t=new G(this.instance,this._features,this.geometryType);return this.copyInto(t),t}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readLegacyFeature(){return u(this._current,this.geometryType,this.hasZ,this.hasM)}readOptimizedFeature(){return this._current}readLegacyPointGeometry(){return this.readGeometry()?{x:this.getX(),y:this.getY()}:null}readLegacyGeometry(){const t=this.readGeometry();return c(t,this.geometryType,this.hasZ,this.hasM)}readLegacyCentroid(){const e=this.readCentroid();return t(e)?null:{x:e.coords[0]*this._sx+this._tx,y:e.coords[1]*this._sy+this._ty}}readGeometryArea(){return _(this._current)?d(this._current.geometry,2):0}readUnquantizedGeometry(){const t=this.readGeometry();if("esriGeometryPoint"===this.geometryType||!t)return t;const e=t.clone();return function({coords:t,lengths:e}){let s=0;for(const r of e){for(let e=1;e<r;e++)t[2*(s+e)]+=t[2*(s+e)-2],t[2*(s+e)+1]+=t[2*(s+e)-1];s+=r}}(e),e}readHydratedGeometry(){const s=this._current.geometry;if(t(s))return null;const r=s.clone();return e(this._transform)&&l(r,r,this.hasZ,this.hasM,this._transform),r}getXHydrated(){if(!_(this._current))return 0;const e=this._current.geometry.coords[0],s=this.getQuantizationTransform();return t(s)?e:e*s.scale[0]+s.translate[0]}getYHydrated(){if(!_(this._current))return 0;const e=this._current.geometry.coords[1],s=this.getQuantizationTransform();return t(s)?e:s.translate[1]-e*s.scale[1]}getX(){return _(this._current)?this._current.geometry.coords[0]*this._sx+this._tx:0}getY(){return _(this._current)?this._current.geometry.coords[1]*this._sy+this._ty:0}readGeometry(){if(!_(this._current))return null;const t=this._current.geometry.clone();if(t.isPoint)return t.coords[0]=t.coords[0]*this._sx+this._tx,t.coords[1]=t.coords[1]*this._sy+this._ty,t;let e=0;for(const s of t.lengths)t.coords[2*e]=t.coords[2*e]*this._sx+this._tx,t.coords[2*e+1]=t.coords[2*e+1]*this._sy+this._ty,e+=s;return t}readCentroid(){if(!_(this._current))return null;if(!this._current.centroid){const t=this._computeCentroid();if(!t)return null;t.coords[0]=(t.coords[0]-this._tx)/this._sx,t.coords[1]=(t.coords[1]-this._ty)/this._sy,this._current.centroid=t}const t=this._current.centroid.clone();return t.coords[0]=t.coords[0]*this._sx+this._tx,t.coords[1]=t.coords[1]*this._sx+this._ty,t}_readAttribute(t,e){const s=this._current.attributes[t];if(void 0!==s)return null!=s&&e&&this._dateFields.has(t)?new Date(s):s;const r=this.readAttributes(),i=t.toLocaleLowerCase().trim();for(const t in r)if(t.toLocaleLowerCase().trim()===i){const s=this._current.attributes[t];return null!=s&&e&&this._dateFields.has(t)?new Date(s):s}}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._transform=this._transform,t._dateFields=this._dateFields}_readAttributes(){return this._current.attributes}}const L=m.getLogger("esri.views.layers.2d.features.support.AttributeStore"),N=U(R,L),P={sharedArrayBuffer:s("esri-shared-array-buffer"),atomics:s("esri-atomics")};function H(t,e){return s=>e(t(s))}class Y{constructor(t,e,s,r){this.size=0,this.texelSize=4;const{pixelType:i,layout:n,textureOnly:a}=r;this.textureOnly=a||!1,this.pixelType=i,this._ctype=e,this.layout=n,this._resetRange(),this._shared=t,this.size=s,a||(this.data=this._initData(i,s,t,e))}get buffer(){return n(this.data,(t=>t.buffer))}unsetComponentAllTexels(t,e){const s=a(this.data);for(let r=0;r<this.size*this.size;r++)s[r*this.texelSize+t]&=~e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponentAllTexels(t,e){const s=a(this.data);for(let r=0;r<this.size*this.size;r++)s[r*this.texelSize+t]|=255&e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponent(t,e,s){const r=a(this.data);for(const i of s)r[i*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}setComponentTexel(t,e,s){a(this.data)[s*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}unsetComponentTexel(t,e,s){a(this.data)[s*this.texelSize+t]&=~e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}getData(t,e){const s=M(t);return a(this.data)[s*this.texelSize+e]}setData(t,e,s){const r=M(t),i=1<<e;0!=(this.layout&i)?(this.data[r*this.texelSize+e]=s,this.dirtyStart=Math.min(this.dirtyStart,r),this.dirtyEnd=Math.max(this.dirtyEnd,r)):L.error("mapview-attributes-store","Tried to set a value for a texel's readonly component")}lock(){5121===this.pixelType&&this._shared&&P.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,1)}unlock(){5121===this.pixelType&&this._shared&&P.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,0)}expand(t){if(this.size=t,!this.textureOnly){const e=this._initData(this.pixelType,t,this._shared,this._ctype),s=a(this.data);e.set(s),this.data=e}}toMessage(){const t=this.dirtyStart,e=this.dirtyEnd,s=this.texelSize;if(t>e)return null;this._resetRange();const r=!(this._shared||"local"===this._ctype),i=this.pixelType,n=this.layout,o=a(this.data);return{start:t,end:e,data:r&&o.slice(t*s,(e+1)*s)||null,pixelType:i,layout:n}}_initData(t,e,s,r){const i=s&&"local"!==r?SharedArrayBuffer:ArrayBuffer,n=O(t),a=new n(new i(e*e*4*n.BYTES_PER_ELEMENT));for(let t=0;t<a.length;t+=4)a[t+1]=255;return a}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}}class X{constructor(t,e){this._client=t,this.config=e,this._attributeComputeMap=new Map,this._blocks=new Array,this._filters=new Array(S),this._targetType=0,this._abortController=new AbortController,this._hasScaleExpr=!1,this._size=32,this._idsToHighlight=new Set;const s=e.supportsTextureFloat?5126:5121;N(`Creating AttributeStore ${P.sharedArrayBuffer?"with":"without"} shared memory`),this._blockDescriptors=[{pixelType:5121,layout:1},{pixelType:5121,layout:15,textureOnly:!0},{pixelType:s,layout:15},{pixelType:s,layout:15}],this._blocks=this._blockDescriptors.map((()=>null))}destroy(){this._abortController.abort()}get hasScaleExpr(){return this._hasScaleExpr}get _signal(){return this._abortController.signal}update(r,i){this.config=i;const n=i.schema.processors[0].storage,a=I(this._schema,n);if((r.targets.feature||r.targets.aggregate)&&(r.storage.data=!0),a&&(s("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:",a),r.storage.data=!0,this._schema=n,this._attributeComputeMap.clear(),!t(n))){switch(n.target){case"feature":this._targetType=D;break;case"aggregate":this._targetType=w}if("subtype"===n.type)for(const t in n.mapping){const s=n.mapping[t];if(e(s))for(const t of s.mapping)this._bindAttribute(t)}else for(const t of n.mapping)this._bindAttribute(t)}}onTileData(e,s){if(t(s.addOrUpdate))return;const r=s.addOrUpdate.getCursor();for(;r.next();){const t=r.getDisplayId();this.setAttributeData(t,r)}}invalidateResources(){this._createResourcesPromise=null,this._abortController.abort(),this._abortController=new AbortController}async setHighlight(t,e){const s=this._getBlock(0),r=e.map((t=>M(t)));s.lock(),s.unsetComponentAllTexels(0,1),s.setComponent(0,1,r),s.unlock(),this._idsToHighlight.clear();for(const e of t)this._idsToHighlight.add(e);await this.sendUpdates()}async updateFilters(t,e){const{config:r,service:i,spatialReference:n}=e,{filters:a}=r,o=a.map(((t,e)=>this._updateFilter(t,e,i,n)));(await Promise.all(o)).some((t=>t))&&(t.storage.filters=!0,s("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:","Filters changed"))}setData(t,e,s,r){const i=M(t);this._ensureSizeForTexel(i),this._getBlock(e).setData(t,s,r)}getData(t,e,s){return this._getBlock(e).getData(t,s)}getHighlightFlag(t){return this._idsToHighlight.has(t)?T:0}unsetAttributeData(t){const e=M(t);this._getBlock(0).setData(e,0,0)}setAttributeData(t,e){const s=M(t);if(this._ensureSizeForTexel(s),this._getBlock(0).setData(s,0,this.getFilterFlags(e)),this._targetType!==k(t))return;const r=this._attributeComputeMap,i=this.config.supportsTextureFloat?1:2;r.size&&r.forEach(((t,r)=>{const n=r*i%4,a=Math.floor(r*i/4),o=this._getBlock(a+A),h=t(e);if(this.config.supportsTextureFloat)o.setData(s,n,h);else if(h===F)o.setData(s,n,255),o.setData(s,n+1,255);else{const t=y(Math.round(h),-32767,32766)+32768,e=255&t,r=(65280&t)>>8;o.setData(s,n,e),o.setData(s,n+1,r)}}))}sendUpdates(){if(this._nextUpdate)return this._nextUpdate.promise;if(this._currUpdate)return this._nextUpdate=x(),this._nextUpdate.promise;const t={blocks:this._blocks.map((t=>e(t)?t.toMessage():null))};return this._currUpdate=this._createResources().then((()=>{const e=()=>{if(this._currUpdate=null,this._nextUpdate){const t=this._nextUpdate;this._nextUpdate=null,this.sendUpdates().then((()=>t.resolve()))}},s=this._client.update(t,this._signal).then(e).catch(e);return this._client.render(this._signal),s})).catch((t=>b(t)?(this._createResourcesPromise=null,this._createResources()):(L.error(new f("mapview-attribute-store","Encountered an error during client update",t)),Promise.resolve()))),this._currUpdate}_ensureSizeForTexel(t){for(;t>=this._size*this._size;)if(this._expand())return}_bindAttribute(t){let e;if(null!=t.fieldIndex)t.normalizationField&&L.warn("mapview-arcade","Ignoring normalizationField specified with an arcade expression which is not supported."),e=e=>e.getComputedNumericAtIndex(t.fieldIndex);else{if(!t.field)return;e=t.normalizationField?e=>{const s=e.readAttribute(t.normalizationField);return s?e.readAttribute(t.field)/s:null}:e=>e.readAttribute(t.field)}if(t.valueRepresentation){e=H(e,(e=>B(e,t.valueRepresentation)))}this._attributeComputeMap.set(t.binding,H(e,(t=>null===t||isNaN(t)||t===1/0?F:t)))}_createResources(){if(e(this._createResourcesPromise))return this._createResourcesPromise;this._getBlock(C),N("Initializing AttributeStore");const s={shared:P.sharedArrayBuffer&&!("local"===this._client.type),size:this._size,blocks:r(this._blocks,(t=>({textureOnly:t.textureOnly,buffer:t.buffer,pixelType:t.pixelType})))},i=this._client.initialize(s,this._signal).catch((t=>{b(t)?this._createResourcesPromise=null:L.error(new f("mapview-attribute-store","Encountered an error during client initialization",t))}));return this._createResourcesPromise=i,i.then((()=>t(this._createResourcesPromise)?this._createResources():void 0)),i}_getBlock(t){const s=this._blocks[t];if(e(s))return s;N(`Initializing AttributeBlock at index ${t}`);const r=P.sharedArrayBuffer,i=this._client.type,n=new Y(r,i,this._size,this._blockDescriptors[t]);return this._blocks[t]=n,this._createResourcesPromise=null,n}_expand(){if(this._size<this.config.maxTextureSize){const t=this._size<<=1;return N("Expanding block size to",t,this._blocks),i(this._blocks,(e=>e.expand(t))),this._createResourcesPromise=null,this._size=t,0}return L.error(new f("mapview-limitations","Maximum number of onscreen features exceeded.")),-1}async _updateFilter(s,r,i,n){const a=this._filters[r],o=e(a)&&a.hash;if(!a&&!s)return!1;if(o===JSON.stringify(s))return!1;if(t(s)){if(!a)return!1;const t=1<<r+1,e=this._getBlock(0);return this._filters[r]=null,e.setComponentAllTexels(0,t),this.sendUpdates(),!0}const h=await this._getFilter(r,i);return await h.update(s,n),!0}async _getFilter(t,s){const r=this._filters[t];if(e(r))return r;const{default:i}=await import("./FeatureFilter.js"),n=new i({geometryType:s.geometryType,hasM:!1,hasZ:!1,timeInfo:s.timeInfo,fieldsIndex:new z(s.fields)});return this._filters[t]=n,n}isVisible(t){return!!(2&this._getBlock(0).getData(t,0))}getFilterFlags(e){let s=0;const r=E(e.getDisplayId());for(let i=0;i<this._filters.length;i++){const n=!!(r&1<<i),a=this._filters[i];s|=(!n||t(a)||a.check(e)?1:0)<<i}let i=0;if(this._idsToHighlight.size){const t=e.getObjectId();i=this.getHighlightFlag(t)}return s<<1|i}}class Z{constructor(){this._freeIds=[],this._idCounter=1}createId(t=!1){return j(this._getFreeId(),t)}releaseId(t){this._freeIds.push(t)}_getFreeId(){return this._freeIds.length?this._freeIds.pop():this._idCounter++}}function Q(t,e,s){if(!(t.length>e))for(;t.length<=e;)t.push(s)}class V{constructor(){this._numerics=[],this._strings=[],this._idGenerator=new Z,this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[]}createBitset(){const t=this._bitsets.length;return this._bitsets.push(g.create(this._allocatedSize,v)),t+1}getBitset(t){return this._bitsets[t-1]}_expand(){this._allocatedSize<<=1;for(const t of this._bitsets)t.resize(this._allocatedSize)}_ensureNumeric(t,e){this._numerics[t]||(this._numerics[t]=[]);Q(this._numerics[t],e,0)}_ensureInstanceId(t){Q(this._instanceIds,t,0)}_ensureString(t,e){this._strings[t]||(this._strings[t]=[]);Q(this._strings[t],e,null)}createDisplayId(t=!1){const e=this._idGenerator.createId();return e>this._allocatedSize&&this._expand(),j(e,t)}releaseDisplayId(t){for(const e of this._bitsets)e.unset(t);return this._idGenerator.releaseId(t&v)}getComputedNumeric(t,e){return this.getComputedNumericAtIndex(t&v,0)}setComputedNumeric(t,e,s){return this.setComputedNumericAtIndex(t&v,s,0)}getComputedString(t,e){return this.getComputedStringAtIndex(t&v,0)}setComputedString(t,e,s){return this.setComputedStringAtIndex(t&v,0,s)}getComputedNumericAtIndex(t,e){const s=t&v;return this._ensureNumeric(e,s),this._numerics[e][s]}setComputedNumericAtIndex(t,e,s){const r=t&v;this._ensureNumeric(e,r),this._numerics[e][r]=s}getInstanceId(t){const e=t&v;return this._ensureInstanceId(e),this._instanceIds[e]}setInstanceId(t,e){const s=t&v;this._ensureInstanceId(s),this._instanceIds[s]=e}getComputedStringAtIndex(t,e){const s=t&v;return this._ensureString(e,s),this._strings[e][s]}setComputedStringAtIndex(t,e,s){const r=t&v;this._ensureString(e,r),this._strings[e][r]=s}getXMin(t){return this._bounds[4*(t&v)]}getYMin(t){return this._bounds[4*(t&v)+1]}getXMax(t){return this._bounds[4*(t&v)+2]}getYMax(t){return this._bounds[4*(t&v)+3]}setBounds(t,e){const s=e.readHydratedGeometry();if(!s||!s.coords.length)return!1;let r=1/0,i=1/0,n=-1/0,a=-1/0;s.forEachVertex(((t,e)=>{r=Math.min(r,t),i=Math.min(i,e),n=Math.max(n,t),a=Math.max(a,e)}));const o=t&v;return Q(this._bounds,4*o+4,0),this._bounds[4*o]=r,this._bounds[4*o+1]=i,this._bounds[4*o+2]=n,this._bounds[4*o+3]=a,!0}}export{X as A,V as C,G as F};

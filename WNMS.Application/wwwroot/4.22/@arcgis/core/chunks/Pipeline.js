/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{HandleOwner as t}from"../core/HandleOwner.js";import{b as s,i as r,h as i,u as a,o,R as n,X as h,m as u,l as c}from"../core/lang.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import"./ensureType.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import p from"../layers/support/TileInfo.js";import{createResolver as g,eachAlwaysValues as m,eachAlways as f,throwIfAborted as y,isAbortError as _,throwIfNotAbortError as I,after as v,ignoreAbortErrors as b}from"../core/promiseUtils.js";import{whenFalseOnce as x}from"../core/watchUtils.js";import{a as w,u as S,m as F,s as j,p as C,q as T,t as q,v as M}from"./featureConversionUtils.js";import{Q as k}from"./QueryEngine.js";import U from"../layers/support/FieldsIndex.js";import{i as E}from"./visualVariablesUtils.js";import{F as R,S as A,a as O}from"./FeatureStore2D.js";import{i as P}from"./arcgisLayerUrl.js";import L from"../request.js";import D from"../core/Error.js";import{L as z}from"./Logger.js";import G from"../core/workers/Connection.js";import{t as Q}from"./quantizationUtils.js";import{i as N}from"./ogcFeatureUtils.js";import{f as B,b as V}from"./query.js";import{F as X,C as Y,A as H}from"./ComputedAttributeStorage.js";import{P as Z}from"./pbf.js";import{a as J,O as $,b as W}from"./OptimizedFeature.js";import{F as K}from"./FeatureSetReader.js";import{a as ee,b as te}from"./pbfQueryUtils.js";import se from"../TimeExtent.js";import{E as re}from"./Evented.js";import{d as ie,h as ae,a as oe}from"./diffUtils.js";import ne from"../rest/support/Query.js";import{C as he}from"./CircularArray.js";import{Q as ue}from"./QueueProcessor.js";import{r as ce,T as le}from"./TileStore.js";import{S as de,c as pe}from"./createConnection.js";import"../geometry.js";import{e as ge}from"./Ellipsoid.js";import me,{g as fe}from"../geometry/SpatialReference.js";import{c as ye,p as _e}from"./projectionSupport.js";import{k as Ie}from"./definitions.js";import{T as ve}from"./TileInfoView.js";import"../core/Accessor.js";import"./deprecate.js";import"./metadata.js";import"./handleUtils.js";import"./ArrayPool.js";import"../core/scheduling.js";import"./nextTick.js";import"../config.js";import"./object.js";import"./string.js";import"../core/Handles.js";import"../core/Collection.js";import"./shared.js";import"./reactiveUtils.js";import"./jsonMap.js";import"./JSONSupport.js";import"./unitUtils.js";import"./projectionEllipsoid.js";import"./reader.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Geometry.js";import"../geometry/support/webMercatorUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./common.js";import"../geometry/Extent.js";import"../layers/support/LOD.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./OptimizedFeatureSet.js";import"./MemCache.js";import"./aaBoundingBox.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"../core/urlUtils.js";import"./typeUtils.js";import"../kernel.js";import"./ItemCache.js";import"../core/sql/WhereClause.js";import"./_commonjsHelpers.js";import"./QueryEngineCapabilities.js";import"./utils8.js";import"./generateRendererUtils.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../Color.js";import"./colorUtils.js";import"./enumeration.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../symbols/Symbol.js";import"./spatialQuerySupport.js";import"../layers/support/fieldUtils.js";import"./arcadeOnDemand.js";import"./Scheduler.js";import"./debugFlags.js";import"./screenUtils.js";import"./number2.js";import"./enums.js";import"./visualVariablesUtils2.js";import"./Utils13.js";import"./Texture.js";import"./persistableUrlUtils.js";import"../core/workers/RemoteClient.js";import"./geojson.js";import"./clientSideDefaults.js";import"./defaultsJSON.js";import"./fieldType.js";import"./queryZScale.js";import"./zscale.js";import"./centroid.js";import"./timeUtils.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"../rest/support/StatisticDefinition.js";import"./Queue.js";import"./quickselect.js";import"./TileKey.js";import"../geometry/projection.js";import"./mat4.js";import"./pe.js";import"./assets.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./json.js";class be{constructor(){this.fieldMap=new Map,this.fields=[],this.hasFeatures=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}hasField(e){return this.fieldMap.has(e)}isDateField(e){var t;return null==(t=this.fieldMap.get(e))?void 0:t.isDate}getFieldIndex(e){var t;return null==(t=this.fieldMap.get(e))?void 0:t.index}}function xe(e){const t=e.getLength(),s=e.pos()+t,r={name:"",isDate:!1};for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:r.name=e.getString();break;case 2:"esriFieldTypeDate"===te(e.getEnum())&&(r.isDate=!0);break;default:e.skip()}return r}const we=z.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF"),Se={small:{delta:new Int32Array(128),decoded:new Int32Array(128)},large:{delta:new Int32Array(128e3),decoded:new Int32Array(128e3)}};function Fe(e){return e<=Se.small.delta.length?Se.small:(e<=Se.large.delta.length||(Se.large.delta=new Int32Array(Math.round(1.25*e)),Se.large.decoded=new Int32Array(Math.round(1.25*e))),Se.large)}function je(e){for(;e.next();){if(1===e.tag())return e.getMessage();e.skip()}return null}function Ce(e,t,s,r,i,a){return.5*Math.abs(e*r+s*a+i*t-e*a-s*t-i*r)}function Te(e,t,s,r){return 0===e*r-s*t&&e*s+t*r>0}class qe extends K{constructor(e,t,s,r){super(e),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=r,this._reader=t,this._header=s,this._hasNext=s.hasFeatures,this._isPoints="esriGeometryPoint"===r}static fromBuffer(e,t,s=!1){const r=function(e){try{const t=2,s=new Z(new Uint8Array(e),new DataView(e));for(;s.next();){if(s.tag()===t)return je(s.getMessage());s.skip()}}catch(e){const t=new D("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});we.error(t)}return null}(e),i=function(e,t,s=!1){const r=e.pos(),i=new be;let a=0,o=0,n=null,h=null,u=null,c=!1;for(;e.next();)switch(e.tag()){case 1:n=e.getString();break;case 3:h=e.getString();break;case 12:u=e.processMessage(ee);break;case 9:if(i.exceededTransferLimit=e.getBool(),i.exceededTransferLimit){i.offsets.geometry=s?new Float64Array(8e3):new Int32Array(8e3),i.centroid=s?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<i.centroid.length;e++)i.centroid[e]=268435455}break;case 13:{const t=xe(e),s=t.name,r=t.name.toLowerCase().trim(),o={fieldName:s,index:a++,isDate:t.isDate};i.fields.push(o),i.fieldMap.set(t.name,o),i.fieldMap.set(r,o);break}case 15:{const r=e.getLength(),n=e.pos()+r;if(!i.exceededTransferLimit){const e=i.offsets.geometry,t=i.centroid;e.push(0),t.push(268435455),t.push(268435455)}!c&&i.exceededTransferLimit&&(c=!0,i.offsets.attributes=s?new Float64Array(8e3*a):new Uint32Array(8e3*a));let h=o*a;for(;e.pos()<n&&e.next();)switch(e.tag()){case 1:{c?i.offsets.attributes[h++]=e.pos():i.offsets.attributes.push(e.pos());const t=e.getLength();e.skipLen(t);break}case 2:if(t){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 3:{e.getUInt32();const t=e.getSInt64(),s=e.getSInt64();i.centroid[2*o]=t,i.centroid[2*o+1]=s;break}default:e.skip()}}else{i.offsets.geometry[o]=e.pos();const t=e.getLength();i.vertexCount+=t,e.skipLen(t)}break;case 4:{const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 3:{e.getUInt32();const t=e.getSInt64(),s=e.getSInt64();i.centroid[2*o]=t,i.centroid[2*o+1]=s;break}default:e.skip()}break}default:e.skip()}o++,i.hasFeatures=!0;break}default:e.skip()}const l=n||h;if(!l)throw new D("FeatureSet has no objectId or globalId field name");return i.featureCount=o,i.fieldCount=a,i.objectIdFieldIndex=i.getFieldIndex(l),i.transform=u,i.displayIds=new Uint32Array(i.featureCount),i.groupIds=new Uint16Array(i.featureCount),e.move(r),i}(r,"esriGeometryPoint"===t,s),a=K.createInstance();return new qe(a,r,i,t)}get geometryType(){return this._geometryType}get size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this.size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fields.forEach((({index:t})=>{e+=this._readAttributeAtIndex(t)+"."})),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(void 0===this._cache.legacyFeature){var e;const t=this.readCentroid(),s={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:null!=(e=t&&{x:t.coords[0],y:t.coords[1]})?e:null};return this._cache.legacyFeature=s,s}return this._cache.legacyFeature}readOptimizedFeature(){if(void 0===this._cache.optFeature){const e=new J(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrated(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return s(t)?e:e*t.scale[0]+t.translate[0]}getYHydrated(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return s(t)?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(e){const t=this.readGeometry(e);return w(t,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,s]=e.coords;return{x:t,y:s}}readGeometryArea(){return this._cache.area||this.readGeometry(!0),this._cache.area}readUnquantizedGeometry(e=!1){if(void 0===this._cache.unquantGeometry){const t=this.readGeometry(e);if(!t)return this._cache.unquantGeometry=null,null;const s=Fe(t.coords.length).decoded,r=t.clone(s),i=r.coords;let a=0;for(const e of r.lengths){for(let t=1;t<e;t++){const e=2*(a+t),s=2*(a+t-1);i[e]+=i[s],i[e+1]+=i[s+1]}a+=e}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){if(268435455===this._header.centroid[2*this._featureIndex])return null;const e=this.getXHydrated(),t=this.getYHydrated();return new $([],[e,t])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),s=this.getQuantizationTransform();return r(s)&&S(t,t,this.hasZ,this.hasM,s),t}readGeometry(e=!1){if(void 0===this._cache.geometry){let t=null;if(this._isPoints){if(268435455===this._header.centroid[2*this._featureIndex])return null;const e=this.getX(),s=this.getY();t=new $([],[e,s])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(0===s)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch(e){return console.error("Failed to parse geometry!",e),null}}return this._cache.geometry=t,t}return this._cache.geometry}readCentroid(){if(void 0===this._cache.centroid){let e=null;const t=this._header.centroid[2*this._featureIndex]+this._tx,s=this._header.centroid[2*this._featureIndex+1]+this._ty;return 268435455===t?(e=this._computeCentroid(),e&&(this._header.centroid[2*this._featureIndex]=e.coords[0]-this._tx,this._header.centroid[2*this._featureIndex+1]=e.coords[1]-this._ty)):e=new $([],[t,s]),this._cache.centroid=e,e}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new qe(this.instance,e,this._header,this.geometryType);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this.size&&!this._getExists(););return this._featureIndex<this.size}_readAttribute(e,t){const s=this._header.hasField(e)?e:function(e){return e.toLowerCase().trim()}(e),r=this._header.getFieldIndex(s);if(null==r)return;const i=this._readAttributeAtIndex(r);if(!t)return i;if(null==i)return i;return this._header.isDateField(s)?new Date(i):i}_readAttributes(){const e={};return this._header.fields.forEach((({fieldName:t,index:s})=>{e[t]=this._readAttributeAtIndex(s)})),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;return s.move(t),function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(s)}_parseGeometry(e){const t=e.getLength(),s=e.pos()+t,r=[],i=[];for(;e.pos()<s&&e.next();)switch(e.tag()){case 2:{const t=e.getUInt32(),s=e.pos()+t;for(;e.pos()<s;)i.push(e.getUInt32());break}case 3:{const t=e.getUInt32(),s=e.pos()+t;for(r.push(e.getSInt32()+this._tx),r.push(e.getSInt32()+this._ty),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();e.pos()<s;)r.push(e.getSInt32()),r.push(e.getSInt32()),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();break}default:e.skip()}return new $(i,r)}_parseGeometryForDisplay(e){const t=e.getLength(),s=e.pos()+t,r=[],i=[];let a=0,o=0,n=null,h=0;const u="esriGeometryPolygon"===this.geometryType;for(;e.pos()<s&&e.next();)switch(e.tag()){case 2:{const t=e.getUInt32(),s=e.pos()+t;for(;e.pos()<s;){const t=e.getUInt32();r.push(t),a+=t}n=Fe(2*a).delta;break}case 3:{e.getUInt32();const t=2+(this.hasZ?1:0)+(this.hasM?1:0);for(const s of r)if(o+t*s>n.length)for(let t=0;t<s;t++)e.getSInt32(),e.getSInt32(),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();else if(u){const t=this.getAreaSimplificationThreshold(s,this._header.vertexCount);let r=2,a=1;const u=!1;let c=e.getSInt32(),l=e.getSInt32();n[o++]=c,n[o++]=l,this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();let d=e.getSInt32(),p=e.getSInt32();for(this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();r<s;){let s=e.getSInt32(),i=e.getSInt32();this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();const u=c+d,g=l+p;Ce(c,l,u,g,u+s,g+i)>=t?(h+=-.5*(u-c)*(g+l),a>1&&Te(n[o-2],n[o-1],d,p)?(n[o-2]+=d,n[o-1]+=p):(n[o++]=d,n[o++]=p,a++),c=u,l=g):(s+=d,i+=p),d=s,p=i,r++}a<3||u?o-=2*a:(h+=-.5*(c+d-c)*(l+p+l),Te(n[o-2],n[o-1],d,p)?(n[o-2]+=d,n[o-1]+=p,i.push(a)):(n[o++]=d,n[o++]=p,i.push(++a)))}else{let t=0,r=e.getSInt32(),a=e.getSInt32();this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32(),n[o++]=r,n[o++]=a,t+=1;for(let i=1;i<s;i++){const s=e.getSInt32(),u=e.getSInt32(),c=r+s,l=a+u;h+=-.5*(c-r)*(l+a),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32(),i>2&&Te(n[o-2],n[o-1],s,u)?(n[o-2]+=s,n[o-1]+=u):(n[o++]=s,n[o++]=u,t+=1),r=c,a=l}i.push(t)}break}default:e.skip()}if(this._cache.area=h,!i.length)return null;if(this._tx||this._ty){let e=0;for(const t of i)n[2*e]+=this._tx,n[2*e+1]+=this._ty,e+=t}return new $(i,n)}}class Me{constructor(e){this.service=e}destroy(){}}function ke(e){const{capabilities:t}=e;return(s=e.source)&&s.capabilities&&s.collection&&s.layerDefinition?new Ae(e):function(e){return Array.isArray(e.source)}(e)?new Ue(e):t.query.supportsFormatPBF&&i("featurelayer-pbf")?new Ee(e):new Re(e);var s}class Ue extends Me{constructor(e){super(e),this._portsOpen=async function(e){const t=new G;return await t.open(e,{}),t}(e.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return X.fromFeatureSet(s,this.service.objectIdField)}}class Ee extends Me{async executeQuery(e,t){const{data:s}=await B(this.service.source,e,t),r=!e.quantizationParameters;return qe.fromBuffer(s,this.service.geometryType,r)}}class Re extends Me{async executeQuery(e,t){const{source:s,capabilities:i,spatialReference:o,objectIdField:n,geometryType:h}=this.service;if(r(e.quantizationParameters)&&!i.query.supportsQuantization){const r=e.clone(),i=Q(a(r.quantizationParameters));r.quantizationParameters=null;const{data:h}=await V(s,r,o,t),u=F(h,n);return j(i,u),X.fromOptimizedFeatureSet(u)}const{data:u}=await V(s,e,this.service.spatialReference,t);var c;"esriGeometryPoint"===h&&(u.features=null==(c=u.features)?void 0:c.filter((e=>{if(r(e.geometry)){const t=e.geometry;return Number.isFinite(t.x)&&Number.isFinite(t.y)}return!0})));return X.fromFeatureSet(u,this.service.objectIdField)}}class Ae extends Me{async executeQuery(e,t){const{capabilities:s}=this.service;if(e.quantizationParameters&&!s.query.supportsQuantization){const s=e.clone(),r=Q(a(s.quantizationParameters));s.quantizationParameters=null;const i=await N(this.service.source,e,t);return j(r,i),X.fromOptimizedFeatureSet(i)}const r=await N(this.service.source,e,t);return X.fromOptimizedFeatureSet(r)}}class Oe{constructor(){this.source=!1,this.targets={feature:!1,aggregate:!1},this.storage={filters:!1,data:!1},this.mesh=!1,this.queryFilter=!1,this.why={mesh:[],source:[]}}static create(e){const t=new Oe;for(const s in e){const r=e[s];if("object"==typeof r)for(const e in r){const i=r[e];t[s][e]=i}t[s]=r}return t}static empty(){return Oe.create({})}static all(){return Oe.create({source:!0,targets:{feature:!0,aggregate:!0},storage:{filters:!0,data:!0},mesh:!0})}unset(e){e.source&&(this.source=!1),e.targets.feature&&(this.targets.feature=!1),e.targets.aggregate&&(this.targets.aggregate=!1),e.storage.filters&&(this.storage.filters=!1),e.storage.data&&(this.storage.data=!1),e.mesh&&(this.mesh=!1),e.queryFilter&&(this.queryFilter=!1)}any(){return this.source||this.mesh||this.storage.filters||this.storage.data||this.targets.feature||this.targets.aggregate||this.queryFilter}describe(){let e=0,t="";if(this.mesh){e+=20,t+="-> (20) Mesh needs update\n";for(const e of this.why.mesh)t+=`    + ${e}\n`}if(this.source){e+=10,t+="-> (10) The source needs update\n";for(const e of this.why.source)t+=`    + ${e}\n`}this.targets.feature&&(e+=5,t+="-> (5) Feature target parameters changed\n"),this.storage.filters&&(e+=5,t+="-> (5) Feature filter parameters changed\n"),this.targets.aggregate&&(e+=4,t+="-> (4) Aggregate target parameters changed\n"),this.storage.data&&(e+=1,t+="-> (1) Texture storage parameters changed");const s=e<5?"Fastest":e<10?"Fast":e<15?"Moderate":e<20?"Slow":"Very Slow";console.debug(`Applying ${s} update of cost ${e}/45 `),console.debug(t)}toJSON(){return{queryFilter:this.queryFilter,source:this.source,targets:this.targets,storage:this.storage,mesh:this.mesh}}}class Pe{constructor(e){this.requests={done:new Array,stream:new he(10)},this._edits=null,this._abortController=new AbortController,this._done=!1,this.didSend=!1,this.tile=e}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get empty(){return!this.requests.done.length}get edits(){return this._edits}get done(){return this._done}end(){this._done=!0}clear(){this.requests.done=[]}applyUpdate(e){this.requests.done.forEach((t=>t.message.status.unset(e))),r(this._edits)&&this._edits.status.unset(e)}add(e){var t;e.message.status=null!=(t=e.message.status)?t:Oe.empty(),e.message.end&&this.requests.done.forEach((e=>{r(e.message)&&e.message.end&&(e.message.end=!1)})),this.requests.done.push(e)}edit(e,t){const r=e.getQuantizationTransform(),i=e.geometryType,o=Array.from(e.features()),n=[...t,...o.map((e=>e.objectId))];if(this.removeIds(n),this._invalidate(),s(this._edits))return void(this._edits={type:"append",addOrUpdate:X.fromOptimizedFeatures(o,i,a(r)),id:this.tile.id,status:Oe.empty(),end:!0});this.requests.done.forEach((e=>e.message.end=!1));a(this._edits.addOrUpdate).append(e.features())}*readers(){for(const{message:e}of this.requests.done)r(e.addOrUpdate)&&(yield e.addOrUpdate);r(this._edits)&&r(this._edits.addOrUpdate)&&(yield this._edits.addOrUpdate)}_invalidate(){for(const e of this.requests.done)e.message.status=Oe.empty();r(this._edits)&&(this._edits.status=Oe.empty())}removeIds(e){this._invalidate();for(const{message:t}of this.requests.done){const s=t.addOrUpdate;r(s)&&(s.removeIds(e),s.isEmpty&&(t.addOrUpdate=null))}r(this._edits)&&r(this._edits.addOrUpdate)&&this._edits.addOrUpdate.removeIds(e),this.requests.done=this.requests.done.filter((e=>e.message.addOrUpdate||e.message.end))}abort(){this._abortController.abort()}}class Le{constructor(e){this.events=new re,this._resolver=g(),this._didEdit=!1,this._subscriptions=new Map,this._outSR=e.outSR,this._serviceInfo=e.serviceInfo,this._onTileUpdateMessage=e.onMessage}destroy(){}async _onMessage(e){var t;const s=this._subscriptions.get(e.id);if(!s)return;const r={...e,remove:null!=(t=e.remove)?t:[],status:e.status};return this._onTileUpdateMessage(r,s.options)}update(e,t){var s;const r=t.fields.length;t.outFields=function(e,t){const s=new Set;return e&&e.forEach((e=>s.add(e))),t&&t.forEach((e=>s.add(e))),s.has("*")?["*"]:Array.from(s)}(null==(s=this._schema)?void 0:s.outFields,t.outFields),t.outFields=t.outFields.length>=.75*r?["*"]:t.outFields,t.outFields.sort();const a=ie(this._schema,t);if(!a)return;i("esri-2d-update-debug")&&console.debug("Applying Update - Source:",a);const o="orderByFields"in this._serviceInfo&&this._serviceInfo.orderByFields?this._serviceInfo.orderByFields:this._serviceInfo.objectIdField+" ASC",n={returnCentroid:i("esri-2d-query-centroid-enabled")&&"esriGeometryPolygon"===this._serviceInfo.geometryType,returnGeometry:!0,timeReferenceUnknownClient:"stream"!==this._serviceInfo.type&&this._serviceInfo.timeReferenceUnknownClient,outFields:t.outFields,outSpatialReference:this._outSR,orderByFields:[o],where:t.definitionExpression||"1=1",gdbVersion:t.gdbVersion,historicMoment:t.historicMoment,timeExtent:se.fromJSON(t.timeExtent),customParameters:t.customParameters},h=this._schema&&ae(a,"outFields");this._schema&&oe(a,["timeExtent","definitionExpression","gdbVersion","historicMoment","customParameters"])&&(e.why.mesh.push("Layer filter and/or custom parameters changed"),e.why.source.push("Layer filter and/or custom parameters changed"),e.mesh=!0,e.source=!0,e.queryFilter=!0),h&&(e.why.source.push("Layer required fields changed"),e.source=!0),ie(n,this._queryInfo)&&(this._queryInfo=n),this._schema=t,this._resolver.resolve()}whenInitialized(){return this._resolver.promise}async applyUpdate(e){if(e.queryFilter||e.source&&this._didEdit)return this.refresh(),void(this._didEdit=!1);this._subscriptions.forEach((t=>t.applyUpdate(e))),await this.resend()}refresh(){for(const e of this._tiles())this.unsubscribe(e),this.subscribe(e)}subscribe(e){const t=new Pe(e);this._subscriptions.set(e.id,t)}unsubscribe(e){const t=this.get(e.id);r(t)&&t.abort(),this._subscriptions.delete(e.id)}createQuery(e={}){const t=this._queryInfo.historicMoment?new Date(this._queryInfo.historicMoment):null;return new ne({...this._queryInfo,historicMoment:t,...e})}get(e){return this._subscriptions.has(e)?this._subscriptions.get(e):null}async queryLastEditDate(){throw new Error("Service does not support query type")}async query(e){throw new Error("Service does not support query")}*_tiles(){const e=Array.from(this._subscriptions.values());for(const t of e)yield t.tile}async edit(e,t){const s=Array.from(this._subscriptions.values()),r=s.map((({tile:e})=>e));for(const e of s)e.removeIds(t);if(e.length){const s=r.map((t=>{const s=this.createTileQuery(t);return s.objectIds=e,{tile:t,query:s}})).map((async({tile:e,query:t})=>({tile:e,result:await this.query(t),query:t}))),i=(await m(s)).map((async({tile:s,result:r})=>{if(!r.hasFeatures&&!t.length&&!e.length)return;const i=this._subscriptions.get(s.key.id);i&&i.edit(r,e)}));await f(i)}this._didEdit=!0}}const De=z.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource");class ze extends Le{constructor(e){super(e),this.type="feature",this.mode="on-demand",this._adapter=ke(e.serviceInfo),this._queue=new ue({concurrency:8,process:async e=>{if(y(e),r(e.tile)){const t=e.tile.key.id,{signal:s}=e,r=i("esri-tiles-debug")?{tile:t.replace(/\//g,"."),depth:e.depth}:void 0,a=await this._adapter.executeQuery(e.query,{signal:s,query:{...r,...this._schema.customParameters}});return a.level=e.tile.key.level,a}return this._adapter.executeQuery(e.query,{...e,query:this._schema.customParameters})}}),this._patchQueue=new ue({concurrency:8,process:async e=>{if(y(e),r(e.tile)){const t=e.tile.key.id,{signal:s}=e,r=i("esri-tiles-debug")?{tile:t.replace(/\//g,"."),depth:e.depth}:void 0,a=await this._adapter.executeQuery(e.query,{signal:s,query:{...r,...this._schema.customParameters}});return a.level=e.tile.key.level,a}return this._adapter.executeQuery(e.query,{...e,query:this._schema.customParameters})}})}destroy(){super.destroy(),this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()}get updating(){return!!this._queue.length||Array.from(this._subscriptions.values()).some((e=>!e.done))}get maxRecordCountFactor(){const{query:e}=this._serviceInfo.capabilities;return e.supportsMaxRecordCountFactor?4:null}get maxPageSize(){var e;const{query:t}=this._serviceInfo.capabilities;return(null!=(e=t.maxRecordCount)?e:8e3)*o(this.maxRecordCountFactor,1)}get pageSize(){return Math.min(8e3,this.maxPageSize)}enableEvent(e,t){}subscribe(e){super.subscribe(e);const t=this._subscriptions.get(e.id);this._fetchDataTile(e).catch((t=>{_(t)||De.error(new D("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t}))})).then((()=>t.end()))}unsubscribe(e){super.unsubscribe(e)}readers(e){return this._subscriptions.get(e).readers()}async query(e){return this._adapter.executeQuery(e,{query:this._schema.customParameters})}async queryLastEditDate(){const e=this._serviceInfo.source,t={...e.query,f:"json"};return(await L(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate}createTileQuery(e,t={}){var s;const r=this.createQuery(t);return r.quantizationParameters=null!=(s=t.quantizationParameters)?s:e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,r.quantizationParameters&&"esriGeometryPolyline"===this._serviceInfo.geometryType&&(r.maxAllowableOffset=e.resolution),r}async _executePatchQuery(e,t,s,i){const a=t.clone();a.outFields=[this._serviceInfo.objectIdField,...s],a.returnCentroid=!1,a.returnGeometry=!1;const o=r(a.start)?a.start/8e3:0,n=i.signal;return this._patchQueue.push({tile:e,query:a,signal:n,depth:o})}async _resend(e,t){const{query:i,message:a}=e,o=r(i.outFields)?i.outFields:[],n=this._queryInfo.outFields,h=n.filter((e=>-1===o.indexOf(e)));if(s(a.addOrUpdate))this._onMessage({...a,type:"append"});else if(h.length)try{const e=this._subscriptions.get(a.id).tile,s=await this._executePatchQuery(e,i,h,t);y(t),i.outFields=n,a.addOrUpdate.joinAttributes(s),this._onMessage({...a,end:a.end,type:"append"})}catch(e){}else this._onMessage({...a,type:"append"})}async _resendSubscription(e){if(e.empty)return this._onMessage({id:e.tile.id,addOrUpdate:null,end:!1,type:"append"});const t=e.signal;for(const s of e.requests.done)await this._resend(s,{signal:t});return r(e.edits)?this._onMessage(e.edits):void 0}async resend(){const e=Array.from(this._subscriptions.values());await Promise.all(e.map((e=>this._resendSubscription(e))))}}const Ge=i("esri-mobile"),Qe={maxDrillLevel:Ge?1:4,maxRecordCountFactor:Ge?1:3};class Ne extends ze{constructor(e){super(e)}async _fetchDataTile(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,s=this._subscriptions.get(e.key.id),r=s.signal,i=e.getQuantizationParameters();let a=0;const o=async(n,h)=>{const u=this._queryInfo,c=this.createTileQuery(n,{maxRecordCountFactor:t?Qe.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:i});a++;try{const t=await this._queue.push({tile:e,query:c,signal:r,depth:h});if(a--,y(r),!t)return;if(u!==this._queryInfo)return void o(n,h);if(t.exceededTransferLimit&&h<Qe.maxDrillLevel){for(const e of n.createChildTiles())o(e,h+1);return}const i={id:e.id,addOrUpdate:t,end:0===a,type:"append"};s.add({query:c,message:i}),this._onMessage(i)}catch(t){_(t)||this._onMessage({id:e.id,addOrUpdate:null,end:!0,type:"append"})}};o(e,0)}}function Be(e,t){const s=e.weakClone();if(r(e.geometry)){const r=q(t,e.geometry.coords[0]),i=M(t,e.geometry.coords[1]);s.geometry=new $([],[r,i])}return s}function Ve(e,t){const s=ce(9,function(e){return"esriGeometryPoint"===e?e=>r(e.geometry)?{minX:e.geometry.coords[0],minY:e.geometry.coords[1],maxX:e.geometry.coords[0],maxY:e.geometry.coords[1]}:{minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}:e=>{let t=1/0,s=1/0,i=-1/0,a=-1/0;return r(e.geometry)&&e.geometry.forEachVertex(((e,r)=>{t=Math.min(t,e),s=Math.min(s,r),i=Math.max(i,e),a=Math.max(a,r)})),{minX:t,minY:s,maxX:i,maxY:a}}}(t));return s.load(e),s}class Xe{constructor(e,t){this.onUpdate=e,this._geometryType=t,this._objectIdToFeature=new Map}get _features(){const e=[];return this._objectIdToFeature.forEach((t=>e.push(t))),e}add(e){this._objectIdToFeature.set(e.objectId,e),this._index=null}get(e){return this._objectIdToFeature.has(e)?this._objectIdToFeature.get(e):null}forEach(e){this._objectIdToFeature.forEach(e)}search(e){return this._index||(this._index=Ve(this._features,this._geometryType)),function(e,t){return e.search({minX:t.bounds[0],minY:t.bounds[1],maxX:t.bounds[2],maxY:t.bounds[3]})}(this._index,e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),this._index=null,t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._objectIdToFeature.size}}class Ye extends Le{constructor(e){super(e),this.type="geoevent",this._dataReceiveEventEnabled=!1,this._level=0,this._updateInfo={websocket:0,client:0};const{outSR:t}=e,{geometryType:s,objectIdField:r,timeInfo:i,purgeOptions:a,source:o,spatialReference:n,serviceFilter:h,maxReconnectionAttempts:u,maxReconnectionInterval:c,updateInterval:l,enableDataReceived:d,customParameters:p}=e.serviceInfo,g=new Xe(this._onUpdate.bind(this),s),m=new de(g,r,i,a),f=pe(o,n,t,s,h,u,c,p);this._store=g,this._manager=m,this._connection=f,this._quantize=function(e){return"esriGeometryPoint"===e?Be:(t,s)=>{const r=t.weakClone(),i=new $,a=T(i,t.geometry,!1,!1,e,s,!1,!1);return r.geometry=a,r}}(s),this._dataReceiveEventEnabled=d,this._handles=[this._connection.on("feature",(e=>this._onFeature(e))),this._connection.watch("connectionStatus",(e=>this.events.emit("connectionStatus",e))),this._connection.watch("errorString",(e=>this.events.emit("errorString",e)))];let y=performance.now();this._updateIntervalId=setInterval((()=>{const t=performance.now(),s=t-y;if(s>2500){y=t;const e=Math.round(this._updateInfo.client/(s/1e3)),r=Math.round(this._updateInfo.websocket/(s/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.events.emit("updateRate",{client:e,websocket:r})}e.canAcceptRequest()&&this._manager.checkForUpdates()}),l)}destroy(){super.destroy(),clearInterval(this._updateIntervalId),this._handles.forEach((e=>e.remove())),this._connection.destroy()}_fetchDataTile(){}resume(){}enableEvent(e,t){"data-received"===e&&(this._dataReceiveEventEnabled=t)}get updating(){return!1}subscribe(e){super.subscribe(e);const t=this._subscriptions.get(e.id);this._level=e.level;const s=this._getTileFeatures(e);this._onMessage({type:"append",id:e.key.id,addOrUpdate:s,end:!0}),t.didSend=!0}unsubscribe(e){super.unsubscribe(e)}*readers(e){const t=this._subscriptions.get(e),{tile:s}=t;yield this._getTileFeatures(s);for(const e of t.requests.stream.entries)r(e)&&r(e.addOrUpdate)&&(yield e.addOrUpdate)}createTileQuery(e){throw new Error("Service does not support tile  queries")}async resend(){this._subscriptions.forEach((e=>{const{tile:t}=e,s={type:"append",id:t.id,addOrUpdate:this._getTileFeatures(t),end:!0};this._onMessage(s)}))}_getTileFeatures(e){const t=this._store.search(e).map((t=>this._quantize(t,e.transform)));return X.fromOptimizedFeatures(t,this._serviceInfo.geometryType,e.transform)}_onFeature(e){this._updateInfo.websocket++;try{this._dataReceiveEventEnabled&&this.events.emit("feature",e);const t=C(e,this._serviceInfo.geometryType,!1,!1,this._serviceInfo.objectIdField);this._manager.add(t)}catch(e){}}_onUpdate(e,t){r(e)&&(this._updateInfo.client+=e.length),this._subscriptions.forEach(((e,t)=>{e.didSend&&e.tile.level===this._level&&this._onMessage({type:"append",id:t,addOrUpdate:null,clear:!0,end:!1})})),this._subscriptions.forEach(((e,t)=>{if(!e.didSend||e.tile.level!==this._level)return;const s=e.tile,r={type:"append",id:t,addOrUpdate:this._getTileFeatures(s),remove:[],end:!0,status:Oe.empty()};e.requests.stream.enqueue(r),this._onMessage(r)}))}}const He=z.getLogger("esri.views.2d.layers.features.sources.FeatureSource");class Ze extends ze{constructor(e){super(e)}async _fetchDataTile(e){const t=this._subscriptions.get(e.key.id);let s=!1,r=0,i=0;const a=(r,a)=>{i--,y(t);const o=e.id,n=r.reader,h=r.query;if(!n.exceededTransferLimit){if(s=!0,0!==a&&!n.hasFeatures){const e={id:o,addOrUpdate:n,end:0===i,type:"append"};return t.add({message:e,query:h}),void this._onMessage(e)}const e={id:o,addOrUpdate:n,end:0===i,type:"append"};return t.add({message:e,query:h}),void this._onMessage(e)}const u={id:o,addOrUpdate:n,end:s&&0===i,type:"append"};t.add({message:u,query:h}),this._onMessage(u)};let o=0,n=0;for(;!s&&n++<20;){let n;for(let h=0;h<o+1;h++){const o=r++;i++,n=this._fetchDataTilePage(e,o,t).then((e=>e&&a(e,o))).catch((t=>{s=!0,_(t)||(He.error(new D("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t})),this._onMessage({id:e.id,addOrUpdate:null,end:s,type:"append"}))}))}await n,y(t),o=Math.min(o+2,6)}}async _fetchDataTilePage(e,t,s){y(s);const i=this._queryInfo,a={start:this.pageSize*t,num:this.pageSize,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()};r(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const o=this.createTileQuery(e,a);try{const r=s.signal,a=await this._queue.push({tile:e,query:o,signal:r,depth:t});return y(s),a?i!==this._queryInfo?this._fetchDataTilePage(e,t,s):{reader:a,query:o}:null}catch(e){return I(e),null}}}const Je=z.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource");function $e(e,t,s){const r=e.getXHydrated(),i=e.getYHydrated(),a=t.getColumnForX(r),o=Math.floor(t.normalizeCol(a));return`${s}/${Math.floor(t.getRowForY(i))}/${o}`}function We(e,t){if(s(e))return null;const r=t.transform,i=e.getQuantizationTransform();if(s(i)){const[t,s]=r.scale,[i,a]=r.translate,o=-i/t,n=1/t,h=a/s,u=1/-s;return e.transform(o,h,n,u)}const[a,o]=i.scale,[n,h]=i.translate,[u,c]=r.scale,[l,d]=r.translate,p=a/u,g=(n-l)/u,m=o/c,f=(-h+d)/c;return e.transform(g,f,p,m)}class Ke extends ze{constructor(e){super(e),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new n(1e3),this._store=e.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(e,t){super.update(e,t),this._hasAggregates=e.targets.aggregate}async resend(e=!1){if(await this._downloadPromise,this._invalidated||e){const e=h(this._schema.featureCount,"Expected featureCount to be defined");return this._invalidated=!1,this._subscriptions.forEach((e=>e.clear())),this._downloadPromise=this._download(e),void await this._downloadPromise}const t=this._queries.map((({query:e,reader:t})=>this._sendPatchQuery(e,t)));await Promise.all(t),this._subscriptions.forEach((e=>{e.requests.done.forEach((e=>this._onMessage(e.message)))}))}async refresh(){await this.resend(!0)}async _sendPatchQuery(e,t){const s=r(e.outFields)?e.outFields:[],i=this._queryInfo.outFields,a=i.filter((e=>-1===s.indexOf(e)));if(!a.length)return;const o=e.clone(),n=this._signal;o.returnGeometry=!1,o.returnCentroid=!1,o.outFields=a,e.outFields=i;const h=await this._queue.push({query:o,depth:0,signal:n});y({signal:n}),t.joinAttributes(h)}async _fetchDataTile(e){if(!this._downloadPromise){const e=h(this._schema.featureCount,"Expected featureCount to be defined");this._downloadPromise=this._download(e)}const t=this._store.search(e),s=this._subscriptions.get(e.key.id),r=t.length-1;for(let i=0;i<r;i++){const r=We(t[i],e),a={type:"append",id:e.id,addOrUpdate:r,end:!1,status:Oe.empty()};s.add({query:null,message:a}),this._hasAggregates||await v(1),this._onMessage(a)}const i=We(r>=0?t[r]:null,e),a=this._didSendEnd,o={type:"append",id:e.id,addOrUpdate:i,end:a,status:Oe.empty()};s.add({query:null,message:o}),this._onMessage(o)}async _download(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const r=Math.ceil(e/this.pageSize),i=Array.from({length:r},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())).map((e=>this._downloadPage(e,t,s)));await Promise.all(i),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(e){Je.error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",e)}this._sendEnd(),this._loading=!1}async _downloadPage(e,t,s){const i=this.pageSize,a={start:e*i,num:i,cacheHint:!0};r(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const o=this.createQuery(a),n=this._signal,h=await this._queue.push({query:o,depth:e,signal:n});y({signal:n}),this._queries.push({query:o,reader:h}),this._store.insert(h),s.add(h.instance);const u=h.getCursor();for(;u.next();)t.set(u.getDisplayId());this._send(h)}_send(e){if(!this._subscriptions.size)return;let t=null;const i=new Map,a=new Set,o=new Map;this._subscriptions.forEach((e=>{var s;const r=e.tile;i.set(r.key.id,null),t=r.tileInfoView,a.add(r.level);const{row:n,col:h}=r.key,u=`${r.level}/${n}/${h}`,c=null!=(s=o.get(u))?s:[];c.push(e),o.set(u,c)}));for(const r of a){const a=t.getLODInfoAt(r),n=e.getCursor();for(;n.next();){const e=$e(n,a,r),t=n.getIndex();if(o.has(e))for(const r of o.get(e)){const e=r.tile.id;let a=i.get(e);s(a)&&(a=[],i.set(e,a)),a.push(t)}}}i.forEach(((t,s)=>{if(r(t)){const r=this._subscriptions.get(s),i={type:"append",id:s,addOrUpdate:We(R.from(e,t),r.tile),end:!1,status:Oe.empty()};r.add({query:null,message:i}),this._onMessage(i)}}))}_sendEnd(){this._subscriptions.forEach((e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:Oe.empty()};e.add({query:null,message:t}),this._onMessage(t)})),this._didSendEnd=!0}}function et(e,t,s,r,i,a){const n=function(e,t,s,r,i,a){switch(e.type){case"snapshot":return{type:"feature",origin:"snapshot",featureCount:o(e.featureCount,0),serviceInfo:e,onMessage:r,outSR:t,tileInfoView:s,canAcceptRequest:i,store:a};case"stream":return{type:"geoevent",serviceInfo:e,onMessage:r,outSR:t,canAcceptRequest:i};case"memory":case"on-demand":return{type:"feature",serviceInfo:e,onMessage:r,outSR:t,origin:n(e.source),tileInfoView:s,canAcceptRequest:i}}function n(e){return Array.isArray(e)?"local":"path"in e&&P(e.path)?"hosted":"unknown"}}(e,t,s,r,i,a);switch(n.type){case"feature":switch(n.origin){case"hosted":case"local":return new Ze(n);case"snapshot":return new Ke(n);case"unknown":return new Ne(n)}case"geoevent":return new Ye(n)}}function tt(e,t,s,r){r%2&&(r+=1);let i=0,a=0,o=-90,n=90,h=-180,u=180;for(let e=0;e<r/2;e++){for(let t=0;t<5;t++){const r=(h+u)/2,a=s>r?1:0;i|=a<<29-(t+5*e),h=(1-a)*h+a*r,u=(1-a)*r+a*u}for(let s=0;s<5;s++){const r=(o+n)/2,i=t>r?1:0;a|=i<<29-(s+5*e),o=(1-i)*o+i*r,n=(1-i)*r+i*n}}e.geohashX=i,e.geohashY=a}function st(e,t,s,r,i){i%2&&(i+=1);let a=0,o=0,n=-90,h=90,u=-180,c=180;for(let e=0;e<i/2;e++){for(let t=0;t<5;t++){const s=(u+c)/2,i=r>s?1:0;a|=i<<29-(t+5*e),u=(1-i)*u+i*s,c=(1-i)*s+i*c}for(let t=0;t<5;t++){const r=(n+h)/2,i=s>r?1:0;o|=i<<29-(t+5*e),n=(1-i)*n+i*r,h=(1-i)*r+i*h}}e[2*t]=a,e[2*t+1]=o}class rt{constructor(e=[],t=8096){this._nodes=0,this._root=new it(0,0,0),this._statisticFields=e,this._pool=t?new he(8096):null}_acquire(e,t,s){this._nodes++;let i=null;return r(this._pool)&&(i=this._pool.dequeue()),r(i)?i.realloc(e,t,s):new it(e,t,s)}_release(e){this._nodes--,r(this._pool)&&this._pool.enqueue(e)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return u(this._pool,0,(e=>e.size))}get depth(){let e=0;return this._forEachNode((t=>e=Math.max(e,t.depth))),e}dropLevels(e){this._forEachNode((t=>{if(t.depth>=e)for(let e=0;e<t.children.length;e++){const s=t.children[e];t.children[e]=null,s&&this._release(s)}}))}clear(){this.dropLevels(0)}insert(e,t,s=0){const r=X.fromOptimizedFeatures([e],"esriGeometryPoint").getCursor();r.next();const i=r.readGeometry();if(!i)return;const[a,o]=i.coords,n=e.geohashX,h=e.geohashY;this.insertCursor(r,e.displayId,a,o,n,h,t,s)}insertCursor(e,t,s,r,i,a,o,n=0){let h=this._root,u=0,c=0,l=0;for(;null!==h;){if(h.depth>=n&&(h.count+=1,h.xTotal+=s,h.yTotal+=r,h.xGeohashTotal+=i,h.yGeohashTotal+=a,h.displayId=t,this._updateStatisticsCursor(e,h,1)),u>=o)return void h.add(t);const d=Math.ceil((u+1)/2),p=Math.floor((u+1)/2),g=1-u%2,m=30-(3*d+2*p),f=30-(2*d+3*p),y=(i&7*g+3*(1-g)<<m)>>m,_=(a&3*g+7*(1-g)<<f)>>f,I=y+_*(8*g+4*(1-g));c=c<<3*g+2*(1-g)|y,l=l<<2*g+3*(1-g)|_,null==h.children[I]&&(h.children[I]=this._acquire(c,l,u+1)),u+=1,h=h.children[I]}}remove(e,t){const s=X.fromOptimizedFeatures([e],"esriGeometryPoint").getCursor();s.next();const r=s.readGeometry();if(!r)return;const[i,a]=r.coords,o=e.geohashX,n=e.geohashY;this.removeCursor(s,i,a,o,n,t)}removeCursor(e,t,s,r,i,a){let o=this._root,n=0;for(;null!==o;){if(o.count-=1,o.xTotal-=t,o.yTotal-=s,o.xGeohashTotal-=r,o.yGeohashTotal-=i,this._updateStatisticsCursor(e,o,-1),n>=a)return void o.remove(e.getDisplayId());const h=Math.ceil((n+1)/2),u=Math.floor((n+1)/2),c=1-n%2,l=30-(3*h+2*u),d=30-(2*h+3*u),p=((r&7*c+3*(1-c)<<l)>>l)+((i&3*c+7*(1-c)<<d)>>d)*(8*c+4*(1-c)),g=o.children[p];1===g.count&&(this._release(g),o.children[p]=null),n+=1,o=g}}find(e,t,s){return this._root.find(e,t,s,0,0,0)}findSingleOccupancyNode(e,t,s,r,i){let a=this._root;for(;null!==a;){const o=a.depth,n=a.xNode,h=a.yNode,u=1-o%2,c=a.xGeohashTotal/a.count,l=a.yGeohashTotal/a.count;if(1===a.count&&e<c&&c<=s&&t<l&&l<=r)return a;if(o>=i){a=a.next;continue}const d=Math.ceil((o+1)/2),p=Math.floor((o+1)/2),g=30-(3*d+2*p),m=30-(2*d+3*p),f=~((1<<g)-1),y=~((1<<m)-1),_=(e&f)>>g,I=(t&y)>>m,v=(s&f)>>g,b=(r&y)>>m,x=n<<3*u+2*(1-u),w=h<<2*u+3*(1-u),S=x+8*u+4*(1-u),F=w+4*u+8*(1-u),j=Math.max(x,_),C=Math.max(w,I),T=Math.min(S,v),q=Math.min(F,b);let M=null,k=null;for(let e=C;e<=q;e++)for(let t=j;t<=T;t++){const s=t-x+(e-w)*(8*u+4*(1-u)),r=a.children[s];r&&(M||(M=r,M.next=a.next),k&&(k.next=r),k=r,r.next=a.next)}a=M||a.next}return null}getRegionDisplayIds(e,t,s,r,i){let a=this._root;const o=[];for(;null!==a;){const n=a.depth,h=a.xNode,u=a.yNode;if(n>=i){const i=a.xGeohashTotal/a.count,n=a.yGeohashTotal/a.count;e<=i&&i<=s&&t<=n&&n<=r&&a.displayIds.forEach((e=>o.push(e))),a=a.next;continue}const c=Math.ceil((n+1)/2),l=Math.floor((n+1)/2),d=1-n%2,p=30-(3*c+2*l),g=30-(2*c+3*l),m=~((1<<p)-1),f=~((1<<g)-1),y=(e&m)>>p,_=(t&f)>>g,I=(s&m)>>p,v=(r&f)>>g,b=h<<3*d+2*(1-d),x=u<<2*d+3*(1-d),w=b+8*d+4*(1-d),S=x+4*d+8*(1-d),F=Math.max(b,y),j=Math.max(x,_),C=Math.min(w,I),T=Math.min(S,v);let q=null,M=null;for(let e=j;e<=T;e++)for(let t=F;t<=C;t++){const s=t-b+(e-x)*(8*d+4*(1-d)),r=a.children[s];r&&(q||(q=r,q.next=a.next),M&&(M.next=r),M=r,r.next=a.next)}a=q||a.next}return o}getRegionStatistics(e,t,s,r,i){let a=this._root,o=0,n=0,h=0;const u={};let c=0;for(;null!==a;){const l=a.depth,d=a.xNode,p=a.yNode;if(l>=i){const i=a.xGeohashTotal/a.count,l=a.yGeohashTotal/a.count;e<i&&i<=s&&t<l&&l<=r&&(o+=a.count,n+=a.xTotal,h+=a.yTotal,1===a.count&&(c=a.displayId),this._aggregateStatistics(u,a.statistics)),a=a.next;continue}const g=Math.ceil((l+1)/2),m=Math.floor((l+1)/2),f=1-l%2,y=30-(3*g+2*m),_=30-(2*g+3*m),I=~((1<<y)-1),v=~((1<<_)-1),b=(e&I)>>y,x=(t&v)>>_,w=(s&I)>>y,S=(r&v)>>_,F=d<<3*f+2*(1-f),j=p<<2*f+3*(1-f),C=F+8*f+4*(1-f),T=j+4*f+8*(1-f),q=Math.max(F,b),M=Math.max(j,x),k=Math.min(C,w),U=Math.min(T,S);let E=null,R=null;for(let i=M;i<=U;i++)for(let l=q;l<=k;l++){const d=l-F+(i-j)*(8*f+4*(1-f)),p=a.children[d];if(p){if(i!==M&&i!==U&&l!==q&&l!==k){const i=p.xGeohashTotal/p.count,a=p.yGeohashTotal/p.count;e<i&&i<=s&&t<a&&a<=r&&(o+=p.count,n+=p.xTotal,h+=p.yTotal,1===p.count&&(c=p.displayId),this._aggregateStatistics(u,p.statistics));continue}E||(E=p,E.next=a.next),R&&(R.next=p),R=p,p.next=a.next}}a=E||a.next}return{count:o,attributes:this._normalizeStatistics(u,o),xTotal:n,yTotal:h,referenceId:c}}_forEachNode(e){let t=this._root;for(;null!==t;){const s=this._linkChildren(t)||t.next;e(t),t=s}}_linkChildren(e){let t=null,s=null;for(let r=0;r<=e.children.length;r++){const i=e.children[r];i&&(t||(t=i,t.next=e.next),s&&(s.next=i),s=i,i.next=e.next)}return t}_updateStatisticsCursor(e,t,s){for(const r of this._statisticFields){const i=r.name,a=r.inField?e.readAttribute(r.inField):e.getComputedNumericAtIndex(r.inFieldIndex);switch(r.statisticType){case"norm":{t.statistics[i]||(t.statistics[i]={});const o=r.inNormalizationField,n=e.readAttribute(o),h=t.statistics[i].onStatisticField||0,u=t.statistics[i].onStatisticNormalizationField||0;null==a||isNaN(a)||null==n||0===n||isNaN(n)||(t.statistics[i].onStatisticField=h+s*a,t.statistics[i].onStatisticNormalizationField=u+s*n);break}case"sum":case"avg":{t.statistics[i]||(t.statistics[i]={value:0,nanCount:0});const e=t.statistics[i].value,r=t.statistics[i].nanCount;null==a||isNaN(a)?t.statistics[i].nanCount=r+s:t.statistics[i].value=e+s*a;break}case"avg_angle":{t.statistics[i]||(t.statistics[i]={x:0,y:0,nanCount:0});const e=t.statistics[i].x,r=t.statistics[i].y,o=t.statistics[i].nanCount,n=Math.PI/180;null==a||isNaN(a)?t.statistics[i].nanCount=o+s:(t.statistics[i].x=e+s*Math.cos(a*n),t.statistics[i].y=r+s*Math.sin(a*n));break}case"mode":{t.statistics[i]||(t.statistics[i]={});const e=t.statistics[i][a]||0;t.statistics[i][a]=e+s;break}}}}_aggregateStatistics(e,t){for(const s of this._statisticFields){const r=s.name;switch(s.statisticType){case"sum":case"avg":case"avg_angle":case"mode":case"norm":e[r]||(e[r]={});for(const s in t[r]){const i=e[r][s]||0;e[r][s]=i+t[r][s]}}}}_normalizeStatistics(e,t){const s={};for(const r of this._statisticFields){const i=r.name;switch(r.statisticType){case"norm":{const r=e[i];if(t&&null==r.onStatisticNormalizationField)break;if(t&&r.onStatisticNormalizationField){s[i]=r.onStatisticField/r.onStatisticNormalizationField;break}s[i]=0;break}case"sum":{if(!t)break;const{value:r,nanCount:a}=e[i];if(!(t-a))break;s[i]=r;break}case"avg":{if(!t)break;const{value:r,nanCount:a}=e[i];if(!(t-a))break;s[i]=r/(t-a);break}case"avg_angle":{if(!t)break;const{x:r,y:a,nanCount:o}=e[i];if(!(t-o))break;const n=r/(t-o),h=a/(t-o),u=180/Math.PI,c=Math.atan2(h,n)*u;s[i]=c;break}case"mode":{const t=e[i];let r=0,a=null;for(const e in t){const s=t[e];s>r&&(r=s,a=e)}s[i]="null"===a?null:a;break}}}return s}}class it{constructor(e,t,s){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this.children=new Array(32);for(let e=0;e<this.children.length;e++)this.children[e]=null;this.xNode=e,this.yNode=t,this.depth=s}realloc(e,t,s){for(let e=0;e<this.children.length;e++)this.children[e]=null;return this.xNode=e,this.yNode=t,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}add(e){this.displayIds.add(e)}remove(e){this.displayIds.delete(e)}getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s);return function(e,t){let s=-90,r=90,i=-180,a=180;for(let o=0;o<t;o++){const t=Math.ceil((o+1)/2),n=Math.floor((o+1)/2),h=1-o%2,u=30-(3*t+2*n),c=30-(2*t+3*n),l=3*h+2*(1-h),d=2*h+3*(1-h),p=3*h+7*(1-h)<<c,g=(7*h+3*(1-h)<<u&e.geohashX)>>u,m=(p&e.geohashY)>>c;for(let e=l-1;e>=0;e--){const t=(i+a)/2,s=g&1<<e?1:0;i=(1-s)*i+s*t,a=(1-s)*t+s*a}for(let e=d-1;e>=0;e--){const t=(s+r)/2,i=m&1<<e?1:0;s=(1-i)*s+i*t,r=(1-i)*t+i*r}}return[i,s,a,r]}({geohashX:this.xNode<<r,geohashY:this.yNode<<i},this.depth)}find(e,t,s,r,i,a){if(r>=s)return this;const o=1-r%2,n=3*o+2*(1-o),h=2*o+3*(1-o),u=30-i-n,c=30-a-h,l=((e&7*o+3*(1-o)<<u)>>u)+((t&3*o+7*(1-o)<<c)>>c)*(8*o+4*(1-o)),d=this.children[l];return null==d?null:d.find(e,t,s,r+1,i+n,a+h)}}class at extends W{constructor(e,t,s,r,i){super(new $([],[t,s]),r,null,e),this.geohashBoundsInfo=i}get count(){return this.attributes.cluster_count}static create(e,t,s,r,i,a,o,n){const h=new at(t,s,r,a,o);return h.displayId=e.createDisplayId(!0),h.referenceId=n,h.tileLevel=i,h}update(e,t,s,r,i,a){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=i,this.referenceId=null,this.referenceId=a,this}toJSON(){return{objectId:this.objectId,referenceId:1===this.attributes.cluster_count?this.referenceId:null,attributes:{...this.attributes,clusterId:this.objectId},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function ot(e){return 57.29577951308232*e}class nt extends A{constructor(e,t,s){super(e,s),this.events=new re,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=ye(t,me.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}async updateSchema(e,t){const r=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch(e){}const a=ie(r,t);t&&(!s(a)||e.source||e.storage.filters)?((ae(a,"params.fields")||!this._tree||e.source)&&(this._tree=new rt(this._statisticFields),this._rebuildTree(),i("esri-2d-update-debug")&&console.debug("Aggregate mesh needs update due to tree changing")),i("esri-2d-update-debug")&&console.debug("Applying Update - ClusterStore:",a),e.targets[t.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):r&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet((s=>{if(!e.has(s)){const e=t.lookupByDisplayIdUnsafe(s);this._remove(e)}}))}sweepClusters(e,t,s){this._clusters.forEach(((r,i)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(i))}))}onTileData(e,t,r,i,a=!0){if(!this._schema||s(t.addOrUpdate))return t;const o=this._getTransforms(e,this._spatialReference);{const e=t.addOrUpdate.getCursor();for(;e.next();)this._update(e,i)}if(t.status.mesh||!a)return t;const n=new Array,h=this._schema.params.clusterRadius;this._getClustersForTile(n,e,h,r,o),t.addOrUpdate=X.fromOptimizedFeatures(n,"esriGeometryPoint"),t.addOrUpdate.attachStorage(r),t.end=!0;{const s=t.addOrUpdate.getCursor();for(;s.next();){const t=s.getDisplayId();this._bitsets.computed.unset(t),this.setComputedAttributes(r,s,t,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit("valueRangesChanged",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const t=e[0].level;this._tileLevel=t,this._setGeohashLevel(t)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach((e=>{this._tiles.delete(e.key.id),this._markTileClustersForDeletion(e,s)}))}getAggregate(e){for(const t of this._clusters.values())if((null==t?void 0:t.displayId)===e)return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())(null==t?void 0:t.tileLevel)===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);if(!t)return[];const s=t.geohashBoundsInfo;return this._tree.getRegionDisplayIds(s.xLL,s.yLL,s.xTR,s.yTR,s.level)}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if((null==t?void 0:t.referenceId)===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){for(const[t,s]of this._clusters)s&&e(s,t)}size(){let e=0;return this.forEach((t=>e++)),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),i=this._geohashBuf[2*t],a=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,i,a,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,i=t.isVisible(s);if(i===r.has(s))return;if(!i)return void this._remove(e);const a=e.getXHydrated(),o=e.getYHydrated();if(!this._setGeohash(s,a,o))return;const n=this._geohashBuf[2*s],h=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,a,o,n,h,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const i=ot(t/ge.radius),a=i-360*Math.floor((i+180)/360);st(r,e,ot(Math.PI/2-2*Math.atan(Math.exp(-s/ge.radius))),a,12)}else{const i=_e({x:t,y:s},this._spatialReference,me.WGS84);if(!i)return!1;st(r,e,i.y,i.x,12)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,i,a,o,n=!0){const h=this._schema.params.clusterPixelBuffer,u=2*i,l=this._getGeohashLevel(t.key.level),d=Math.ceil(2**t.key.level*Ie/u),p=Math.ceil(h/u)+0,g=Math.ceil(Ie/u),{row:m,col:f}=t.key,y=f*Ie,_=m*Ie,I=Math.floor(y/u)-p,v=Math.floor(_/u)-p,b=I+g+2*p,x=v+g+2*p,w=t.tileInfoView.getLODInfoAt(t.key.level);for(let i=I;i<=b;i++)for(let h=v;h<=x;h++){let u=i;w.wrap&&(u=i<0?i+d:i%d);const p=w.wrap&&i<0,g=w.wrap&&i%d!==i,m=this._lookupCluster(a,w,t.key.level,u,h,l);if(r(m)){const t=c(o,(e=>p?e.left:g?e.right:e.tile));if(n&&s(t))continue;if(!m.count)continue;if(r(t)&&n){const s=m.geometry.clone();let i=m.attributes;s.coords[0]=q(t,s.coords[0]),s.coords[1]=M(t,s.coords[1]),1===m.count&&r(m.referenceId)&&(i={...m.attributes,referenceId:m.referenceId});const a=new J(s,i);a.displayId=m.displayId,e.push(a)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),12)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=1*(Math.floor(t/1)+1)-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=fe(t);if(!r)return{tile:s,left:null,right:null};const[i,a]=r.valid;return{tile:s,left:{...s,translate:[a,e.bounds[3]]},right:{...s,translate:[i-a+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,i=2*r;let a=s%2?t*i:t*i-r;const o=s*i;let n=a+i;const h=o-i,u=2**e.level*Ie;e.wrap&&a<0&&(a=0),e.wrap&&n>u&&(n=u);const c=a/Ie,l=o/Ie,d=n/Ie,p=h/Ie;return[e.getXForColumn(c),e.getYForRow(l),e.getXForColumn(d),e.getYForRow(p)]}_lookupCluster(e,t,s,i,a,o){const n=this._getClusterId(s,i,a),h=this._clusters.get(n),[u,c,l,d]=this._getClusterBounds(t,i,a),p={x:u,y:c},g={x:l,y:d};let m=0,f=0,y=0,_=0;if(this._spatialReference.isWebMercator){{const e=ot(p.x/ge.radius);m=e-360*Math.floor((e+180)/360),f=ot(Math.PI/2-2*Math.atan(Math.exp(-p.y/ge.radius)))}{const e=ot(g.x/ge.radius);y=e-360*Math.floor((e+180)/360),_=ot(Math.PI/2-2*Math.atan(Math.exp(-g.y/ge.radius)))}}else{const e=_e(p,this._spatialReference,me.WGS84),t=_e(g,this._spatialReference,me.WGS84);if(!e||!t)return null;m=e.x,f=e.y,y=t.x,_=t.y}const I={geohashX:0,geohashY:0},v={geohashX:0,geohashY:0};tt(I,f,m,o),tt(v,_,y,o);const b=I.geohashX,x=I.geohashY,w=v.geohashX,S=v.geohashY,F={xLL:b,yLL:x,xTR:w,yTR:S,level:o},j=this._tree.getRegionStatistics(b,x,w,S,o),{count:C,xTotal:T,yTotal:q,referenceId:M}=j,k=C?T/C:0,U=C?q/C:0;if(0===C)return this._clusters.set(n,null),null;const E={cluster_count:C,...j.attributes},R=r(h)?h.update(k,U,s,E,F,M):at.create(e,n,k,U,s,E,F,M);return 0===C&&(R.geometry.coords[0]=(u+l)/2,R.geometry.coords[1]=(c+d)/2),this._clusters.set(n,R),this._updateAggregateValueRangeForCluster(R,R.tileLevel),R}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,i=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(i,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&i===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(Ie/s),{row:i,col:a}=e.key,o=a*Ie,n=i*Ie,h=Math.floor(o/s),u=Math.floor(n/s);for(let t=h;t<h+r;t++)for(let s=u;s<u+r;s++)this._markForDeletion(e.key.level,t,s)}}function ht(e){if(!_(e)&&!function(e){return"worker:port-closed"===e.name}(e))throw e}function ut(e){return"feature"===e.type&&"snapshot"===e.mode}let ct=class extends t{constructor(){super(...arguments),this._storage=new Y,this._markedIdsBufId=this._storage.createBitset(),this._lastCleanup=performance.now(),this._cleanupNeeded=!1,this._invalidated=!1,this._tileToResolver=new Map,this._didEdit=!1,this.tileStore=null,this.config=null,this.processor=null,this.remoteClient=null,this.service=null}initialize(){this._initAttributeStore(),this._initStores(),this._initQueryEngine(),this._initSource(),this._updateQueue=new ue({concurrency:"geoevent"===this._source.type?1:4,process:(e,t)=>this._onTileMessage(e,{signal:t})}),this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),this.watch("updating",(e=>!e&&this.onIdle()))]),this._checkUpdating=setInterval((()=>this.notifyChange("updating")),300)}async startup(){this._initAttributeStore()}_initSource(){const e=this.tileStore.tileScheme;this._source=et(this.service,this.spatialReference,e,((e,t)=>(this._invalidated=!0,this._patchTile(e,t))),(()=>this._updateQueue.length<50),this.featureStore),this._proxyEvents()}_proxyEvents(){if("geoevent"===this._source.type){const e=this._source.events;this.handles.add([e.on("connectionStatus",(e=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:e}).catch(ht))),e.on("errorString",(e=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:e}).catch(ht))),e.on("feature",(e=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(ht))),e.on("updateRate",(e=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...e}}).catch(ht)))])}}_initAttributeStore(){this.attributeStore?this.attributeStore.invalidateResources():this.attributeStore=new H({type:"remote",initialize:(e,t)=>b(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.initialize",e,{signal:t}).catch(ht)),update:(e,t)=>b(this.remoteClient.invoke("tileRenderer.featuresView.attributeView.requestUpdate",e,{signal:t}).catch(ht)),render:e=>b(this.remoteClient.invoke("tileRenderer.featuresView.requestRender",void 0,{signal:e}).catch(ht))},this.config)}_initStores(){const e="snapshot"===this.service.type?"snapshot":"on-demand",t={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new O(t,this._storage,e),this.aggregateStore=new nt(t,this.spatialReference,this._storage),this.handles.add(this.aggregateStore.events.on("valueRangesChanged",(e=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:e.valueRanges}}).catch(ht)})))}_initQueryEngine(){var e;const t=this;null==(e=this.queryEngine)||e.destroy(),this.queryEngine=new k({definitionExpression:this.config.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds:e=>t.aggregateStore.getFeatureDisplayIdsForAggregate(e).map((e=>t.getObjectId(e)))},timeInfo:this.service.timeInfo})}destroy(){this._updateQueue.destroy(),this._source.destroy(),this.queryEngine.destroy(),this.attributeStore&&this.attributeStore.destroy();for(const e of this.tileStore.tiles)this._source.unsubscribe(e);clearInterval(this._checkUpdating)}get fieldsIndex(){return new U(this.service.fields)}get hasAggregates(){return!!this.config.schema.targets.aggregate}get spatialReference(){return this.tileStore.tileScheme.spatialReference}get updating(){return this.isUpdating()}isUpdating(){return this._source.updating||!!this._updateQueue.length}enableEvent(e){this._source.enableEvent(e.name,e.value)}pause(){this._updateQueue.pause(),this._updateQueue.clear()}async update(e,t){this._set("config",t),this._schema=t.schema,this._initQueryEngine(),await Promise.all([this._source.update(e,t.schema.source),this.featureStore.updateSchema(e,t.schema.targets.feature),this.attributeStore.update(e,t),this.attributeStore.updateFilters(e,this)]),await this.aggregateStore.updateSchema(e,t.schema.targets.aggregate),i("esri-2d-update-debug")&&e.describe()}async applyUpdate(e){e.mesh&&this.clearTiles(),this._updateQueue.resume(),await this._source.applyUpdate(e),this.notifyChange("updating"),await x(this,"updating",!0),this.hasAggregates&&(await v(10),await x(this,"updating",!0))}async onEdits({edits:e}){i("esri-2d-update-debug")&&console.debug("Applying Edit:",e),this._didEdit=!0;try{const t=e.removed.map((e=>e.objectId&&-1!==e.objectId?e.objectId:this._lookupObjectIdByGlobalId(e.globalId))),s=e.addOrModified.map((({objectId:e})=>e));this.featureStore.invalidate(),await this._source.edit(s,t),this.clearTiles(),this.notifyChange("updating"),this.aggregateStore.clear(),await this._source.resend(),await x(this,"updating",!0)}catch(e){}}async refresh(e){if(!e){const e=Oe.empty();return e.storage.filters=!0,this.applyUpdate(e)}this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(),this._cleanupNeeded=!0,this.notifyChange("updating"),await x(this,"updating",!0)}clearTiles(){for(const e of this.tileStore.tiles)this.processor.onTileClear(e)}onTileUpdate(e){this.aggregateStore.onTileUpdate(e);for(const t of e.added)this._source.subscribe(t),this._level=t.level;for(const t of e.removed)this._source.unsubscribe(t),this._cleanupNeeded=!0,this._tileToResolver.has(t.id)&&(this._tileToResolver.get(t.id).resolve(),this._tileToResolver.delete(t.id));this.notifyChange("updating")}onIdle(){this._invalidated&&((this.hasAggregates||"heatmap"===this.processor.type)&&this._repushCurrentLevelTiles(),this._invalidated=!1),this._markAndSweep()}async querySummaryStatistics({query:e,params:t}){return this.queryEngine.executeQueryForSummaryStatistics(e,t)}async queryUniqueValues({query:e,params:t}){return this.queryEngine.executeQueryForUniqueValues(e,t)}async queryClassBreaks({query:e,params:t}){return this.queryEngine.executeQueryForClassBreaks(e,t)}async queryHistogram({query:e,params:t}){return this.queryEngine.executeQueryForHistogram(e,t)}queryExtent(e){return this.queryEngine.executeQueryForExtent(e)}queryFeatures(e){return this.queryEngine.executeQuery(e)}async queryVisibleFeatures(e){const t=await this.queryEngine.executeQuery(e),s=t.objectIdFieldName;return t.features=t.features.filter((e=>{const t=e.attributes[s],r=this.getDisplayId(t);return this.attributeStore.isVisible(r)})),t}queryFeatureCount(e){return this.queryEngine.executeQueryForCount(e)}queryLatestObservations(e){return this.queryEngine.executeQueryForLatestObservations(e)}queryObjectIds(e){return this.queryEngine.executeQueryForIds(e)}async queryStatistics(){return this.featureStore.storeStatistics}getObjectId(e){return this.featureStore.lookupObjectId(e,this._storage)}getDisplayId(e){if(this._schema.targets.aggregate){const t=this.aggregateStore.getDisplayId(e);if(s(t)){const t=this.featureStore.lookupDisplayId(e);return this.aggregateStore.getDisplayIdForReferenceId(t)}return t}return this.featureStore.lookupDisplayId(e)}getFeatures(e){const t=[],s=[];for(const i of e)if(E(i)){const e=this.getAggregate(i);if(r(e))if(r(e.referenceId)){const s=this.getFeature(e.referenceId);r(s)&&t.push(s)}else s.push(e)}else{const e=this.getFeature(i);r(e)&&t.push(e)}return{features:t,aggregates:s}}getFeature(e){const t=this.featureStore.lookupFeatureByDisplayId(e,this._storage);if(s(t))return null;const r=t.readHydratedGeometry(),i=w(r,t.geometryType,t.hasZ,t.hasM);return{attributes:t.readAttributes(),geometry:i}}getAggregate(e){return this.aggregateStore.getAggregate(e)}getAggregates(){return this.aggregateStore.getAggregates()}async setHighlight(e){const t=e.map((e=>this.getDisplayId(e)));return this.attributeStore.setHighlight(e,t)}_lookupObjectIdByGlobalId(e){const t=this.service.globalIdField;if(s(t))throw new Error("Expected globalIdField to be defined");let r=null;if(this.featureStore.forEach((s=>{e===s.readAttribute(t)&&(r=s.getObjectId())})),s(r))throw new Error(`Expected to find a feature with globalId ${e}`);return r}_repushCurrentLevelTiles(){const e=this.tileStore.tiles.filter((e=>e.level===this._level));for(const t of e)this._patchTile({type:"append",id:t.key.id,addOrUpdate:X.fromOptimizedFeatures([],this.service.geometryType),remove:[],end:!0,status:Oe.empty()})}_maybeForceCleanup(){performance.now()-this._lastCleanup>5e3&&this._markAndSweep()}_patchTile(e,t){const s=this._updateQueue.push(e,t).then((()=>{this.notifyChange("updating")})).catch((e=>{this.notifyChange("updating")}));return this.notifyChange("updating"),s}async _onTileMessage(e,t){y(t);const r=this.tileStore.get(e.id);if(!r)return;if(e.clear)return this.processor.onTileClear(r);const i=e.status;this._cleanupNeeded=!0;const a=[];for(const t of e.remove){const e=this.featureStore.lookupDisplayId(t);e&&a.push(e)}e.remove=a;try{if(s(e.addOrUpdate))return void this.processor.onTileMessage(r,{...e,addOrUpdate:null},this.hasAggregates,t).catch(I);if(e.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(e.addOrUpdate.instance)&&i.targets.feature||(i.targets.feature=!0,this.featureStore.onTileData(r,e)),!i.storage.data||!i.storage.filters){i.storage.data=!0,i.storage.filters=!0,this.attributeStore.onTileData(r,e);"geoevent"===this._source.type||this._didEdit?(await this.attributeStore.sendUpdates(),y(t)):this.attributeStore.sendUpdates()}if(this.hasAggregates&&!i.targets.aggregate){i.targets.aggregate=!0;const t=ut(this._source)&&this._source.loading,s=!ut(this._source)||t||e.end;if(this.aggregateStore.onTileData(r,e,this._storage,this.attributeStore,s),!s)return;i.mesh||(this.attributeStore.onTileData(r,e),await this.attributeStore.sendUpdates(),this.processor.onTileClear(r))}i.mesh||(i.mesh=!0,await this.processor.onTileMessage(r,e,this.hasAggregates,t),y(t)),this._maybeForceCleanup()}catch(e){I(e)}}_mark(e,t,s){const r=(4294901760&this._storage.getInstanceId(e))>>>16;e&&(t.add(r),s.set(e))}_markAndSweep(){this._lastCleanup=performance.now();if(!(!("feature"===this._source.type&&"snapshot"===this._source.mode)&&("geoevent"===this._source.type||this._cleanupNeeded)))return;this._cleanupNeeded=!1;const e=this._storage.getBitset(this._markedIdsBufId),t=new Set;e.clear();for(const s of this.tileStore.tiles)for(const r of this._source.readers(s.id)){const s=r.getCursor();for(;s.next();){let r=s.getDisplayId();if(!r){const e=s.getObjectId();r=this.featureStore.lookupDisplayId(e)}this._mark(r,t,e)}}"symbol"===this.processor.type&&this.processor.forEachBufferId((s=>{this._mark(s,t,e)})),this._updateQueue.forEach((s=>{for(const r of s.remove){const s=this.featureStore.lookupDisplayId(r);this._mark(s,t,e)}})),this.config.schema.targets.aggregate&&(this.aggregateStore.sweepFeatures(e,this.featureStore),this.aggregateStore.sweepClusters(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(e,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(t)}};e([l({constructOnly:!0})],ct.prototype,"tileStore",void 0),e([l()],ct.prototype,"config",void 0),e([l({readOnly:!0})],ct.prototype,"fieldsIndex",null),e([l()],ct.prototype,"processor",void 0),e([l({constructOnly:!0})],ct.prototype,"remoteClient",void 0),e([l({constructOnly:!0})],ct.prototype,"service",void 0),e([l()],ct.prototype,"spatialReference",null),e([l()],ct.prototype,"updating",null),ct=e([d("esri.views.2d.layers.features.controllers.FeatureController2D")],ct);const lt=ct,dt=new Set;function pt(){return dt}let gt=class extends t{constructor(){super(...arguments),this.controller=null,this.processor=null,this.remoteClient=null,this.tileStore=null,this.service=null,this.viewState=null,this._paused=!1,this._pendingTileUpdates=[]}initialize(){this.handles.add(this.watch("updating",(e=>{this.remoteClient.invoke("setUpdating",e).catch((e=>{}))})))}destroy(){var e,t,s;null==(e=this.controller)||e.destroy(),null==(t=this.processor)||t.destroy(),null==(s=this.tileStore)||s.destroy(),this.controller=this.processor=this.tileStore=this.remoteClient=null}get updating(){return!this.controller||this.controller.updating}async startup({service:e,config:t,tileInfo:s,tiles:r}){if(this._paused=!0,this.service=e,!this.tileStore){const e=new ve(p.fromJSON(s));this.tileStore=new le(e)}for(await this._createProcessorAndController(t),await this.update({config:t},!0),this.tileStore.clear(),this.tileStore.updateTiles(r),this._paused=!1;this._pendingTileUpdates.length;)this.tileStore.updateTiles(this._pendingTileUpdates.pop())}async updateTiles(e){this._paused?this._pendingTileUpdates.push(e):this.tileStore.updateTiles(e)}async update({config:e},t=!1){const s=Oe.empty();return t||this.controller.pause(),await Promise.all([this.processor.update(s,e),this.controller.update(s,e)]),s.toJSON()}async applyUpdate(e){return this.controller.applyUpdate(Oe.create(e))}async _createProcessorAndController(e){await Promise.all([this._handleControllerConfig(e),this._handleProcessorConfig(e)]),this.controller.processor=this.processor}async _handleControllerConfig(e){const t=await this._createController(this.service,e);return await t.startup(),t}async _handleProcessorConfig(e){return this._createProcessor(this.service,e)}async _createController(e,t){this.controller&&this.controller.destroy();const{tileStore:s,remoteClient:r}=this,i=new lt({service:e,config:t,tileStore:s,remoteClient:r});return this.controller=i,i}async _createProcessor(e,t){const s=t.schema.processors[0].type,r=(await(i=s,"heatmap"===i?import("./HeatmapProcessor.js"):import("./SymbolProcessor.js"))).default;var i;const{remoteClient:a,tileStore:o}=this,n=new r({service:e,config:t,tileStore:o,remoteClient:a});return this.processor&&this.processor.destroy(),this.processor=n,n}};e([l()],gt.prototype,"controller",void 0),e([l()],gt.prototype,"processor",void 0),e([l()],gt.prototype,"updating",null),e([l()],gt.prototype,"viewState",void 0),gt=e([d("esri.views.2d.layers.features.Pipeline")],gt);const mt=gt;export{mt as default,pt as getInstances};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{i as e,b as t}from"../core/lang.js";import{f as s,i as r,t as i}from"./mat4.js";import{c as o}from"./mat4f64.js";import{e as n,Z as a,u as h,w as l,b as p}from"./mathUtils.js";import{f as d,c as u,a as c}from"./vec4f32.js";import{V as _}from"./VisualElement.js";import{W as f,O as m}from"./ScreenSpacePass.js";import{y as g,B as y}from"./lineUtils.js";class C extends _{constructor(e){super(e.view),this._resources=null,this._transform=o()}get object(){return e(this._resources)?this._resources.object:null}get transform(){return this._transform}set transform(t){s(this._transform,t),e(this._resources)&&(this._resources.object.transformation=this._transform)}recreate(){this.attached&&this.createResources()}recreateGeometry(){if(t(this._resources))return;const e=this._resources.object,s=this.view._stage;s.removeMany(e.geometries),e.removeAllGeometries(),this.createGeometries(e),this.visible||e.setVisible(this.visible),s.addMany(e.geometries)}createResources(){this.destroyResources();const e=this.view._stage;if(!e)return;const t=new f({isPickable:!1,updatePolicy:1});e.add(t);const s=new m({castShadow:!1});s.transformation=this._transform,this.createExternalResources(),this.createGeometries(s),e.addMany(s.geometries),this.forEachExternalMaterial((t=>e.add(t))),e.add(s),t.add(s),this.visible||s.setVisible(!1),this._resources={layer:t,object:s}}destroyResources(){const e=this.view._stage;!t(this._resources)&&e&&(e.remove(this._resources.object),e.remove(this._resources.layer),this.forEachExternalMaterial((t=>{e.remove(t),t.dispose()})),e.removeMany(this._resources.object.geometries),this._resources.object.dispose(),this.destroyExternalResources(),this._resources=null)}updateVisibility(e){t(this._resources)||this._resources.object.setVisible(e)}}class w extends C{constructor(e){super(e),this._renderOccluded=4,this._width=1,this._color=d(1,0,1,1),this._innerWidth=1,this._innerColor=null,this._stipplePattern=null,this._stippleOffColor=null,this._stipplePreferContinuous=!0,this._writeDepthEnabled=!0,this._falloff=0,this._polygonOffset=!1,this.applyProps(e)}setGeometryFromRenderSpacePoint(e){const t=1e3,s=[];s.push([[e[0]-t,e[1]+0,e[2]+0],[e[0]+t,e[1]+0,e[2]+0]]),s.push([[e[0]-0,e[1]-t,e[2]+0],[e[0]+0,e[1]+t,e[2]+0]]),s.push([[e[0]-0,e[1]+0,e[2]-t],[e[0]+0,e[1]+0,e[2]+t]]),this.geometry=s}setGeometryFromExtent(e){const t=this.view.spatialReference,s=p(),r=p(),i=100,o=[];n(s,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(s,t,r),o.push([r[0],r[1],r[2]]),n(s,e[2],e[1],i),this.view.renderCoordsHelper.toRenderCoords(s,t,r),o.push([r[0],r[1],r[2]]),n(s,e[2],e[3],i),this.view.renderCoordsHelper.toRenderCoords(s,t,r),o.push([r[0],r[1],r[2]]),n(s,e[0],e[3],i),this.view.renderCoordsHelper.toRenderCoords(s,t,r),o.push([r[0],r[1],r[2]]),n(s,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(s,t,r),o.push([r[0],r[1],r[2]]),n(s,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(s,t,r),o.push([r[0],r[1],r[2]]),this.geometry=[o]}setGeometryFromFrustum(e){const t=[];e.lines.forEach((e=>{t.push([e.origin[0],e.origin[1],e.origin[2]]),t.push([e.endpoint[0],e.endpoint[1],e.endpoint[2]])})),this.geometry=[t]}setGeometryFromBoundedPlane(e){const t=[],s=e.origin,r=e.basis1,i=e.basis2,o=.5,n=p(),a=p(),h=p(),l=p();n[0]=s[0]-r[0]*o-i[0]*o,n[1]=s[1]-r[1]*o-i[1]*o,n[2]=s[2]-r[2]*o-i[2]*o,a[0]=s[0]-r[0]*o+i[0]*o,a[1]=s[1]-r[1]*o+i[1]*o,a[2]=s[2]-r[2]*o+i[2]*o,h[0]=s[0]+r[0]*o+i[0]*o,h[1]=s[1]+r[1]*o+i[1]*o,h[2]=s[2]+r[2]*o+i[2]*o,l[0]=s[0]+r[0]*o-i[0]*o,l[1]=s[1]+r[1]*o-i[1]*o,l[2]=s[2]+r[2]*o-i[2]*o,t.push([n[0],n[1],n[2]]),t.push([a[0],a[1],a[2]]),t.push([h[0],h[1],h[2]]),t.push([l[0],l[1],l[2]]),t.push([n[0],n[1],n[2]]),this.geometry=[t]}setGeometryFromSegment(e){const t=e.endRenderSpace;r(b),i(b,b,t),this.transform=b;const{points:s}=e.createRenderGeometry(t,this.view.renderCoordsHelper);this.geometry=[s]}setGeometryFromSegments(e,t=a){r(b),i(b,b,t),this.transform=b,this.geometry=e.map((e=>e.createRenderGeometry(t,this.view.renderCoordsHelper).points))}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get color(){return this._color}set color(e){h(e,this._color)||(l(this._color,e),this._updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}get innerColor(){return this._innerColor}set innerColor(s){e(s)?!t(this._innerColor)&&h(s,this._innerColor)||(this._innerColor=l(u(),s),this._updateMaterial()):e(this._innerColor)&&(this._innerColor=null,this._updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(t){const s=e(t)!==e(this._stipplePattern);this._stipplePattern=t,s?this.recreate():this._updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(s){(t(s)||t(this._stippleOffColor)||!h(s,this._stippleOffColor))&&(this._stippleOffColor=e(s)?c(s):null,this._updateMaterial())}get stipplePreferContinuous(){return this._stipplePreferContinuous}set stipplePreferContinuous(e){this._stipplePreferContinuous!==e&&(this._stipplePreferContinuous=e,this._updateMaterial())}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this._updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){e!==this._polygonOffset&&(this._polygonOffset=e,this._updateMaterial())}createExternalResources(){this._material=new g(this.materialParameters)}destroyExternalResources(){this._material=null}createGeometries(e){const t=this._createLineGeometries();if(0!==t.length)for(let s=0;s<t.length;++s){const r=y(t[s]);e.addGeometry(r,this._material)}}forEachExternalMaterial(e){e(this._material)}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,isClosed:!1,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,polygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}_updateMaterial(){this.attached&&this._material.setParameters(this.materialParameters)}_createLineGeometries(){const e=this.geometry;if(t(e)||0===e.length)return[];const s=[];return e.forEach((e=>{const t=e.length,r=new Float64Array(3*t);e.forEach(((e,t)=>{r[3*t+0]=e[0],r[3*t+1]=e[1],r[3*t+2]=e[2]}));const i={overlayInfo:null,attributeData:{position:r},removeDuplicateStartEnd:0};s.push(i)})),s}}const b=o();export{w as L,C as O};

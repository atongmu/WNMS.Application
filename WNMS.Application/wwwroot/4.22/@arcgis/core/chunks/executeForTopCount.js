/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{p as t}from"./utils3.js";import{addTokenParameter as e}from"../kernel.js";import r from"../request.js";import{addProxy as o,join as n,urlToObject as s}from"../core/urlUtils.js";import i from"../rest/query/support/AttachmentInfo.js";import{m as a,c as u,d as c}from"./query.js";import l from"../rest/support/AttachmentQuery.js";import"../geometry.js";import d from"../rest/support/Query.js";import f from"../geometry/Extent.js";import{n as y}from"./compilerUtils.js";import{b as h,i as p}from"../core/lang.js";import{g as m}from"./zscale.js";import{u as j,a as g}from"./featureConversionUtils.js";import F from"../rest/support/FeatureSet.js";import b from"../rest/support/RelationshipQuery.js";import P from"../rest/support/TopFeaturesQuery.js";import{getJsonType as R}from"../geometry/support/jsonUtils.js";import{normalizeCentralMeridian as C}from"../geometry/support/normalizeUtils.js";import{a as S}from"./queryZScale.js";function I(t){const e=t.toJSON();return e.attachmentTypes&&(e.attachmentTypes=e.attachmentTypes.join(",")),e.keywords&&(e.keywords=e.keywords.join(",")),e.globalIds&&(e.globalIds=e.globalIds.join(",")),e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.size&&(e.size=e.size.join(",")),e}function O(t,r){const n={};for(const s of t){const{parentObjectId:t,parentGlobalId:a,attachmentInfos:u}=s;for(const s of u){const{id:u}=s,c=o(e(`${r}/${t}/attachments/${u}`)),l=i.fromJSON(s);l.set({url:c,parentObjectId:t,parentGlobalId:a}),n[t]?n[t].push(l):n[t]=[l]}}return n}async function x(e,o,n){const s=t(e);return function(t,e,o){let n={query:a({...t.query,f:"json",...I(e)})};return o&&(n={...o,...n,query:{...o.query,...n.query}}),r(t.path+"/queryAttachments",n)}(s,l.from(o),{...n}).then((t=>O(t.data.attachmentGroups,s.path)))}async function G(e,r,o){const n=t(e);return u(n,d.from(r),{...o}).then((t=>({count:t.data.count,extent:f.fromJSON(t.data.extent)})))}function w(t,e){return e}function T(t,e,r,o){switch(r){case 0:return k(t,e+o,0);case 1:return"lowerLeft"===t.originPosition?k(t,e+o,1):function({translate:t,scale:e},r,o){return t[o]-r*e[o]}(t,e+o,1)}}function q(t,e,r,o){return 2===r?k(t,e,2):T(t,e,r,o)}function B(t,e,r,o){return 2===r?k(t,e,3):T(t,e,r,o)}function v(t,e,r,o){return 3===r?k(t,e,3):q(t,e,r,o)}function k({translate:t,scale:e},r,o){return t[o]+r*e[o]}class E{constructor(t){this.options=t,this.geometryTypes=["esriGeometryPoint","esriGeometryMultipoint","esriGeometryPolyline","esriGeometryPolygon"],this.previousCoordinate=[0,0],this.transform=null,this.applyTransform=w,this.lengths=[],this.currentLengthIndex=0,this.toAddInCurrentPath=0,this.vertexDimension=0,this.coordinateBuffer=null,this.coordinateBufferPtr=0,this.AttributesConstructor=function(){}}createFeatureResult(){return{fields:[],features:[]}}finishFeatureResult(t){if(this.options.applyTransform&&(t.transform=null),this.AttributesConstructor=function(){},this.coordinateBuffer=null,this.lengths.length=0,!t.hasZ)return;const e=m(t.geometryType,this.options.sourceSpatialReference,t.spatialReference);if(!h(e))for(const r of t.features)e(r.geometry)}createSpatialReference(){return{}}addField(t,e){t.fields.push(e);const r=t.fields.map((t=>t.name));this.AttributesConstructor=function(){for(const t of r)this[t]=null}}addFeature(t,e){t.features.push(e)}prepareFeatures(t){switch(this.transform=t.transform,this.options.applyTransform&&t.transform&&(this.applyTransform=this.deriveApplyTransform(t)),this.vertexDimension=2,t.hasZ&&this.vertexDimension++,t.hasM&&this.vertexDimension++,t.geometryType){case"esriGeometryPoint":this.addCoordinate=(t,e,r)=>this.addCoordinatePoint(t,e,r),this.createGeometry=t=>this.createPointGeometry(t);break;case"esriGeometryPolygon":this.addCoordinate=(t,e,r)=>this.addCoordinatePolygon(t,e,r),this.createGeometry=t=>this.createPolygonGeometry(t);break;case"esriGeometryPolyline":this.addCoordinate=(t,e,r)=>this.addCoordinatePolyline(t,e,r),this.createGeometry=t=>this.createPolylineGeometry(t);break;case"esriGeometryMultipoint":this.addCoordinate=(t,e,r)=>this.addCoordinateMultipoint(t,e,r),this.createGeometry=t=>this.createMultipointGeometry(t);break;default:y(t.geometryType)}}createFeature(){return this.lengths.length=0,this.currentLengthIndex=0,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0,this.coordinateBuffer=null,this.coordinateBufferPtr=0,{attributes:new this.AttributesConstructor}}allocateCoordinates(){}addLength(t,e,r){0===this.lengths.length&&(this.toAddInCurrentPath=e),this.lengths.push(e)}addQueryGeometry(t,e){const{queryGeometry:r,queryGeometryType:o}=e,n=j(r.clone(),r,!1,!1,this.transform),s=g(n,o,!1,!1);t.queryGeometryType=o,t.queryGeometry={...s}}createPointGeometry(t){const e={x:0,y:0,spatialReference:t.spatialReference};return t.hasZ&&(e.z=0),t.hasM&&(e.m=0),e}addCoordinatePoint(t,e,r){switch(e=this.applyTransform(this.transform,e,r,0),r){case 0:t.x=e;break;case 1:t.y=e;break;case 2:"z"in t?t.z=e:t.m=e;break;case 3:t.m=e}}transformPathLikeValue(t,e){let r=0;return e<=1&&(r=this.previousCoordinate[e],this.previousCoordinate[e]+=t),this.applyTransform(this.transform,t,e,r)}addCoordinatePolyline(t,e,r){this.dehydratedAddPointsCoordinate(t.paths,e,r)}addCoordinatePolygon(t,e,r){this.dehydratedAddPointsCoordinate(t.rings,e,r)}addCoordinateMultipoint(t,e,r){0===r&&t.points.push([]);const o=this.transformPathLikeValue(e,r);t.points[t.points.length-1].push(o)}createPolygonGeometry(t){return{rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}createPolylineGeometry(t){return{paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}createMultipointGeometry(t){return{points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}dehydratedAddPointsCoordinate(t,e,r){0===r&&0==this.toAddInCurrentPath--&&(t.push([]),this.toAddInCurrentPath=this.lengths[++this.currentLengthIndex]-1,this.previousCoordinate[0]=0,this.previousCoordinate[1]=0);const o=this.transformPathLikeValue(e,r),n=t[t.length-1];0===r&&(this.coordinateBufferPtr=0,this.coordinateBuffer=new Array(this.vertexDimension),n.push(this.coordinateBuffer)),this.coordinateBuffer[this.coordinateBufferPtr++]=o}deriveApplyTransform(t){const{hasZ:e,hasM:r}=t;return e&&r?v:e?q:r?B:T}}async function A(t,e,r){const o=await M(t,e,r);return F.fromJSON(o)}async function M(e,r,o){const n=t(e),s={...o},i=d.from(r),a=!i.quantizationParameters,{data:u}=await c(n,i,new E({sourceSpatialReference:i.sourceSpatialReference,applyTransform:a}),s);return u}function N(t,e){const r=t.toJSON();return r.objectIds&&(r.objectIds=r.objectIds.join(",")),r.orderByFields&&(r.orderByFields=r.orderByFields.join(",")),!r.outFields||null!=e&&e.returnCountOnly?delete r.outFields:-1!==r.outFields.indexOf("*")?r.outFields="*":r.outFields=r.outFields.join(","),r.outSpatialReference&&(r.outSR=r.outSR.wkid||JSON.stringify(r.outSR.toJSON()),delete r.outSpatialReference),r.dynamicDataSource&&(r.layer=JSON.stringify({source:r.dynamicDataSource}),delete r.dynamicDataSource),r}async function J(t,e,o={},n){const s=a({...t.query,f:"json",...n,...N(e,n)});return r(t.path+"/queryRelatedRecords",{...o,query:{...o.query,...s}})}async function Z(e,r,o){r=b.from(r);return async function(t,e,r){const o=await J(t,e,r),n=o.data,s=n.geometryType,i=n.spatialReference,a={};for(const t of n.relatedRecordGroups){const e={fields:void 0,objectIdFieldName:void 0,geometryType:s,spatialReference:i,hasZ:!!n.hasZ,hasM:!!n.hasM,features:t.relatedRecords};if(null!=t.objectId)a[t.objectId]=e;else for(const r in t)t.hasOwnProperty(r)&&"relatedRecords"!==r&&(a[t[r]]=e)}return{...o,data:a}}(t(e),r,o).then((t=>{const e=t.data,r={};return Object.keys(e).forEach((t=>r[t]=F.fromJSON(e[t]))),r}))}async function L(e,r,o){r=b.from(r);return async function(t,e,r){const o=await J(t,e,r,{returnCountOnly:!0}),n=o.data,s={};for(const t of n.relatedRecordGroups)null!=t.objectId&&(s[t.objectId]=t.count);return{...o,data:s}}(t(e),r,{...o}).then((t=>t.data))}function z(t,e){var r,o;const n=t.geometry,s=t.toJSON(),i=s;if(p(n)&&(i.geometry=JSON.stringify(n),i.geometryType=R(n),i.inSR=n.spatialReference.wkid||JSON.stringify(n.spatialReference)),null!=(r=s.topFilter)&&r.groupByFields&&(i.topFilter.groupByFields=s.topFilter.groupByFields.join(",")),null!=(o=s.topFilter)&&o.orderByFields&&(i.topFilter.orderByFields=s.topFilter.orderByFields.join(",")),s.topFilter&&(i.topFilter=JSON.stringify(i.topFilter)),s.objectIds&&(i.objectIds=s.objectIds.join(",")),s.orderByFields&&(i.orderByFields=s.orderByFields.join(",")),s.outFields&&!(null!=e&&e.returnCountOnly||null!=e&&e.returnExtentOnly||null!=e&&e.returnIdsOnly)?-1!==s.outFields.indexOf("*")?i.outFields="*":i.outFields=s.outFields.join(","):delete i.outFields,s.outSR?i.outSR=s.outSR.wkid||JSON.stringify(s.outSR):n&&s.returnGeometry&&(i.outSR=i.inSR),s.returnGeometry&&delete s.returnGeometry,s.timeExtent){const t=s.timeExtent,{start:e,end:r}=t;null==e&&null==r||(i.time=e===r?e:`${null==e?"null":e},${null==r?"null":r}`),delete s.timeExtent}return i}function D(t,e,o,i={},u={}){const c="string"==typeof t?s(t):t,l=e.geometry?[e.geometry]:[];return i.responseType="pbf"===o?"array-buffer":"json",C(l,null,i).then((t=>{const s=t&&t[0];p(s)&&((e=e.clone()).geometry=s);const l=a({...c.query,f:o,...u,...z(e,u)});return r(n(c.path,"queryTopFeatures"),{...i,query:{...l,...i.query}})}))}async function Q(e,r,o,n){const s=t(e),i={...n},{data:a}=await async function(t,e,r,o){const n=await D(t,e,"json",o);return S(e,r,n.data),n}(s,P.from(r),o,i);return F.fromJSON(a)}async function U(e,r,o){const n=t(e),s=await async function(t,e,r){return p(e.timeExtent)&&e.timeExtent.isEmpty?Promise.resolve({data:{objectIds:[]}}):D(t,e,"json",r,{returnIdsOnly:!0})}(n,P.from(r),{...o});return s.data.objectIds}async function $(e,r,o){const n=t(e),s=await async function(t,e,r){return p(e.timeExtent)&&e.timeExtent.isEmpty?Promise.resolve({data:{count:0,extent:null}}):D(t,e,"json",r,{returnExtentOnly:!0,returnCountOnly:!0}).then((t=>{const e=t.data;if(e.hasOwnProperty("extent"))return t;if(e.features)throw new Error("Layer does not support extent calculation.");if(e.hasOwnProperty("count"))throw new Error("Layer does not support extent calculation.");return t}))}(n,P.from(r),{...o});return{count:s.data.count,extent:f.fromJSON(s.data.extent)}}async function V(e,r,o){const n=t(e),s=await function(t,e,r){return p(e.timeExtent)&&e.timeExtent.isEmpty?Promise.resolve({data:{count:0}}):D(t,e,"json",r,{returnIdsOnly:!0,returnCountOnly:!0})}(n,P.from(r),{...o});return s.data.count}export{G as a,A as b,M as c,Z as d,x as e,L as f,Q as g,U as h,$ as i,V as j,O as p};

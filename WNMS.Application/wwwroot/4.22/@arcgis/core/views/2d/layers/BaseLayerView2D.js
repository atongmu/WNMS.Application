/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as s}from"../../../chunks/tslib.es6.js";import{property as t}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/ensureType.js";import{subclass as e}from"../../../core/accessorSupport/decorators/subclass.js";import{a as r}from"../../../chunks/aaBoundingRect.js";import"../../../chunks/TileStrategy.js";import{T as o}from"../../../chunks/TileInfoView.js";import"../../../chunks/TileKey.js";import{L as i}from"../../../chunks/LayerView2D.js";import{D as n}from"../../../chunks/Display.js";import c from"../../layers/LayerView.js";import{R as p}from"../../../chunks/RefreshableLayerView.js";import"../../../chunks/Logger.js";import"../../../config.js";import"../../../chunks/object.js";import"../../../chunks/string.js";import"../../../chunks/metadata.js";import"../../../chunks/handleUtils.js";import"../../../core/Error.js";import"../../../chunks/mathUtils.js";import"../../../chunks/common.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../chunks/JSONSupport.js";import"../../../core/Accessor.js";import"../../../chunks/deprecate.js";import"../../../chunks/ArrayPool.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../core/promiseUtils.js";import"../../../chunks/reader.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../geometry/Point.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../chunks/Ellipsoid.js";import"../../../chunks/vec2.js";import"../../../chunks/QueueProcessor.js";import"../../../chunks/Queue.js";import"../../../core/Collection.js";import"../../../chunks/Evented.js";import"../../../chunks/shared.js";import"../../../chunks/collectionUtils.js";import"../../../core/watchUtils.js";import"../../../chunks/Container.js";import"../../../chunks/mat3f32.js";import"../../../chunks/EffectView.js";import"../../../chunks/parser.js";import"../../../chunks/colorUtils.js";import"../../../chunks/screenUtils.js";import"../../../chunks/mat4.js";import"../../../chunks/_commonjsHelpers.js";import"../../../chunks/DisplayObject.js";import"../../../chunks/ClipRect.js";import"../../../geometry.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/extentUtils.js";import"../../../geometry/Polyline.js";import"../../../chunks/typeUtils.js";import"../../../chunks/jsonMap.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/Bitmap.js";import"../../../chunks/mat3.js";import"../../../chunks/vec2f32.js";import"../../../chunks/Texture.js";import"../../../chunks/BitmapContainer.js";import"../../../chunks/brushes.js";import"../../../chunks/definitions.js";import"../../../chunks/Program.js";import"../../../chunks/vec4f32.js";import"../../../chunks/Utils13.js";import"../../../chunks/number2.js";import"../../../chunks/enums.js";import"../../../chunks/FramebufferObject.js";import"../../../chunks/ShaderCompiler.js";import"../../../chunks/config.js";import"../../../chunks/GeometryUtils2.js";import"../../../chunks/MaterialKey.js";import"../../../chunks/pixelUtils.js";import"../../../layers/support/PixelBlock.js";import"../../../chunks/rasterUtils.js";import"../../../chunks/WGLContainer.js";import"../../../chunks/earcut.js";import"../../../chunks/vec2f64.js";import"../../../chunks/featureConversionUtils.js";import"../../../chunks/OptimizedFeature.js";import"../../../chunks/OptimizedFeatureSet.js";import"../../../core/HandleOwner.js";import"../../../core/Handles.js";import"../../../chunks/reactiveUtils.js";import"../../../chunks/Identifiable.js";import"../../../chunks/Promise.js";const m=new Set,h=[],u=[];class l{constructor(s,t,e,o,i,n,c,p=[0,0],m=r()){this.id=s,this.level=t,this.row=e,this.col=o,this.world=i,this.resolution=n,this.scale=c,this.coords=p,this.bounds=m}}let a=class extends(p(i(c))){constructor(s){super(s),this._tileMap=new Map,this.container=new n(this),this.layer=null,this.tiles=[]}get _tileInfoView(){const s=this.layer&&this.layer.tileInfo;return s?new o(s):null}attach(){}detach(){}requestRender(){this.container.requestRender()}tilesChanged(s,t){}async doRefresh(){}isUpdating(){return!1}update(s){const t=this._tileInfoView,e=this.tiles;if(t){const r=t.getTileCoverage(s.state,0),{spans:o,lodInfo:i}=r,{level:n}=i;if(o.length)for(const{row:s,colFrom:t,colTo:r}of o)for(let o=t;o<=r;o++){const t=i.normalizeCol(o),r=i.getWorldForColumn(o),c=`${n}/${s}/${t}/${r}`;if(!this._tileMap.has(c)){const o=new l(c,n,s,t,r,i.resolution,i.scale);i.getTileCoords(o.coords,o,!1),i.getTileBounds(o.bounds,o,!0),this._tileMap.set(c,o),e.push(o),h.push(o)}m.add(c)}}for(let s=e.length-1;s>=0;s--){const t=e[s];m.has(t.id)||(e.splice(s,1),u.push(t),this._tileMap.delete(t.id))}(h.length||u.length)&&(this.tilesChanged(h,u),h.length=u.length=0),m.clear(),this.requestRender()}moveStart(){}viewChange(){this.requestUpdate()}moveEnd(){}};s([t()],a.prototype,"_tileInfoView",null),s([t()],a.prototype,"layer",void 0),a=s([e("esri.views.2d.layers.BaseLayerView2D")],a);const j=a;export{j as default};

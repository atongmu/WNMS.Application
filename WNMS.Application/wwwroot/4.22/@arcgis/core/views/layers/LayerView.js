/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import{E as r}from"../../chunks/Evented.js";import{HandleOwnerMixin as s}from"../../core/HandleOwner.js";import{I as i}from"../../chunks/Identifiable.js";import{L as o}from"../../chunks/Logger.js";import{o as n}from"../../core/lang.js";import{a as l}from"../../chunks/Promise.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/ensureType.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/deprecate.js";import"../../chunks/metadata.js";import"../../chunks/handleUtils.js";import"../../chunks/ArrayPool.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/object.js";import"../../config.js";import"../../chunks/string.js";import"../../core/Handles.js";import"../../core/Collection.js";import"../../chunks/shared.js";import"../../chunks/reactiveUtils.js";import"../../core/watchUtils.js";let d=class extends(s(i(l(r.EventedMixin(t))))){constructor(e){super(e),this.layer=null,this.parent=null}initialize(){this.when().catch((e=>{if("layerview:create-error"!==e.name){const t=this.layer&&this.layer.id||"no id",r=this.layer&&this.layer.title||"no title";throw o.getLogger(this.declaredClass).error("#resolve()",`Failed to resolve layer view (layer title: '${r}', id: '${t}')`,e),e}}))}get fullOpacity(){return n(this.get("layer.opacity"),1)*n(this.get("parent.fullOpacity"),1)}get suspended(){return!this.canResume()}get suspendInfo(){return this.getSuspendInfo()}get legendEnabled(){return!this.suspended&&!0===this.layer.legendEnabled}get updating(){return!!(this.updatingHandles&&this.updatingHandles.updating||this.isUpdating())}get updatingProgress(){return this.updating?0:1}get visible(){var e;return!0===(null==(e=this.layer)?void 0:e.visible)}set visible(e){void 0!==e?this._override("visible",e):this._clearOverride("visible")}canResume(){return!this.get("parent.suspended")&&this.get("view.ready")&&this.get("layer.loaded")&&this.visible||!1}getSuspendInfo(){const e=this.parent&&this.parent.suspended?this.parent.suspendInfo:{};return this.view&&this.view.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0),this.visible||(e.layerInvisible=!0),e}isUpdating(){return!1}};e([a()],d.prototype,"fullOpacity",null),e([a()],d.prototype,"layer",void 0),e([a()],d.prototype,"parent",void 0),e([a({readOnly:!0})],d.prototype,"suspended",null),e([a({readOnly:!0})],d.prototype,"suspendInfo",null),e([a({readOnly:!0})],d.prototype,"legendEnabled",null),e([a({type:Boolean,readOnly:!0})],d.prototype,"updating",null),e([a({readOnly:!0})],d.prototype,"updatingProgress",null),e([a()],d.prototype,"visible",null),d=e([p("esri.views.layers.LayerView")],d);const u=d;export{u as default};

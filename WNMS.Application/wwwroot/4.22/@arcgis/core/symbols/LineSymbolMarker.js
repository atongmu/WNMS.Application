/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
import{_ as r}from"../chunks/tslib.es6.js";import o from"../Color.js";import{a as s}from"../chunks/JSONSupport.js";import{clone as t}from"../core/lang.js";import{property as e}from"../core/accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import{e as i}from"../chunks/enumeration.js";import{r as l}from"../chunks/reader.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{w as p}from"../chunks/writer.js";import"../chunks/colorUtils.js";import"../chunks/mathUtils.js";import"../chunks/common.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/object.js";import"../chunks/string.js";import"../core/Accessor.js";import"../chunks/deprecate.js";import"../chunks/metadata.js";import"../chunks/handleUtils.js";import"../chunks/ArrayPool.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../chunks/jsonMap.js";var c;let m=c=class extends s{constructor(r){super(r),this.placement="begin-end",this.type="line-marker",this.style="arrow"}writeStyle(r,o,s,t){"web-map"===(null==t?void 0:t.origin)?o[s]="arrow":o[s]=r}set color(r){this._set("color",r)}readColor(r){return r&&null!=r[0]?[r[0],r[1],r[2],r[3]/255]:r}writeColor(r,o,s,t){"web-map"===(null==t?void 0:t.origin)||(o[s]=r)}clone(){return new c({color:t(this.color),placement:this.placement,style:this.style})}hash(){var r;return`${this.placement}.${null==(r=this.color)?void 0:r.hash()}.${this.style}`}};r([e({type:["begin","end","begin-end"],json:{write:!0}})],m.prototype,"placement",void 0),r([i({"line-marker":"line-marker"},{readOnly:!0}),e({json:{origins:{"web-map":{write:!1}}}})],m.prototype,"type",void 0),r([e({type:["arrow","circle","square","diamond","cross","x"]})],m.prototype,"style",void 0),r([p("style")],m.prototype,"writeStyle",null),r([e({type:o,value:null,json:{write:{allowNull:!0}}})],m.prototype,"color",null),r([l("color")],m.prototype,"readColor",null),r([p("color")],m.prototype,"writeColor",null),m=c=r([n("esri.symbols.LineSymbolMarker")],m);const a=m;export{a as default};

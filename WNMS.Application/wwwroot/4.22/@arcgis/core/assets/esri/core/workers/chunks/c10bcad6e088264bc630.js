"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[5181],{65181:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var s=n(82058),i=n(60991),r=n(92143),o=n(76506),a=n(50406),l=n(32422),u=n(60947),c=n(40267),d=n(56761),p=n(24251),y=n(50815),h=n(90995),f=n(4571),g=n(77358),m=n(1709),_=n(54732),S=n(14249);n(31450),n(71552),n(88762),n(32101),n(40642),n(21801),n(34250),n(91306),n(86656),n(22723),n(17533),n(73796),n(74673),n(21972),n(23639),n(91055),n(6906),n(97714),n(2906),n(91597),n(86787),n(35132),n(89623),n(84069),n(44567),n(98380),n(92896),n(85674),n(76996),n(53326),n(92482),n(82426),n(29794),n(88994),n(98576),n(44722),n(71331),n(1623),n(53785),n(57251),n(95587),n(65775),n(12381),n(73173),n(92624),n(92847),n(77314),n(91700),n(95533),n(94751),n(74569),n(22781),n(30831),n(72274),n(5777),n(89219),n(71435),n(22572),n(66774),n(63683),n(94479),n(48027),n(54174),n(59465),n(45702),n(51127),n(30776),n(7176),n(60217),n(85056),n(82933),n(15324),n(39597),n(617),n(55585),n(6941);const F={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class b{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){var e;null==(e=this._queryEngine)||e.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e,t={}){this.loadOptions={url:e.url,customParameters:e.customParameters};const n=[];await this._checkProjection(e.spatialReference);let s=null;e.url&&(s=await this._fetch(null==t?void 0:t.signal));const r=(0,h.i)(s,{geometryType:e.geometryType}),o=e.fields||r.fields||[],a=null!=e.hasZ?e.hasZ:r.hasZ,l=r.geometryType,c=e.objectIdField||r.objectIdFieldName||"__OBJECTID",p=e.spatialReference||u.W;let g=e.timeInfo;o===r.fields&&r.unknownFields.length>0&&n.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:r.unknownFields}});let b=o.find((e=>e.name===c));b?("esriFieldTypeString"!==b.type&&(b.type="esriFieldTypeOID"),b.editable=!1,b.nullable=!1):(b={alias:c,name:c,type:"string"===r.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},o.unshift(b));const I={};for(const e of o){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new i.Z("geojson-layer:invalid-field-name","field name is missing",{field:e});if(!_.k.jsonValues.includes(e.type))throw new i.Z("geojson-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e});if(e.name!==b.name){const t=(0,S.os)(e);void 0!==t&&(I[e.name]=t)}}this._fieldsIndex=new m.Z(o);const w=this._fieldsIndex.requiredFields.indexOf(b);if(w>-1&&this._fieldsIndex.requiredFields.splice(w,1),g){if(g.startTimeField){const e=this._fieldsIndex.get(g.startTimeField);e?(g.startTimeField=e.name,e.type="esriFieldTypeDate"):g.startTimeField=null}if(g.endTimeField){const e=this._fieldsIndex.get(g.endTimeField);e?(g.endTimeField=e.name,e.type="esriFieldTypeDate"):g.endTimeField=null}if(g.trackIdField){const e=this._fieldsIndex.get(g.trackIdField);e?g.trackIdField=e.name:(g.trackIdField=null,n.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:g}}))}g.startTimeField||g.endTimeField||(n.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:g}}),g=null)}const E=l?(0,f.a)(l):null,T={warnings:n,featureErrors:[],layerDefinition:{...F,drawingInfo:E,templates:(0,f.d)(I),extent:null,geometryType:l,objectIdField:c,fields:o,hasZ:!!a,timeInfo:g}};this._queryEngine=new y.Q({fields:o,geometryType:l,hasM:!1,hasZ:a,objectIdField:c,spatialReference:p,timeInfo:g,featureStore:new d.F({geometryType:l,hasM:!1,hasZ:a}),cacheSpatialQueries:!0}),this._createDefaultAttributes=(0,f.b)(I,c);const j=await this._createFeatures(s);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,j);const q=this._normalizeFeatures(j,T.warnings,T.featureErrors);if(this._queryEngine.featureStore.addMany(q),T.layerDefinition.extent=this._queryEngine.fullExtent,T.layerDefinition.timeInfo){const{start:e,end:t}=this._queryEngine.timeExtent;T.layerDefinition.timeInfo.timeExtent=[e,t]}return T}async applyEdits(e){const{spatialReference:t,geometryType:n}=this._queryEngine;return await Promise.all([(0,g.l)(t,n),(0,p.c)(e.adds,t),(0,p.c)(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){var t;return this.loadOptions.customParameters=e,null==(t=this._snapshotTask)||t.abort(),this._snapshotTask=(0,a.vr)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),(0,a.D_)(e)||r.L.getLogger("esri.layers.GeoJSONLayer").error(new i.Z("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent}}async _createFeatures(e){const{geometryType:t,hasZ:n,objectIdField:s}=this._queryEngine,i=(0,h.c)(e,{geometryType:t,hasZ:n,objectIdField:s});if(!(0,u.e)(this._queryEngine.spatialReference,u.W))for(const e of i)(0,o.i)(e.geometry)&&(e.geometry=(0,c.b)((0,p.p)((0,c.a)(e.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),u.W,this._queryEngine.spatialReference)));return i}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(e){const{url:t,customParameters:n}=this.loadOptions,i=(await(0,s.default)(t,{responseType:"json",query:{...n},signal:e})).data;return await(0,h.v)(i),i}_normalizeFeatures(e,t,n){const{objectIdField:s}=this._queryEngine,i=[];for(const r of e){const e=this._createDefaultAttributes(),o=(0,g.m)(this._fieldsIndex,e,r.attributes,!0,t);o?null==n||n.push(o):(this._assignObjectId(e,r.attributes,!0),r.attributes=e,r.objectId=e[s],i.push(r))}return i}_applyEdits(e){const{adds:t,updates:n,deletes:s}=e,i={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(i,t),n&&n.length&&this._applyUpdateEdits(i,n),s&&s.length){for(const e of s)i.deleteResults.push((0,g.c)(e));this._queryEngine.featureStore.removeManyById(s)}return{extent:this._queryEngine.fullExtent,timeExtent:this._queryEngine.timeExtent,featureEditResults:i}}_applyAddEdits(e,t){const{addResults:n}=e,{geometryType:s,hasM:i,hasZ:r,objectIdField:a,spatialReference:u,featureStore:d}=this._queryEngine,y=[];for(const i of t){if(i.geometry&&s!==(0,l.Ji)(i.geometry)){n.push((0,g.a)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=(0,g.m)(this._fieldsIndex,t,i.attributes);if(r)n.push(r);else{if(this._assignObjectId(t,i.attributes),i.attributes=t,null!=i.uid){const t=i.attributes[a];e.uidToObjectId[i.uid]=t}(0,o.i)(i.geometry)&&(i.geometry=(0,p.p)((0,g.s)(i.geometry,u),i.geometry.spatialReference,u)),y.push(i),n.push((0,g.c)(i.attributes[a]))}}d.addMany((0,c.n)([],y,s,r,i,a))}_applyUpdateEdits({updateResults:e},t){const{geometryType:n,hasM:s,hasZ:i,objectIdField:r,spatialReference:a,featureStore:u}=this._queryEngine;for(const d of t){const{attributes:t,geometry:y}=d,h=t&&t[r];if(null==h){e.push((0,g.a)(`Identifier field ${r} missing`));continue}if(!u.has(h)){e.push((0,g.a)(`Feature with object id ${h} missing`));continue}const f=(0,c.o)(u.getFeature(h),n,i,s);if((0,o.i)(y)){if(n!==(0,l.Ji)(y)){e.push((0,g.a)("Incorrect geometry type."));continue}f.geometry=(0,p.p)((0,g.s)(y,a),y.spatialReference,a)}if(t){const n=(0,g.m)(this._fieldsIndex,f.attributes,t);if(n){e.push(n);continue}}u.add((0,c.p)(f,n,i,s,r)),e.push((0,g.c)(h))}}_createObjectIdGenerator(e,t){const n=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===n.type)return()=>n.name+"-"+Date.now().toString(16);let s=Number.NEGATIVE_INFINITY;for(const e of t)e.objectId&&(s=Math.max(s,e.objectId));return s=Math.max(0,s)+1,()=>s++}_assignObjectId(e,t,n=!1){const s=this._queryEngine.objectIdField;e[s]=n&&s in t?t[s]:this._objectIdGenerator()}async _checkProjection(e){try{await(0,p.c)(u.W,e)}catch{throw new i.Z("geojson-layer","Projection not supported")}}}},4571:(e,t,n)=>{n.d(t,{a:()=>o,b:()=>a,c:()=>u,d:()=>l});var s=n(76506),i=n(89219),r=n(6941);function o(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?r.d:"esriGeometryPolyline"===e?r.a:r.b}}}function a(e,t){if((0,s.h)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let n=`this.${t} = null;`;for(const t in e)n+=`this${t.includes(".")?`["${t}"]`:`.${t}`} = ${JSON.stringify(e[t])};`;const s=new Function(n);return()=>new s}catch(n){return()=>({[t]:null,...e})}}function l(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,s.d9)(e)}}]}function u(e,t){return{attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0},query:i.q,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0},editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}}},6941:(e,t,n)=>{n.d(t,{a:()=>r,b:()=>o,c:()=>a,d:()=>i,e:()=>l,f:()=>u,g:()=>c});const s=[252,146,31,255],i={type:"esriSMS",style:"esriSMSCircle",size:6,color:s,outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[153,153,153,255]}},r={type:"esriSLS",style:"esriSLSSolid",width:.75,color:s},o={type:"esriSFS",style:"esriSFSSolid",color:[252,146,31,196],outline:{type:"esriSLS",style:"esriSLSSolid",width:.75,color:[255,255,255,191]}},a={type:"esriTS",color:[255,255,255,255],font:{family:"arial-unicode-ms",size:10,weight:"bold"},horizontalAlignment:"center",kerning:!0,haloColor:[0,0,0,255],haloSize:1,rotated:!1,text:"",xoffset:0,yoffset:0,angle:0},l={type:"esriSMS",style:"esriSMSCircle",color:[0,0,0,255],outline:null,size:10.5},u={type:"esriSLS",style:"esriSLSSolid",color:[0,0,0,255],width:1.5},c={type:"esriSFS",style:"esriSFSSolid",color:[0,0,0,255],outline:null}},90995:(e,t,n)=>{n.d(t,{c:()=>I,g:()=>a,i:()=>b,v:()=>F});var s=n(60991),i=n(85674),r=n(14249);const o={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function a(e){return o[e]}function*l(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*u(e){if(!e)return null;switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function c(e){for(const t of e)if(t.length>2)return!0;return!1}function d(e){let t=0;for(let n=0;n<e.length;n++){const s=e[n],i=e[(n+1)%e.length];t+=s[0]*i[1]-i[0]*s[1]}return t<=0}function p(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function y(e,t,n){switch(t.type){case"LineString":case"MultiPoint":return function(e,t,n){return g(e,t.coordinates,n),e}(e,t,n);case"MultiLineString":return function(e,t,n){for(const s of t.coordinates)g(e,s,n);return e}(e,t,n);case"MultiPolygon":return function(e,t,n){for(const s of t.coordinates){h(e,s[0],n);for(let t=1;t<s.length;t++)f(e,s[t],n)}return e}(e,t,n);case"Point":return function(e,t,n){return _(e,t.coordinates,n),e}(e,t,n);case"Polygon":return function(e,t,n){const s=t.coordinates;h(e,s[0],n);for(let t=1;t<s.length;t++)f(e,s[t],n);return e}(e,t,n)}}function h(e,t,n){const s=p(t);d(s)?g(e,s,n):m(e,s,n)}function f(e,t,n){const s=p(t);d(s)?m(e,s,n):g(e,s,n)}function g(e,t,n){for(const s of t)_(e,s,n);e.lengths.push(t.length)}function m(e,t,n){for(let s=t.length-1;s>=0;s--)_(e,t[s],n);e.lengths.push(t.length)}function _(e,t,n){const[s,i,r]=t;e.coords.push(s,i),n.hasZ&&e.coords.push(r||0)}function S(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function F(e){if(!e)throw new s.Z("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==e.type&&"FeatureCollection"!==e.type)throw new s.Z("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:e});const{crs:t}=e;if(!t)return;const n="string"==typeof t?t:"name"===t.type?t.properties.name:"EPSG"===t.type?t.properties.code:null,i=new RegExp(".*(CRS84H?|4326)$","i");if(!n||!i.test(n))throw new s.Z("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:t})}function b(e,t={}){const n=[],s=new Set,i=new Set;let o,d=!1,p=null,y=!1,{geometryType:h=null}=t,f=!1;for(const t of l(e)){const{geometry:e,properties:r,id:l}=t;if((!e||(h||(h=a(e.type)),a(e.type)===h))&&(d||(d=c(u(e))),y||(y=null!=l,y&&(o=typeof l,p=Object.keys(r).filter((e=>r[e]===l)))),y&&null!=l&&(p.length>1?p=p.filter((e=>r[e]===l)):1===p.length&&(p=r[p[0]]===l?p:[])),!f&&r)){let e=!0;for(const t in r){if(s.has(t))continue;const o=r[t];if(null==o){e=!1,i.add(t);continue}const a=S(o);"unknown"!==a?(i.delete(t),s.add(t),n.push({name:t,alias:t,type:a})):i.add(t)}f=e}}const g=p&&1===p.length&&p[0]||null;if(g)for(const e of n)if(e.name===g&&(0,r.H7)(e)){e.type="esriFieldTypeOID";break}return{fields:n,geometryType:h,hasZ:d,objectIdFieldName:g,objectIdFieldType:o,unknownFields:Array.from(i)}}function I(e,t){return Array.from(function*(e,t={}){const{geometryType:n,objectIdField:s}=t;for(const o of e){var r;const{geometry:e,properties:l,id:u}=o;if(e&&a(e.type)!==n)continue;const c=l||{};let d=null!=(r=c[s])?r:null;s&&null!=u&&!c[s]&&(c[s]=d=u);const p=new i.a(e?y(new i.O,e,t):null,c,null,d);yield p}}(l(e),t))}}}]);